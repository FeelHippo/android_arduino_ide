// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/cli/proto/port.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.example.arduinoide.data.cli.protocol_buffers;

@kotlin.jvm.JvmName("-initializeport")
public inline fun port(block: com.example.arduinoide.data.cli.protocol_buffers.PortKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port =
  com.example.arduinoide.data.cli.protocol_buffers.PortKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port.newBuilder()).apply { block() }._build()
/**
 * ```
 * Port represents a board port that may be used to upload or to monitor a board.
 * ```
 *
 * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Port`
 */
public object PortKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port = _builder.build()

    /**
     * ```
     * Address of the port (e.g., `/dev/ttyACM0`).
     * ```
     *
     * `string address = 1;`
     */
    public var address: kotlin.String
      @kotlin.jvm.JvmName("getAddress")
        get() = _builder.address
      @kotlin.jvm.JvmName("setAddress")
        set(value) {
        _builder.address = value
      }
    /**
     * ```
     * Address of the port (e.g., `/dev/ttyACM0`).
     * ```
     *
     * `string address = 1;`
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * ```
     * The port label to show on the GUI (e.g. "ttyACM0").
     * ```
     *
     * `string label = 2;`
     */
    public var label: kotlin.String
      @kotlin.jvm.JvmName("getLabel")
        get() = _builder.label
      @kotlin.jvm.JvmName("setLabel")
        set(value) {
        _builder.label = value
      }
    /**
     * ```
     * The port label to show on the GUI (e.g. "ttyACM0").
     * ```
     *
     * `string label = 2;`
     */
    public fun clearLabel() {
      _builder.clearLabel()
    }

    /**
     * ```
     * Protocol of the port (e.g., `serial`, `network`, ...).
     * ```
     *
     * `string protocol = 3;`
     */
    public var protocol: kotlin.String
      @kotlin.jvm.JvmName("getProtocol")
        get() = _builder.protocol
      @kotlin.jvm.JvmName("setProtocol")
        set(value) {
        _builder.protocol = value
      }
    /**
     * ```
     * Protocol of the port (e.g., `serial`, `network`, ...).
     * ```
     *
     * `string protocol = 3;`
     */
    public fun clearProtocol() {
      _builder.clearProtocol()
    }

    /**
     * ```
     * A human friendly description of the protocol (e.g., "Serial Port (USB)").
     * ```
     *
     * `string protocol_label = 4;`
     */
    public var protocolLabel: kotlin.String
      @kotlin.jvm.JvmName("getProtocolLabel")
        get() = _builder.protocolLabel
      @kotlin.jvm.JvmName("setProtocolLabel")
        set(value) {
        _builder.protocolLabel = value
      }
    /**
     * ```
     * A human friendly description of the protocol (e.g., "Serial Port (USB)").
     * ```
     *
     * `string protocol_label = 4;`
     */
    public fun clearProtocolLabel() {
      _builder.clearProtocolLabel()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PropertiesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * A set of properties of the port.
     * ```
     *
     * `map<string, string> properties = 5;`
     */
     public val properties: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("getPropertiesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.propertiesMap
      )
    /**
     * ```
     * A set of properties of the port.
     * ```
     *
     * `map<string, string> properties = 5;`
     */
    @kotlin.jvm.JvmName("putProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putProperties(key, value)
       }
    /**
     * ```
     * A set of properties of the port.
     * ```
     *
     * `map<string, string> properties = 5;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setProperties")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * A set of properties of the port.
     * ```
     *
     * `map<string, string> properties = 5;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("removeProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .remove(key: kotlin.String) {
         _builder.removeProperties(key)
       }
    /**
     * ```
     * A set of properties of the port.
     * ```
     *
     * `map<string, string> properties = 5;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("putAllProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllProperties(map)
       }
    /**
     * ```
     * A set of properties of the port.
     * ```
     *
     * `map<string, string> properties = 5;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .clear() {
         _builder.clearProperties()
       }

    /**
     * ```
     * The hardware ID (serial number) of the board attached to the port.
     * ```
     *
     * `string hardware_id = 6;`
     */
    public var hardwareId: kotlin.String
      @kotlin.jvm.JvmName("getHardwareId")
        get() = _builder.hardwareId
      @kotlin.jvm.JvmName("setHardwareId")
        set(value) {
        _builder.hardwareId = value
      }
    /**
     * ```
     * The hardware ID (serial number) of the board attached to the port.
     * ```
     *
     * `string hardware_id = 6;`
     */
    public fun clearHardwareId() {
      _builder.clearHardwareId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.PortKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port =
  `com.example.arduinoide.data.cli.protocol_buffers`.PortKt.Dsl._create(this.toBuilder()).apply { block() }._build()

