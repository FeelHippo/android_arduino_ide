// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto
// Protobuf Java Version: 4.31.1

package protocol_buffers;

@com.google.protobuf.Generated
public interface CompileDiagnosticOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol_buffers.CompileDiagnostic)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Severity of the diagnostic.
   * </pre>
   *
   * <code>string severity = 1;</code>
   * @return The severity.
   */
  java.lang.String getSeverity();
  /**
   * <pre>
   * Severity of the diagnostic.
   * </pre>
   *
   * <code>string severity = 1;</code>
   * @return The bytes for severity.
   */
  com.google.protobuf.ByteString
      getSeverityBytes();

  /**
   * <pre>
   * The explanation of the diagnostic (it may be multiple preformatted lines).
   * </pre>
   *
   * <code>string message = 2;</code>
   * @return The message.
   */
  java.lang.String getMessage();
  /**
   * <pre>
   * The explanation of the diagnostic (it may be multiple preformatted lines).
   * </pre>
   *
   * <code>string message = 2;</code>
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString
      getMessageBytes();

  /**
   * <pre>
   * The file containing the diagnostic.
   * </pre>
   *
   * <code>string file = 3;</code>
   * @return The file.
   */
  java.lang.String getFile();
  /**
   * <pre>
   * The file containing the diagnostic.
   * </pre>
   *
   * <code>string file = 3;</code>
   * @return The bytes for file.
   */
  com.google.protobuf.ByteString
      getFileBytes();

  /**
   * <pre>
   * The line of the diagnostic if available (starts from 1).
   * </pre>
   *
   * <code>int64 line = 4;</code>
   * @return The line.
   */
  long getLine();

  /**
   * <pre>
   * The column of the diagnostic if available (starts from 1).
   * </pre>
   *
   * <code>int64 column = 5;</code>
   * @return The column.
   */
  long getColumn();

  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  java.util.List<protocol_buffers.CompileDiagnosticContext> 
      getContextList();
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  protocol_buffers.CompileDiagnosticContext getContext(int index);
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  int getContextCount();
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  java.util.List<? extends protocol_buffers.CompileDiagnosticContextOrBuilder> 
      getContextOrBuilderList();
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  protocol_buffers.CompileDiagnosticContextOrBuilder getContextOrBuilder(
      int index);

  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  java.util.List<protocol_buffers.CompileDiagnosticNote> 
      getNotesList();
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  protocol_buffers.CompileDiagnosticNote getNotes(int index);
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  int getNotesCount();
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  java.util.List<? extends protocol_buffers.CompileDiagnosticNoteOrBuilder> 
      getNotesOrBuilderList();
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  protocol_buffers.CompileDiagnosticNoteOrBuilder getNotesOrBuilder(
      int index);
}
