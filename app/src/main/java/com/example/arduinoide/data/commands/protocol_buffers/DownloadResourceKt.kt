// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/commands/proto/lib.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol_buffers;

@kotlin.jvm.JvmName("-initializedownloadResource")
public inline fun downloadResource(block: protocol_buffers.DownloadResourceKt.Dsl.() -> kotlin.Unit): protocol_buffers.DownloadResource =
  protocol_buffers.DownloadResourceKt.Dsl._create(protocol_buffers.DownloadResource.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol_buffers.DownloadResource`
 */
public object DownloadResourceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol_buffers.DownloadResource.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: protocol_buffers.DownloadResource.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): protocol_buffers.DownloadResource = _builder.build()

    /**
     * ```
     * Download URL of the library archive.
     * ```
     *
     * `string url = 1;`
     */
    public var url: kotlin.String
      @kotlin.jvm.JvmName("getUrl")
        get() = _builder.url
      @kotlin.jvm.JvmName("setUrl")
        set(value) {
        _builder.url = value
      }
    /**
     * ```
     * Download URL of the library archive.
     * ```
     *
     * `string url = 1;`
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * ```
     * Filename of the library archive.
     * ```
     *
     * `string archive_filename = 2;`
     */
    public var archiveFilename: kotlin.String
      @kotlin.jvm.JvmName("getArchiveFilename")
        get() = _builder.archiveFilename
      @kotlin.jvm.JvmName("setArchiveFilename")
        set(value) {
        _builder.archiveFilename = value
      }
    /**
     * ```
     * Filename of the library archive.
     * ```
     *
     * `string archive_filename = 2;`
     */
    public fun clearArchiveFilename() {
      _builder.clearArchiveFilename()
    }

    /**
     * ```
     * Checksum of the library archive.
     * ```
     *
     * `string checksum = 3;`
     */
    public var checksum: kotlin.String
      @kotlin.jvm.JvmName("getChecksum")
        get() = _builder.checksum
      @kotlin.jvm.JvmName("setChecksum")
        set(value) {
        _builder.checksum = value
      }
    /**
     * ```
     * Checksum of the library archive.
     * ```
     *
     * `string checksum = 3;`
     */
    public fun clearChecksum() {
      _builder.clearChecksum()
    }

    /**
     * ```
     * File size of the library archive.
     * ```
     *
     * `int64 size = 4;`
     */
    public var size: kotlin.Long
      @kotlin.jvm.JvmName("getSize")
        get() = _builder.size
      @kotlin.jvm.JvmName("setSize")
        set(value) {
        _builder.size = value
      }
    /**
     * ```
     * File size of the library archive.
     * ```
     *
     * `int64 size = 4;`
     */
    public fun clearSize() {
      _builder.clearSize()
    }

    /**
     * ```
     * The directory under the staging subdirectory of the data directory the
     * library archive file will be downloaded to.
     * ```
     *
     * `string cache_path = 5;`
     */
    public var cachePath: kotlin.String
      @kotlin.jvm.JvmName("getCachePath")
        get() = _builder.cachePath
      @kotlin.jvm.JvmName("setCachePath")
        set(value) {
        _builder.cachePath = value
      }
    /**
     * ```
     * The directory under the staging subdirectory of the data directory the
     * library archive file will be downloaded to.
     * ```
     *
     * `string cache_path = 5;`
     */
    public fun clearCachePath() {
      _builder.clearCachePath()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol_buffers.DownloadResource.copy(block: `protocol_buffers`.DownloadResourceKt.Dsl.() -> kotlin.Unit): protocol_buffers.DownloadResource =
  `protocol_buffers`.DownloadResourceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

