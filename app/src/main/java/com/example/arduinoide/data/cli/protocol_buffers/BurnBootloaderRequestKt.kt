// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/cli/proto/upload.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.example.arduinoide.data.cli.protocol_buffers;

@kotlin.jvm.JvmName("-initializeburnBootloaderRequest")
public inline fun burnBootloaderRequest(block: com.example.arduinoide.data.cli.protocol_buffers.BurnBootloaderRequestKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequest =
  com.example.arduinoide.data.cli.protocol_buffers.BurnBootloaderRequestKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.BurnBootloaderRequest`
 */
public object BurnBootloaderRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequest = _builder.build()

    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Instance instance = 1;`
     */
    public var instance: com.example.arduinoide.data.cli.protocol_buffers.Common.Instance
      @kotlin.jvm.JvmName("getInstance")
        get() = _builder.instance
      @kotlin.jvm.JvmName("setInstance")
        set(value) {
        _builder.instance = value
      }
    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Instance instance = 1;`
     */
    public fun clearInstance() {
      _builder.clearInstance()
    }
    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Instance instance = 1;`
     * @return Whether the instance field is set.
     */
    public fun hasInstance(): kotlin.Boolean {
      return _builder.hasInstance()
    }

    public val BurnBootloaderRequestKt.Dsl.instanceOrNull: com.example.arduinoide.data.cli.protocol_buffers.Common.Instance?
      get() = _builder.instanceOrNull

    /**
     * ```
     * Fully qualified board name of the target board (e.g., `arduino:avr:uno`).
     * ```
     *
     * `string fqbn = 2;`
     */
    public var fqbn: kotlin.String
      @kotlin.jvm.JvmName("getFqbn")
        get() = _builder.fqbn
      @kotlin.jvm.JvmName("setFqbn")
        set(value) {
        _builder.fqbn = value
      }
    /**
     * ```
     * Fully qualified board name of the target board (e.g., `arduino:avr:uno`).
     * ```
     *
     * `string fqbn = 2;`
     */
    public fun clearFqbn() {
      _builder.clearFqbn()
    }

    /**
     * ```
     * The port of the programmer used to program the bootloader.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Port port = 3;`
     */
    public var port: com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port
      @kotlin.jvm.JvmName("getPort")
        get() = _builder.port
      @kotlin.jvm.JvmName("setPort")
        set(value) {
        _builder.port = value
      }
    /**
     * ```
     * The port of the programmer used to program the bootloader.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Port port = 3;`
     */
    public fun clearPort() {
      _builder.clearPort()
    }
    /**
     * ```
     * The port of the programmer used to program the bootloader.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Port port = 3;`
     * @return Whether the port field is set.
     */
    public fun hasPort(): kotlin.Boolean {
      return _builder.hasPort()
    }

    public val BurnBootloaderRequestKt.Dsl.portOrNull: com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port?
      get() = _builder.portOrNull

    /**
     * ```
     * Whether to turn on verbose output during the programming.
     * ```
     *
     * `bool verbose = 4;`
     */
    public var verbose: kotlin.Boolean
      @kotlin.jvm.JvmName("getVerbose")
        get() = _builder.verbose
      @kotlin.jvm.JvmName("setVerbose")
        set(value) {
        _builder.verbose = value
      }
    /**
     * ```
     * Whether to turn on verbose output during the programming.
     * ```
     *
     * `bool verbose = 4;`
     */
    public fun clearVerbose() {
      _builder.clearVerbose()
    }

    /**
     * ```
     * After programming, verify the contents of the memory on the board match the
     * uploaded binary.
     * ```
     *
     * `bool verify = 5;`
     */
    public var verify: kotlin.Boolean
      @kotlin.jvm.JvmName("getVerify")
        get() = _builder.verify
      @kotlin.jvm.JvmName("setVerify")
        set(value) {
        _builder.verify = value
      }
    /**
     * ```
     * After programming, verify the contents of the memory on the board match the
     * uploaded binary.
     * ```
     *
     * `bool verify = 5;`
     */
    public fun clearVerify() {
      _builder.clearVerify()
    }

    /**
     * ```
     * The programmer to use for burning bootloader.
     * ```
     *
     * `string programmer = 6;`
     */
    public var programmer: kotlin.String
      @kotlin.jvm.JvmName("getProgrammer")
        get() = _builder.programmer
      @kotlin.jvm.JvmName("setProgrammer")
        set(value) {
        _builder.programmer = value
      }
    /**
     * ```
     * The programmer to use for burning bootloader.
     * ```
     *
     * `string programmer = 6;`
     */
    public fun clearProgrammer() {
      _builder.clearProgrammer()
    }

    /**
     * ```
     * If set to true, the actual upload will not be performed but a trace output
     * will be printed stdout. This is for debugging purposes.
     * ```
     *
     * `bool dry_run = 7;`
     */
    public var dryRun: kotlin.Boolean
      @kotlin.jvm.JvmName("getDryRun")
        get() = _builder.dryRun
      @kotlin.jvm.JvmName("setDryRun")
        set(value) {
        _builder.dryRun = value
      }
    /**
     * ```
     * If set to true, the actual upload will not be performed but a trace output
     * will be printed stdout. This is for debugging purposes.
     * ```
     *
     * `bool dry_run = 7;`
     */
    public fun clearDryRun() {
      _builder.clearDryRun()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UserFieldsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * User provided fields usually used by upload tools that need authentication
     * or in any case fields that can be customized by the user at upload time
     * and cannot be known previously.
     * For more info:
     * https://arduino.github.io/arduino-cli/latest/platform-specification/#user-provided-fields
     * ```
     *
     * `map<string, string> user_fields = 11;`
     */
     public val userFields: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, UserFieldsProxy>
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("getUserFieldsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.userFieldsMap
      )
    /**
     * ```
     * User provided fields usually used by upload tools that need authentication
     * or in any case fields that can be customized by the user at upload time
     * and cannot be known previously.
     * For more info:
     * https://arduino.github.io/arduino-cli/latest/platform-specification/#user-provided-fields
     * ```
     *
     * `map<string, string> user_fields = 11;`
     */
    @kotlin.jvm.JvmName("putUserFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, UserFieldsProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putUserFields(key, value)
       }
    /**
     * ```
     * User provided fields usually used by upload tools that need authentication
     * or in any case fields that can be customized by the user at upload time
     * and cannot be known previously.
     * For more info:
     * https://arduino.github.io/arduino-cli/latest/platform-specification/#user-provided-fields
     * ```
     *
     * `map<string, string> user_fields = 11;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setUserFields")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, UserFieldsProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * User provided fields usually used by upload tools that need authentication
     * or in any case fields that can be customized by the user at upload time
     * and cannot be known previously.
     * For more info:
     * https://arduino.github.io/arduino-cli/latest/platform-specification/#user-provided-fields
     * ```
     *
     * `map<string, string> user_fields = 11;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("removeUserFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, UserFieldsProxy>
      .remove(key: kotlin.String) {
         _builder.removeUserFields(key)
       }
    /**
     * ```
     * User provided fields usually used by upload tools that need authentication
     * or in any case fields that can be customized by the user at upload time
     * and cannot be known previously.
     * For more info:
     * https://arduino.github.io/arduino-cli/latest/platform-specification/#user-provided-fields
     * ```
     *
     * `map<string, string> user_fields = 11;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("putAllUserFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, UserFieldsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllUserFields(map)
       }
    /**
     * ```
     * User provided fields usually used by upload tools that need authentication
     * or in any case fields that can be customized by the user at upload time
     * and cannot be known previously.
     * For more info:
     * https://arduino.github.io/arduino-cli/latest/platform-specification/#user-provided-fields
     * ```
     *
     * `map<string, string> user_fields = 11;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearUserFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, UserFieldsProxy>
      .clear() {
         _builder.clearUserFields()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UploadPropertiesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of custom upload properties.
     * ```
     *
     * `repeated string upload_properties = 12;`
     * @return A list containing the uploadProperties.
     */
    public val uploadProperties: com.google.protobuf.kotlin.DslList<kotlin.String, UploadPropertiesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.uploadPropertiesList
      )
    /**
     * ```
     * List of custom upload properties.
     * ```
     *
     * `repeated string upload_properties = 12;`
     * @param value The uploadProperties to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addUploadProperties")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, UploadPropertiesProxy>.add(value: kotlin.String) {
      _builder.addUploadProperties(value)
    }
    /**
     * ```
     * List of custom upload properties.
     * ```
     *
     * `repeated string upload_properties = 12;`
     * @param value The uploadProperties to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignUploadProperties")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, UploadPropertiesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * List of custom upload properties.
     * ```
     *
     * `repeated string upload_properties = 12;`
     * @param values The uploadProperties to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllUploadProperties")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, UploadPropertiesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllUploadProperties(values)
    }
    /**
     * ```
     * List of custom upload properties.
     * ```
     *
     * `repeated string upload_properties = 12;`
     * @param values The uploadProperties to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllUploadProperties")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, UploadPropertiesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * List of custom upload properties.
     * ```
     *
     * `repeated string upload_properties = 12;`
     * @param index The index to set the value at.
     * @param value The uploadProperties to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setUploadProperties")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, UploadPropertiesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setUploadProperties(index, value)
    }/**
     * ```
     * List of custom upload properties.
     * ```
     *
     * `repeated string upload_properties = 12;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setUploadProperties")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, UploadPropertiesProxy>.clear() {
      _builder.clearUploadProperties()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequest.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.BurnBootloaderRequestKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequest =
  `com.example.arduinoide.data.cli.protocol_buffers`.BurnBootloaderRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequestOrBuilder.instanceOrNull: com.example.arduinoide.data.cli.protocol_buffers.Common.Instance?
  get() = if (hasInstance()) getInstance() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Upload.BurnBootloaderRequestOrBuilder.portOrNull: com.example.arduinoide.data.cli.protocol_buffers.PortOuterClass.Port?
  get() = if (hasPort()) getPort() else null

