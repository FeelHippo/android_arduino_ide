// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto
// Protobuf Java Version: 4.31.1

package protocol_buffers;

/**
 * Protobuf type {@code protocol_buffers.CompileRequest}
 */
@com.google.protobuf.Generated
public final class CompileRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:protocol_buffers.CompileRequest)
    CompileRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 1,
      /* suffix= */ "",
      CompileRequest.class.getName());
  }
  // Use CompileRequest.newBuilder() to construct.
  private CompileRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CompileRequest() {
    fqbn_ = "";
    sketchPath_ = "";
    buildCachePath_ = "";
    buildPath_ = "";
    buildProperties_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    warnings_ = "";
    libraries_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    exportDir_ = "";
    library_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    keysKeychain_ = "";
    signKey_ = "";
    encryptKey_ = "";
    buildCacheExtraPaths_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol_buffers.Compile.internal_static_protocol_buffers_CompileRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 22:
        return internalGetSourceOverride();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol_buffers.Compile.internal_static_protocol_buffers_CompileRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol_buffers.CompileRequest.class, protocol_buffers.CompileRequest.Builder.class);
  }

  private int bitField0_;
  public static final int INSTANCE_FIELD_NUMBER = 1;
  private protocol_buffers.Instance instance_;
  /**
   * <pre>
   * Arduino Core Service instance from the `Init` response.
   * </pre>
   *
   * <code>.protocol_buffers.Instance instance = 1;</code>
   * @return Whether the instance field is set.
   */
  @java.lang.Override
  public boolean hasInstance() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Arduino Core Service instance from the `Init` response.
   * </pre>
   *
   * <code>.protocol_buffers.Instance instance = 1;</code>
   * @return The instance.
   */
  @java.lang.Override
  public protocol_buffers.Instance getInstance() {
    return instance_ == null ? protocol_buffers.Instance.getDefaultInstance() : instance_;
  }
  /**
   * <pre>
   * Arduino Core Service instance from the `Init` response.
   * </pre>
   *
   * <code>.protocol_buffers.Instance instance = 1;</code>
   */
  @java.lang.Override
  public protocol_buffers.InstanceOrBuilder getInstanceOrBuilder() {
    return instance_ == null ? protocol_buffers.Instance.getDefaultInstance() : instance_;
  }

  public static final int FQBN_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object fqbn_ = "";
  /**
   * <pre>
   * Fully Qualified Board Name, e.g.: `arduino:avr:uno`. If this field is
   * not defined, the FQBN of the board attached to the sketch via the
   * `BoardAttach` method is used.
   * </pre>
   *
   * <code>string fqbn = 2;</code>
   * @return The fqbn.
   */
  @java.lang.Override
  public java.lang.String getFqbn() {
    java.lang.Object ref = fqbn_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fqbn_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Fully Qualified Board Name, e.g.: `arduino:avr:uno`. If this field is
   * not defined, the FQBN of the board attached to the sketch via the
   * `BoardAttach` method is used.
   * </pre>
   *
   * <code>string fqbn = 2;</code>
   * @return The bytes for fqbn.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFqbnBytes() {
    java.lang.Object ref = fqbn_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fqbn_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SKETCH_PATH_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sketchPath_ = "";
  /**
   * <pre>
   * The path where the sketch is stored.
   * </pre>
   *
   * <code>string sketch_path = 3;</code>
   * @return The sketchPath.
   */
  @java.lang.Override
  public java.lang.String getSketchPath() {
    java.lang.Object ref = sketchPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sketchPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The path where the sketch is stored.
   * </pre>
   *
   * <code>string sketch_path = 3;</code>
   * @return The bytes for sketchPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSketchPathBytes() {
    java.lang.Object ref = sketchPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sketchPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHOW_PROPERTIES_FIELD_NUMBER = 4;
  private boolean showProperties_ = false;
  /**
   * <pre>
   * Just get the build properties and do not run the full compile.
   * </pre>
   *
   * <code>bool show_properties = 4;</code>
   * @return The showProperties.
   */
  @java.lang.Override
  public boolean getShowProperties() {
    return showProperties_;
  }

  public static final int PREPROCESS_FIELD_NUMBER = 5;
  private boolean preprocess_ = false;
  /**
   * <pre>
   * Print preprocessed code to stdout instead of compiling.
   * </pre>
   *
   * <code>bool preprocess = 5;</code>
   * @return The preprocess.
   */
  @java.lang.Override
  public boolean getPreprocess() {
    return preprocess_;
  }

  public static final int BUILD_CACHE_PATH_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object buildCachePath_ = "";
  /**
   * <pre>
   * Builds of core and sketches are saved into this path to be cached and
   * reused.
   * </pre>
   *
   * <code>string build_cache_path = 6 [deprecated = true];</code>
   * @deprecated protocol_buffers.CompileRequest.build_cache_path is deprecated.
   *     See app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto;l=46
   * @return The buildCachePath.
   */
  @java.lang.Override
  @java.lang.Deprecated public java.lang.String getBuildCachePath() {
    java.lang.Object ref = buildCachePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      buildCachePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Builds of core and sketches are saved into this path to be cached and
   * reused.
   * </pre>
   *
   * <code>string build_cache_path = 6 [deprecated = true];</code>
   * @deprecated protocol_buffers.CompileRequest.build_cache_path is deprecated.
   *     See app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto;l=46
   * @return The bytes for buildCachePath.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.ByteString
      getBuildCachePathBytes() {
    java.lang.Object ref = buildCachePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      buildCachePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BUILD_PATH_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object buildPath_ = "";
  /**
   * <pre>
   * Path to use to store the files used for the compilation. If omitted,
   * a directory will be created in the operating system's default temporary
   * path.
   * </pre>
   *
   * <code>string build_path = 7;</code>
   * @return The buildPath.
   */
  @java.lang.Override
  public java.lang.String getBuildPath() {
    java.lang.Object ref = buildPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      buildPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Path to use to store the files used for the compilation. If omitted,
   * a directory will be created in the operating system's default temporary
   * path.
   * </pre>
   *
   * <code>string build_path = 7;</code>
   * @return The bytes for buildPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBuildPathBytes() {
    java.lang.Object ref = buildPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      buildPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BUILD_PROPERTIES_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList buildProperties_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * List of custom build properties.
   * </pre>
   *
   * <code>repeated string build_properties = 8;</code>
   * @return A list containing the buildProperties.
   */
  public com.google.protobuf.ProtocolStringList
      getBuildPropertiesList() {
    return buildProperties_;
  }
  /**
   * <pre>
   * List of custom build properties.
   * </pre>
   *
   * <code>repeated string build_properties = 8;</code>
   * @return The count of buildProperties.
   */
  public int getBuildPropertiesCount() {
    return buildProperties_.size();
  }
  /**
   * <pre>
   * List of custom build properties.
   * </pre>
   *
   * <code>repeated string build_properties = 8;</code>
   * @param index The index of the element to return.
   * @return The buildProperties at the given index.
   */
  public java.lang.String getBuildProperties(int index) {
    return buildProperties_.get(index);
  }
  /**
   * <pre>
   * List of custom build properties.
   * </pre>
   *
   * <code>repeated string build_properties = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the buildProperties at the given index.
   */
  public com.google.protobuf.ByteString
      getBuildPropertiesBytes(int index) {
    return buildProperties_.getByteString(index);
  }

  public static final int WARNINGS_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object warnings_ = "";
  /**
   * <pre>
   * Used to tell gcc which warning level to use. The level names are: "none",
   * "default", "more" and "all".
   * </pre>
   *
   * <code>string warnings = 9;</code>
   * @return The warnings.
   */
  @java.lang.Override
  public java.lang.String getWarnings() {
    java.lang.Object ref = warnings_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      warnings_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Used to tell gcc which warning level to use. The level names are: "none",
   * "default", "more" and "all".
   * </pre>
   *
   * <code>string warnings = 9;</code>
   * @return The bytes for warnings.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWarningsBytes() {
    java.lang.Object ref = warnings_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      warnings_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERBOSE_FIELD_NUMBER = 10;
  private boolean verbose_ = false;
  /**
   * <pre>
   * Turns on verbose mode.
   * </pre>
   *
   * <code>bool verbose = 10;</code>
   * @return The verbose.
   */
  @java.lang.Override
  public boolean getVerbose() {
    return verbose_;
  }

  public static final int QUIET_FIELD_NUMBER = 11;
  private boolean quiet_ = false;
  /**
   * <pre>
   * Suppresses almost every output.
   * </pre>
   *
   * <code>bool quiet = 11;</code>
   * @return The quiet.
   */
  @java.lang.Override
  public boolean getQuiet() {
    return quiet_;
  }

  public static final int JOBS_FIELD_NUMBER = 14;
  private int jobs_ = 0;
  /**
   * <pre>
   * The max number of concurrent compiler instances to run (as `make -jx`).
   * If jobs is set to 0, it will use the number of available CPUs as the
   * maximum.
   * </pre>
   *
   * <code>int32 jobs = 14;</code>
   * @return The jobs.
   */
  @java.lang.Override
  public int getJobs() {
    return jobs_;
  }

  public static final int LIBRARIES_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList libraries_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * A list of paths to directories containing a collection of libraries.
   * </pre>
   *
   * <code>repeated string libraries = 15;</code>
   * @return A list containing the libraries.
   */
  public com.google.protobuf.ProtocolStringList
      getLibrariesList() {
    return libraries_;
  }
  /**
   * <pre>
   * A list of paths to directories containing a collection of libraries.
   * </pre>
   *
   * <code>repeated string libraries = 15;</code>
   * @return The count of libraries.
   */
  public int getLibrariesCount() {
    return libraries_.size();
  }
  /**
   * <pre>
   * A list of paths to directories containing a collection of libraries.
   * </pre>
   *
   * <code>repeated string libraries = 15;</code>
   * @param index The index of the element to return.
   * @return The libraries at the given index.
   */
  public java.lang.String getLibraries(int index) {
    return libraries_.get(index);
  }
  /**
   * <pre>
   * A list of paths to directories containing a collection of libraries.
   * </pre>
   *
   * <code>repeated string libraries = 15;</code>
   * @param index The index of the value to return.
   * @return The bytes of the libraries at the given index.
   */
  public com.google.protobuf.ByteString
      getLibrariesBytes(int index) {
    return libraries_.getByteString(index);
  }

  public static final int OPTIMIZE_FOR_DEBUG_FIELD_NUMBER = 16;
  private boolean optimizeForDebug_ = false;
  /**
   * <pre>
   * Optimize compile output for debug, not for release.
   * </pre>
   *
   * <code>bool optimize_for_debug = 16;</code>
   * @return The optimizeForDebug.
   */
  @java.lang.Override
  public boolean getOptimizeForDebug() {
    return optimizeForDebug_;
  }

  public static final int EXPORT_DIR_FIELD_NUMBER = 18;
  @SuppressWarnings("serial")
  private volatile java.lang.Object exportDir_ = "";
  /**
   * <pre>
   * Optional: save the build artifacts in this directory, the directory must
   * exist.
   * </pre>
   *
   * <code>string export_dir = 18;</code>
   * @return The exportDir.
   */
  @java.lang.Override
  public java.lang.String getExportDir() {
    java.lang.Object ref = exportDir_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      exportDir_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: save the build artifacts in this directory, the directory must
   * exist.
   * </pre>
   *
   * <code>string export_dir = 18;</code>
   * @return The bytes for exportDir.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExportDirBytes() {
    java.lang.Object ref = exportDir_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      exportDir_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLEAN_FIELD_NUMBER = 19;
  private boolean clean_ = false;
  /**
   * <pre>
   * Optional: cleanup the build folder and do not use any previously cached
   * build.
   * </pre>
   *
   * <code>bool clean = 19;</code>
   * @return The clean.
   */
  @java.lang.Override
  public boolean getClean() {
    return clean_;
  }

  public static final int CREATE_COMPILATION_DATABASE_ONLY_FIELD_NUMBER = 21;
  private boolean createCompilationDatabaseOnly_ = false;
  /**
   * <pre>
   * When set to `true` only the compilation database will be produced and no
   * actual build will be performed.
   * </pre>
   *
   * <code>bool create_compilation_database_only = 21;</code>
   * @return The createCompilationDatabaseOnly.
   */
  @java.lang.Override
  public boolean getCreateCompilationDatabaseOnly() {
    return createCompilationDatabaseOnly_;
  }

  public static final int SOURCE_OVERRIDE_FIELD_NUMBER = 22;
  private static final class SourceOverrideDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                protocol_buffers.Compile.internal_static_protocol_buffers_CompileRequest_SourceOverrideEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> sourceOverride_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetSourceOverride() {
    if (sourceOverride_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          SourceOverrideDefaultEntryHolder.defaultEntry);
    }
    return sourceOverride_;
  }
  public int getSourceOverrideCount() {
    return internalGetSourceOverride().getMap().size();
  }
  /**
   * <pre>
   * This map (source file -&gt; new content) let the builder use the provided
   * content instead of reading the corresponding file on disk. This is useful
   * for IDE that have unsaved changes in memory. The path must be relative to
   * the sketch directory. Only files from the sketch are allowed.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_override = 22;</code>
   */
  @java.lang.Override
  public boolean containsSourceOverride(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetSourceOverride().getMap().containsKey(key);
  }
  /**
   * Use {@link #getSourceOverrideMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getSourceOverride() {
    return getSourceOverrideMap();
  }
  /**
   * <pre>
   * This map (source file -&gt; new content) let the builder use the provided
   * content instead of reading the corresponding file on disk. This is useful
   * for IDE that have unsaved changes in memory. The path must be relative to
   * the sketch directory. Only files from the sketch are allowed.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_override = 22;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getSourceOverrideMap() {
    return internalGetSourceOverride().getMap();
  }
  /**
   * <pre>
   * This map (source file -&gt; new content) let the builder use the provided
   * content instead of reading the corresponding file on disk. This is useful
   * for IDE that have unsaved changes in memory. The path must be relative to
   * the sketch directory. Only files from the sketch are allowed.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_override = 22;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getSourceOverrideOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSourceOverride().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * This map (source file -&gt; new content) let the builder use the provided
   * content instead of reading the corresponding file on disk. This is useful
   * for IDE that have unsaved changes in memory. The path must be relative to
   * the sketch directory. Only files from the sketch are allowed.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_override = 22;</code>
   */
  @java.lang.Override
  public java.lang.String getSourceOverrideOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSourceOverride().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int EXPORT_BINARIES_FIELD_NUMBER = 23;
  private boolean exportBinaries_ = false;
  /**
   * <pre>
   * When set to `true` the compiled binary will be copied to the export
   * directory.
   * </pre>
   *
   * <code>optional bool export_binaries = 23;</code>
   * @return Whether the exportBinaries field is set.
   */
  @java.lang.Override
  public boolean hasExportBinaries() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * When set to `true` the compiled binary will be copied to the export
   * directory.
   * </pre>
   *
   * <code>optional bool export_binaries = 23;</code>
   * @return The exportBinaries.
   */
  @java.lang.Override
  public boolean getExportBinaries() {
    return exportBinaries_;
  }

  public static final int LIBRARY_FIELD_NUMBER = 24;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList library_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * A list of paths to single libraries root directory.
   * </pre>
   *
   * <code>repeated string library = 24;</code>
   * @return A list containing the library.
   */
  public com.google.protobuf.ProtocolStringList
      getLibraryList() {
    return library_;
  }
  /**
   * <pre>
   * A list of paths to single libraries root directory.
   * </pre>
   *
   * <code>repeated string library = 24;</code>
   * @return The count of library.
   */
  public int getLibraryCount() {
    return library_.size();
  }
  /**
   * <pre>
   * A list of paths to single libraries root directory.
   * </pre>
   *
   * <code>repeated string library = 24;</code>
   * @param index The index of the element to return.
   * @return The library at the given index.
   */
  public java.lang.String getLibrary(int index) {
    return library_.get(index);
  }
  /**
   * <pre>
   * A list of paths to single libraries root directory.
   * </pre>
   *
   * <code>repeated string library = 24;</code>
   * @param index The index of the value to return.
   * @return The bytes of the library at the given index.
   */
  public com.google.protobuf.ByteString
      getLibraryBytes(int index) {
    return library_.getByteString(index);
  }

  public static final int KEYS_KEYCHAIN_FIELD_NUMBER = 25;
  @SuppressWarnings("serial")
  private volatile java.lang.Object keysKeychain_ = "";
  /**
   * <pre>
   * The path where to search for the custom signing key name and the encrypt
   * key name.
   * </pre>
   *
   * <code>string keys_keychain = 25;</code>
   * @return The keysKeychain.
   */
  @java.lang.Override
  public java.lang.String getKeysKeychain() {
    java.lang.Object ref = keysKeychain_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keysKeychain_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The path where to search for the custom signing key name and the encrypt
   * key name.
   * </pre>
   *
   * <code>string keys_keychain = 25;</code>
   * @return The bytes for keysKeychain.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeysKeychainBytes() {
    java.lang.Object ref = keysKeychain_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keysKeychain_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIGN_KEY_FIELD_NUMBER = 26;
  @SuppressWarnings("serial")
  private volatile java.lang.Object signKey_ = "";
  /**
   * <pre>
   * The name of the custom key to use for signing during the compile process.
   * </pre>
   *
   * <code>string sign_key = 26;</code>
   * @return The signKey.
   */
  @java.lang.Override
  public java.lang.String getSignKey() {
    java.lang.Object ref = signKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      signKey_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the custom key to use for signing during the compile process.
   * </pre>
   *
   * <code>string sign_key = 26;</code>
   * @return The bytes for signKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSignKeyBytes() {
    java.lang.Object ref = signKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      signKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENCRYPT_KEY_FIELD_NUMBER = 27;
  @SuppressWarnings("serial")
  private volatile java.lang.Object encryptKey_ = "";
  /**
   * <pre>
   * The name of the custom key to use for encrypting during the compile process.
   * </pre>
   *
   * <code>string encrypt_key = 27;</code>
   * @return The encryptKey.
   */
  @java.lang.Override
  public java.lang.String getEncryptKey() {
    java.lang.Object ref = encryptKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      encryptKey_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the custom key to use for encrypting during the compile process.
   * </pre>
   *
   * <code>string encrypt_key = 27;</code>
   * @return The bytes for encryptKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEncryptKeyBytes() {
    java.lang.Object ref = encryptKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      encryptKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SKIP_LIBRARIES_DISCOVERY_FIELD_NUMBER = 28;
  private boolean skipLibrariesDiscovery_ = false;
  /**
   * <pre>
   * If set to true the build will skip the library discovery process and will
   * use the same libraries of latest build. Enabling this flag may produce a
   * wrong output and should not be used in regular compiles unless there is a
   * very specific reason to do so. This flag is mainly provided for usage in
   * language servers to optimize the build speed in some particular cases.
   * </pre>
   *
   * <code>bool skip_libraries_discovery = 28;</code>
   * @return The skipLibrariesDiscovery.
   */
  @java.lang.Override
  public boolean getSkipLibrariesDiscovery() {
    return skipLibrariesDiscovery_;
  }

  public static final int DO_NOT_EXPAND_BUILD_PROPERTIES_FIELD_NUMBER = 29;
  private boolean doNotExpandBuildProperties_ = false;
  /**
   * <pre>
   * If set to true the returned build properties will be left unexpanded, with
   * the variables placeholders exactly as defined in the platform.
   * </pre>
   *
   * <code>bool do_not_expand_build_properties = 29;</code>
   * @return The doNotExpandBuildProperties.
   */
  @java.lang.Override
  public boolean getDoNotExpandBuildProperties() {
    return doNotExpandBuildProperties_;
  }

  public static final int BUILD_CACHE_EXTRA_PATHS_FIELD_NUMBER = 30;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList buildCacheExtraPaths_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Search for precompiled cores in the given paths and use them if found.
   * This search is performed after the standard build_cache directory.
   * </pre>
   *
   * <code>repeated string build_cache_extra_paths = 30;</code>
   * @return A list containing the buildCacheExtraPaths.
   */
  public com.google.protobuf.ProtocolStringList
      getBuildCacheExtraPathsList() {
    return buildCacheExtraPaths_;
  }
  /**
   * <pre>
   * Search for precompiled cores in the given paths and use them if found.
   * This search is performed after the standard build_cache directory.
   * </pre>
   *
   * <code>repeated string build_cache_extra_paths = 30;</code>
   * @return The count of buildCacheExtraPaths.
   */
  public int getBuildCacheExtraPathsCount() {
    return buildCacheExtraPaths_.size();
  }
  /**
   * <pre>
   * Search for precompiled cores in the given paths and use them if found.
   * This search is performed after the standard build_cache directory.
   * </pre>
   *
   * <code>repeated string build_cache_extra_paths = 30;</code>
   * @param index The index of the element to return.
   * @return The buildCacheExtraPaths at the given index.
   */
  public java.lang.String getBuildCacheExtraPaths(int index) {
    return buildCacheExtraPaths_.get(index);
  }
  /**
   * <pre>
   * Search for precompiled cores in the given paths and use them if found.
   * This search is performed after the standard build_cache directory.
   * </pre>
   *
   * <code>repeated string build_cache_extra_paths = 30;</code>
   * @param index The index of the value to return.
   * @return The bytes of the buildCacheExtraPaths at the given index.
   */
  public com.google.protobuf.ByteString
      getBuildCacheExtraPathsBytes(int index) {
    return buildCacheExtraPaths_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getInstance());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fqbn_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, fqbn_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(sketchPath_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, sketchPath_);
    }
    if (showProperties_ != false) {
      output.writeBool(4, showProperties_);
    }
    if (preprocess_ != false) {
      output.writeBool(5, preprocess_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(buildCachePath_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, buildCachePath_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(buildPath_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 7, buildPath_);
    }
    for (int i = 0; i < buildProperties_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 8, buildProperties_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(warnings_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 9, warnings_);
    }
    if (verbose_ != false) {
      output.writeBool(10, verbose_);
    }
    if (quiet_ != false) {
      output.writeBool(11, quiet_);
    }
    if (jobs_ != 0) {
      output.writeInt32(14, jobs_);
    }
    for (int i = 0; i < libraries_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 15, libraries_.getRaw(i));
    }
    if (optimizeForDebug_ != false) {
      output.writeBool(16, optimizeForDebug_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(exportDir_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 18, exportDir_);
    }
    if (clean_ != false) {
      output.writeBool(19, clean_);
    }
    if (createCompilationDatabaseOnly_ != false) {
      output.writeBool(21, createCompilationDatabaseOnly_);
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetSourceOverride(),
        SourceOverrideDefaultEntryHolder.defaultEntry,
        22);
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(23, exportBinaries_);
    }
    for (int i = 0; i < library_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 24, library_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(keysKeychain_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 25, keysKeychain_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(signKey_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 26, signKey_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(encryptKey_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 27, encryptKey_);
    }
    if (skipLibrariesDiscovery_ != false) {
      output.writeBool(28, skipLibrariesDiscovery_);
    }
    if (doNotExpandBuildProperties_ != false) {
      output.writeBool(29, doNotExpandBuildProperties_);
    }
    for (int i = 0; i < buildCacheExtraPaths_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 30, buildCacheExtraPaths_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInstance());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fqbn_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, fqbn_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(sketchPath_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, sketchPath_);
    }
    if (showProperties_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, showProperties_);
    }
    if (preprocess_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, preprocess_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(buildCachePath_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, buildCachePath_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(buildPath_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(7, buildPath_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < buildProperties_.size(); i++) {
        dataSize += computeStringSizeNoTag(buildProperties_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getBuildPropertiesList().size();
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(warnings_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(9, warnings_);
    }
    if (verbose_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, verbose_);
    }
    if (quiet_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, quiet_);
    }
    if (jobs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, jobs_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < libraries_.size(); i++) {
        dataSize += computeStringSizeNoTag(libraries_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getLibrariesList().size();
    }
    if (optimizeForDebug_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(16, optimizeForDebug_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(exportDir_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(18, exportDir_);
    }
    if (clean_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(19, clean_);
    }
    if (createCompilationDatabaseOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(21, createCompilationDatabaseOnly_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetSourceOverride().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      sourceOverride__ = SourceOverrideDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, sourceOverride__);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(23, exportBinaries_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < library_.size(); i++) {
        dataSize += computeStringSizeNoTag(library_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getLibraryList().size();
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(keysKeychain_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(25, keysKeychain_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(signKey_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(26, signKey_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(encryptKey_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(27, encryptKey_);
    }
    if (skipLibrariesDiscovery_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(28, skipLibrariesDiscovery_);
    }
    if (doNotExpandBuildProperties_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(29, doNotExpandBuildProperties_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < buildCacheExtraPaths_.size(); i++) {
        dataSize += computeStringSizeNoTag(buildCacheExtraPaths_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getBuildCacheExtraPathsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol_buffers.CompileRequest)) {
      return super.equals(obj);
    }
    protocol_buffers.CompileRequest other = (protocol_buffers.CompileRequest) obj;

    if (hasInstance() != other.hasInstance()) return false;
    if (hasInstance()) {
      if (!getInstance()
          .equals(other.getInstance())) return false;
    }
    if (!getFqbn()
        .equals(other.getFqbn())) return false;
    if (!getSketchPath()
        .equals(other.getSketchPath())) return false;
    if (getShowProperties()
        != other.getShowProperties()) return false;
    if (getPreprocess()
        != other.getPreprocess()) return false;
    if (!getBuildCachePath()
        .equals(other.getBuildCachePath())) return false;
    if (!getBuildPath()
        .equals(other.getBuildPath())) return false;
    if (!getBuildPropertiesList()
        .equals(other.getBuildPropertiesList())) return false;
    if (!getWarnings()
        .equals(other.getWarnings())) return false;
    if (getVerbose()
        != other.getVerbose()) return false;
    if (getQuiet()
        != other.getQuiet()) return false;
    if (getJobs()
        != other.getJobs()) return false;
    if (!getLibrariesList()
        .equals(other.getLibrariesList())) return false;
    if (getOptimizeForDebug()
        != other.getOptimizeForDebug()) return false;
    if (!getExportDir()
        .equals(other.getExportDir())) return false;
    if (getClean()
        != other.getClean()) return false;
    if (getCreateCompilationDatabaseOnly()
        != other.getCreateCompilationDatabaseOnly()) return false;
    if (!internalGetSourceOverride().equals(
        other.internalGetSourceOverride())) return false;
    if (hasExportBinaries() != other.hasExportBinaries()) return false;
    if (hasExportBinaries()) {
      if (getExportBinaries()
          != other.getExportBinaries()) return false;
    }
    if (!getLibraryList()
        .equals(other.getLibraryList())) return false;
    if (!getKeysKeychain()
        .equals(other.getKeysKeychain())) return false;
    if (!getSignKey()
        .equals(other.getSignKey())) return false;
    if (!getEncryptKey()
        .equals(other.getEncryptKey())) return false;
    if (getSkipLibrariesDiscovery()
        != other.getSkipLibrariesDiscovery()) return false;
    if (getDoNotExpandBuildProperties()
        != other.getDoNotExpandBuildProperties()) return false;
    if (!getBuildCacheExtraPathsList()
        .equals(other.getBuildCacheExtraPathsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInstance()) {
      hash = (37 * hash) + INSTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getInstance().hashCode();
    }
    hash = (37 * hash) + FQBN_FIELD_NUMBER;
    hash = (53 * hash) + getFqbn().hashCode();
    hash = (37 * hash) + SKETCH_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getSketchPath().hashCode();
    hash = (37 * hash) + SHOW_PROPERTIES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getShowProperties());
    hash = (37 * hash) + PREPROCESS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPreprocess());
    hash = (37 * hash) + BUILD_CACHE_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getBuildCachePath().hashCode();
    hash = (37 * hash) + BUILD_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getBuildPath().hashCode();
    if (getBuildPropertiesCount() > 0) {
      hash = (37 * hash) + BUILD_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getBuildPropertiesList().hashCode();
    }
    hash = (37 * hash) + WARNINGS_FIELD_NUMBER;
    hash = (53 * hash) + getWarnings().hashCode();
    hash = (37 * hash) + VERBOSE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getVerbose());
    hash = (37 * hash) + QUIET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getQuiet());
    hash = (37 * hash) + JOBS_FIELD_NUMBER;
    hash = (53 * hash) + getJobs();
    if (getLibrariesCount() > 0) {
      hash = (37 * hash) + LIBRARIES_FIELD_NUMBER;
      hash = (53 * hash) + getLibrariesList().hashCode();
    }
    hash = (37 * hash) + OPTIMIZE_FOR_DEBUG_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOptimizeForDebug());
    hash = (37 * hash) + EXPORT_DIR_FIELD_NUMBER;
    hash = (53 * hash) + getExportDir().hashCode();
    hash = (37 * hash) + CLEAN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getClean());
    hash = (37 * hash) + CREATE_COMPILATION_DATABASE_ONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCreateCompilationDatabaseOnly());
    if (!internalGetSourceOverride().getMap().isEmpty()) {
      hash = (37 * hash) + SOURCE_OVERRIDE_FIELD_NUMBER;
      hash = (53 * hash) + internalGetSourceOverride().hashCode();
    }
    if (hasExportBinaries()) {
      hash = (37 * hash) + EXPORT_BINARIES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getExportBinaries());
    }
    if (getLibraryCount() > 0) {
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibraryList().hashCode();
    }
    hash = (37 * hash) + KEYS_KEYCHAIN_FIELD_NUMBER;
    hash = (53 * hash) + getKeysKeychain().hashCode();
    hash = (37 * hash) + SIGN_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getSignKey().hashCode();
    hash = (37 * hash) + ENCRYPT_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getEncryptKey().hashCode();
    hash = (37 * hash) + SKIP_LIBRARIES_DISCOVERY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSkipLibrariesDiscovery());
    hash = (37 * hash) + DO_NOT_EXPAND_BUILD_PROPERTIES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDoNotExpandBuildProperties());
    if (getBuildCacheExtraPathsCount() > 0) {
      hash = (37 * hash) + BUILD_CACHE_EXTRA_PATHS_FIELD_NUMBER;
      hash = (53 * hash) + getBuildCacheExtraPathsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol_buffers.CompileRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol_buffers.CompileRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol_buffers.CompileRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol_buffers.CompileRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol_buffers.CompileRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol_buffers.CompileRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol_buffers.CompileRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static protocol_buffers.CompileRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static protocol_buffers.CompileRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static protocol_buffers.CompileRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol_buffers.CompileRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static protocol_buffers.CompileRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol_buffers.CompileRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code protocol_buffers.CompileRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol_buffers.CompileRequest)
      protocol_buffers.CompileRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_buffers.Compile.internal_static_protocol_buffers_CompileRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 22:
          return internalGetSourceOverride();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 22:
          return internalGetMutableSourceOverride();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_buffers.Compile.internal_static_protocol_buffers_CompileRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_buffers.CompileRequest.class, protocol_buffers.CompileRequest.Builder.class);
    }

    // Construct using protocol_buffers.CompileRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        internalGetInstanceFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      instance_ = null;
      if (instanceBuilder_ != null) {
        instanceBuilder_.dispose();
        instanceBuilder_ = null;
      }
      fqbn_ = "";
      sketchPath_ = "";
      showProperties_ = false;
      preprocess_ = false;
      buildCachePath_ = "";
      buildPath_ = "";
      buildProperties_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      warnings_ = "";
      verbose_ = false;
      quiet_ = false;
      jobs_ = 0;
      libraries_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      optimizeForDebug_ = false;
      exportDir_ = "";
      clean_ = false;
      createCompilationDatabaseOnly_ = false;
      internalGetMutableSourceOverride().clear();
      exportBinaries_ = false;
      library_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      keysKeychain_ = "";
      signKey_ = "";
      encryptKey_ = "";
      skipLibrariesDiscovery_ = false;
      doNotExpandBuildProperties_ = false;
      buildCacheExtraPaths_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol_buffers.Compile.internal_static_protocol_buffers_CompileRequest_descriptor;
    }

    @java.lang.Override
    public protocol_buffers.CompileRequest getDefaultInstanceForType() {
      return protocol_buffers.CompileRequest.getDefaultInstance();
    }

    @java.lang.Override
    public protocol_buffers.CompileRequest build() {
      protocol_buffers.CompileRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public protocol_buffers.CompileRequest buildPartial() {
      protocol_buffers.CompileRequest result = new protocol_buffers.CompileRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(protocol_buffers.CompileRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.instance_ = instanceBuilder_ == null
            ? instance_
            : instanceBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.fqbn_ = fqbn_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.sketchPath_ = sketchPath_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.showProperties_ = showProperties_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.preprocess_ = preprocess_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.buildCachePath_ = buildCachePath_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.buildPath_ = buildPath_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        buildProperties_.makeImmutable();
        result.buildProperties_ = buildProperties_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.warnings_ = warnings_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.verbose_ = verbose_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.quiet_ = quiet_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.jobs_ = jobs_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        libraries_.makeImmutable();
        result.libraries_ = libraries_;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.optimizeForDebug_ = optimizeForDebug_;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.exportDir_ = exportDir_;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.clean_ = clean_;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.createCompilationDatabaseOnly_ = createCompilationDatabaseOnly_;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.sourceOverride_ = internalGetSourceOverride();
        result.sourceOverride_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.exportBinaries_ = exportBinaries_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        library_.makeImmutable();
        result.library_ = library_;
      }
      if (((from_bitField0_ & 0x00100000) != 0)) {
        result.keysKeychain_ = keysKeychain_;
      }
      if (((from_bitField0_ & 0x00200000) != 0)) {
        result.signKey_ = signKey_;
      }
      if (((from_bitField0_ & 0x00400000) != 0)) {
        result.encryptKey_ = encryptKey_;
      }
      if (((from_bitField0_ & 0x00800000) != 0)) {
        result.skipLibrariesDiscovery_ = skipLibrariesDiscovery_;
      }
      if (((from_bitField0_ & 0x01000000) != 0)) {
        result.doNotExpandBuildProperties_ = doNotExpandBuildProperties_;
      }
      if (((from_bitField0_ & 0x02000000) != 0)) {
        buildCacheExtraPaths_.makeImmutable();
        result.buildCacheExtraPaths_ = buildCacheExtraPaths_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol_buffers.CompileRequest) {
        return mergeFrom((protocol_buffers.CompileRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol_buffers.CompileRequest other) {
      if (other == protocol_buffers.CompileRequest.getDefaultInstance()) return this;
      if (other.hasInstance()) {
        mergeInstance(other.getInstance());
      }
      if (!other.getFqbn().isEmpty()) {
        fqbn_ = other.fqbn_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getSketchPath().isEmpty()) {
        sketchPath_ = other.sketchPath_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getShowProperties() != false) {
        setShowProperties(other.getShowProperties());
      }
      if (other.getPreprocess() != false) {
        setPreprocess(other.getPreprocess());
      }
      if (!other.getBuildCachePath().isEmpty()) {
        buildCachePath_ = other.buildCachePath_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getBuildPath().isEmpty()) {
        buildPath_ = other.buildPath_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (!other.buildProperties_.isEmpty()) {
        if (buildProperties_.isEmpty()) {
          buildProperties_ = other.buildProperties_;
          bitField0_ |= 0x00000080;
        } else {
          ensureBuildPropertiesIsMutable();
          buildProperties_.addAll(other.buildProperties_);
        }
        onChanged();
      }
      if (!other.getWarnings().isEmpty()) {
        warnings_ = other.warnings_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.getVerbose() != false) {
        setVerbose(other.getVerbose());
      }
      if (other.getQuiet() != false) {
        setQuiet(other.getQuiet());
      }
      if (other.getJobs() != 0) {
        setJobs(other.getJobs());
      }
      if (!other.libraries_.isEmpty()) {
        if (libraries_.isEmpty()) {
          libraries_ = other.libraries_;
          bitField0_ |= 0x00001000;
        } else {
          ensureLibrariesIsMutable();
          libraries_.addAll(other.libraries_);
        }
        onChanged();
      }
      if (other.getOptimizeForDebug() != false) {
        setOptimizeForDebug(other.getOptimizeForDebug());
      }
      if (!other.getExportDir().isEmpty()) {
        exportDir_ = other.exportDir_;
        bitField0_ |= 0x00004000;
        onChanged();
      }
      if (other.getClean() != false) {
        setClean(other.getClean());
      }
      if (other.getCreateCompilationDatabaseOnly() != false) {
        setCreateCompilationDatabaseOnly(other.getCreateCompilationDatabaseOnly());
      }
      internalGetMutableSourceOverride().mergeFrom(
          other.internalGetSourceOverride());
      bitField0_ |= 0x00020000;
      if (other.hasExportBinaries()) {
        setExportBinaries(other.getExportBinaries());
      }
      if (!other.library_.isEmpty()) {
        if (library_.isEmpty()) {
          library_ = other.library_;
          bitField0_ |= 0x00080000;
        } else {
          ensureLibraryIsMutable();
          library_.addAll(other.library_);
        }
        onChanged();
      }
      if (!other.getKeysKeychain().isEmpty()) {
        keysKeychain_ = other.keysKeychain_;
        bitField0_ |= 0x00100000;
        onChanged();
      }
      if (!other.getSignKey().isEmpty()) {
        signKey_ = other.signKey_;
        bitField0_ |= 0x00200000;
        onChanged();
      }
      if (!other.getEncryptKey().isEmpty()) {
        encryptKey_ = other.encryptKey_;
        bitField0_ |= 0x00400000;
        onChanged();
      }
      if (other.getSkipLibrariesDiscovery() != false) {
        setSkipLibrariesDiscovery(other.getSkipLibrariesDiscovery());
      }
      if (other.getDoNotExpandBuildProperties() != false) {
        setDoNotExpandBuildProperties(other.getDoNotExpandBuildProperties());
      }
      if (!other.buildCacheExtraPaths_.isEmpty()) {
        if (buildCacheExtraPaths_.isEmpty()) {
          buildCacheExtraPaths_ = other.buildCacheExtraPaths_;
          bitField0_ |= 0x02000000;
        } else {
          ensureBuildCacheExtraPathsIsMutable();
          buildCacheExtraPaths_.addAll(other.buildCacheExtraPaths_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  internalGetInstanceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              fqbn_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              sketchPath_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              showProperties_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              preprocess_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              buildCachePath_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              buildPath_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureBuildPropertiesIsMutable();
              buildProperties_.add(s);
              break;
            } // case 66
            case 74: {
              warnings_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 80: {
              verbose_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              quiet_ = input.readBool();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 112: {
              jobs_ = input.readInt32();
              bitField0_ |= 0x00000800;
              break;
            } // case 112
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureLibrariesIsMutable();
              libraries_.add(s);
              break;
            } // case 122
            case 128: {
              optimizeForDebug_ = input.readBool();
              bitField0_ |= 0x00002000;
              break;
            } // case 128
            case 146: {
              exportDir_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00004000;
              break;
            } // case 146
            case 152: {
              clean_ = input.readBool();
              bitField0_ |= 0x00008000;
              break;
            } // case 152
            case 168: {
              createCompilationDatabaseOnly_ = input.readBool();
              bitField0_ |= 0x00010000;
              break;
            } // case 168
            case 178: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              sourceOverride__ = input.readMessage(
                  SourceOverrideDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableSourceOverride().getMutableMap().put(
                  sourceOverride__.getKey(), sourceOverride__.getValue());
              bitField0_ |= 0x00020000;
              break;
            } // case 178
            case 184: {
              exportBinaries_ = input.readBool();
              bitField0_ |= 0x00040000;
              break;
            } // case 184
            case 194: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureLibraryIsMutable();
              library_.add(s);
              break;
            } // case 194
            case 202: {
              keysKeychain_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00100000;
              break;
            } // case 202
            case 210: {
              signKey_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00200000;
              break;
            } // case 210
            case 218: {
              encryptKey_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00400000;
              break;
            } // case 218
            case 224: {
              skipLibrariesDiscovery_ = input.readBool();
              bitField0_ |= 0x00800000;
              break;
            } // case 224
            case 232: {
              doNotExpandBuildProperties_ = input.readBool();
              bitField0_ |= 0x01000000;
              break;
            } // case 232
            case 242: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureBuildCacheExtraPathsIsMutable();
              buildCacheExtraPaths_.add(s);
              break;
            } // case 242
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private protocol_buffers.Instance instance_;
    private com.google.protobuf.SingleFieldBuilder<
        protocol_buffers.Instance, protocol_buffers.Instance.Builder, protocol_buffers.InstanceOrBuilder> instanceBuilder_;
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     * @return Whether the instance field is set.
     */
    public boolean hasInstance() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     * @return The instance.
     */
    public protocol_buffers.Instance getInstance() {
      if (instanceBuilder_ == null) {
        return instance_ == null ? protocol_buffers.Instance.getDefaultInstance() : instance_;
      } else {
        return instanceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     */
    public Builder setInstance(protocol_buffers.Instance value) {
      if (instanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        instance_ = value;
      } else {
        instanceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     */
    public Builder setInstance(
        protocol_buffers.Instance.Builder builderForValue) {
      if (instanceBuilder_ == null) {
        instance_ = builderForValue.build();
      } else {
        instanceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     */
    public Builder mergeInstance(protocol_buffers.Instance value) {
      if (instanceBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          instance_ != null &&
          instance_ != protocol_buffers.Instance.getDefaultInstance()) {
          getInstanceBuilder().mergeFrom(value);
        } else {
          instance_ = value;
        }
      } else {
        instanceBuilder_.mergeFrom(value);
      }
      if (instance_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     */
    public Builder clearInstance() {
      bitField0_ = (bitField0_ & ~0x00000001);
      instance_ = null;
      if (instanceBuilder_ != null) {
        instanceBuilder_.dispose();
        instanceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     */
    public protocol_buffers.Instance.Builder getInstanceBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return internalGetInstanceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     */
    public protocol_buffers.InstanceOrBuilder getInstanceOrBuilder() {
      if (instanceBuilder_ != null) {
        return instanceBuilder_.getMessageOrBuilder();
      } else {
        return instance_ == null ?
            protocol_buffers.Instance.getDefaultInstance() : instance_;
      }
    }
    /**
     * <pre>
     * Arduino Core Service instance from the `Init` response.
     * </pre>
     *
     * <code>.protocol_buffers.Instance instance = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        protocol_buffers.Instance, protocol_buffers.Instance.Builder, protocol_buffers.InstanceOrBuilder> 
        internalGetInstanceFieldBuilder() {
      if (instanceBuilder_ == null) {
        instanceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            protocol_buffers.Instance, protocol_buffers.Instance.Builder, protocol_buffers.InstanceOrBuilder>(
                getInstance(),
                getParentForChildren(),
                isClean());
        instance_ = null;
      }
      return instanceBuilder_;
    }

    private java.lang.Object fqbn_ = "";
    /**
     * <pre>
     * Fully Qualified Board Name, e.g.: `arduino:avr:uno`. If this field is
     * not defined, the FQBN of the board attached to the sketch via the
     * `BoardAttach` method is used.
     * </pre>
     *
     * <code>string fqbn = 2;</code>
     * @return The fqbn.
     */
    public java.lang.String getFqbn() {
      java.lang.Object ref = fqbn_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fqbn_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Fully Qualified Board Name, e.g.: `arduino:avr:uno`. If this field is
     * not defined, the FQBN of the board attached to the sketch via the
     * `BoardAttach` method is used.
     * </pre>
     *
     * <code>string fqbn = 2;</code>
     * @return The bytes for fqbn.
     */
    public com.google.protobuf.ByteString
        getFqbnBytes() {
      java.lang.Object ref = fqbn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fqbn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Fully Qualified Board Name, e.g.: `arduino:avr:uno`. If this field is
     * not defined, the FQBN of the board attached to the sketch via the
     * `BoardAttach` method is used.
     * </pre>
     *
     * <code>string fqbn = 2;</code>
     * @param value The fqbn to set.
     * @return This builder for chaining.
     */
    public Builder setFqbn(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      fqbn_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fully Qualified Board Name, e.g.: `arduino:avr:uno`. If this field is
     * not defined, the FQBN of the board attached to the sketch via the
     * `BoardAttach` method is used.
     * </pre>
     *
     * <code>string fqbn = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFqbn() {
      fqbn_ = getDefaultInstance().getFqbn();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fully Qualified Board Name, e.g.: `arduino:avr:uno`. If this field is
     * not defined, the FQBN of the board attached to the sketch via the
     * `BoardAttach` method is used.
     * </pre>
     *
     * <code>string fqbn = 2;</code>
     * @param value The bytes for fqbn to set.
     * @return This builder for chaining.
     */
    public Builder setFqbnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      fqbn_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object sketchPath_ = "";
    /**
     * <pre>
     * The path where the sketch is stored.
     * </pre>
     *
     * <code>string sketch_path = 3;</code>
     * @return The sketchPath.
     */
    public java.lang.String getSketchPath() {
      java.lang.Object ref = sketchPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sketchPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The path where the sketch is stored.
     * </pre>
     *
     * <code>string sketch_path = 3;</code>
     * @return The bytes for sketchPath.
     */
    public com.google.protobuf.ByteString
        getSketchPathBytes() {
      java.lang.Object ref = sketchPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sketchPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The path where the sketch is stored.
     * </pre>
     *
     * <code>string sketch_path = 3;</code>
     * @param value The sketchPath to set.
     * @return This builder for chaining.
     */
    public Builder setSketchPath(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sketchPath_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path where the sketch is stored.
     * </pre>
     *
     * <code>string sketch_path = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSketchPath() {
      sketchPath_ = getDefaultInstance().getSketchPath();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path where the sketch is stored.
     * </pre>
     *
     * <code>string sketch_path = 3;</code>
     * @param value The bytes for sketchPath to set.
     * @return This builder for chaining.
     */
    public Builder setSketchPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sketchPath_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private boolean showProperties_ ;
    /**
     * <pre>
     * Just get the build properties and do not run the full compile.
     * </pre>
     *
     * <code>bool show_properties = 4;</code>
     * @return The showProperties.
     */
    @java.lang.Override
    public boolean getShowProperties() {
      return showProperties_;
    }
    /**
     * <pre>
     * Just get the build properties and do not run the full compile.
     * </pre>
     *
     * <code>bool show_properties = 4;</code>
     * @param value The showProperties to set.
     * @return This builder for chaining.
     */
    public Builder setShowProperties(boolean value) {

      showProperties_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Just get the build properties and do not run the full compile.
     * </pre>
     *
     * <code>bool show_properties = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearShowProperties() {
      bitField0_ = (bitField0_ & ~0x00000008);
      showProperties_ = false;
      onChanged();
      return this;
    }

    private boolean preprocess_ ;
    /**
     * <pre>
     * Print preprocessed code to stdout instead of compiling.
     * </pre>
     *
     * <code>bool preprocess = 5;</code>
     * @return The preprocess.
     */
    @java.lang.Override
    public boolean getPreprocess() {
      return preprocess_;
    }
    /**
     * <pre>
     * Print preprocessed code to stdout instead of compiling.
     * </pre>
     *
     * <code>bool preprocess = 5;</code>
     * @param value The preprocess to set.
     * @return This builder for chaining.
     */
    public Builder setPreprocess(boolean value) {

      preprocess_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Print preprocessed code to stdout instead of compiling.
     * </pre>
     *
     * <code>bool preprocess = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreprocess() {
      bitField0_ = (bitField0_ & ~0x00000010);
      preprocess_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object buildCachePath_ = "";
    /**
     * <pre>
     * Builds of core and sketches are saved into this path to be cached and
     * reused.
     * </pre>
     *
     * <code>string build_cache_path = 6 [deprecated = true];</code>
     * @deprecated protocol_buffers.CompileRequest.build_cache_path is deprecated.
     *     See app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto;l=46
     * @return The buildCachePath.
     */
    @java.lang.Deprecated public java.lang.String getBuildCachePath() {
      java.lang.Object ref = buildCachePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        buildCachePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Builds of core and sketches are saved into this path to be cached and
     * reused.
     * </pre>
     *
     * <code>string build_cache_path = 6 [deprecated = true];</code>
     * @deprecated protocol_buffers.CompileRequest.build_cache_path is deprecated.
     *     See app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto;l=46
     * @return The bytes for buildCachePath.
     */
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getBuildCachePathBytes() {
      java.lang.Object ref = buildCachePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        buildCachePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Builds of core and sketches are saved into this path to be cached and
     * reused.
     * </pre>
     *
     * <code>string build_cache_path = 6 [deprecated = true];</code>
     * @deprecated protocol_buffers.CompileRequest.build_cache_path is deprecated.
     *     See app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto;l=46
     * @param value The buildCachePath to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setBuildCachePath(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      buildCachePath_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Builds of core and sketches are saved into this path to be cached and
     * reused.
     * </pre>
     *
     * <code>string build_cache_path = 6 [deprecated = true];</code>
     * @deprecated protocol_buffers.CompileRequest.build_cache_path is deprecated.
     *     See app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto;l=46
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearBuildCachePath() {
      buildCachePath_ = getDefaultInstance().getBuildCachePath();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Builds of core and sketches are saved into this path to be cached and
     * reused.
     * </pre>
     *
     * <code>string build_cache_path = 6 [deprecated = true];</code>
     * @deprecated protocol_buffers.CompileRequest.build_cache_path is deprecated.
     *     See app/src/main/java/com/example/arduinoide/data/commands/proto/compile.proto;l=46
     * @param value The bytes for buildCachePath to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setBuildCachePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      buildCachePath_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object buildPath_ = "";
    /**
     * <pre>
     * Path to use to store the files used for the compilation. If omitted,
     * a directory will be created in the operating system's default temporary
     * path.
     * </pre>
     *
     * <code>string build_path = 7;</code>
     * @return The buildPath.
     */
    public java.lang.String getBuildPath() {
      java.lang.Object ref = buildPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        buildPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Path to use to store the files used for the compilation. If omitted,
     * a directory will be created in the operating system's default temporary
     * path.
     * </pre>
     *
     * <code>string build_path = 7;</code>
     * @return The bytes for buildPath.
     */
    public com.google.protobuf.ByteString
        getBuildPathBytes() {
      java.lang.Object ref = buildPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        buildPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Path to use to store the files used for the compilation. If omitted,
     * a directory will be created in the operating system's default temporary
     * path.
     * </pre>
     *
     * <code>string build_path = 7;</code>
     * @param value The buildPath to set.
     * @return This builder for chaining.
     */
    public Builder setBuildPath(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      buildPath_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to use to store the files used for the compilation. If omitted,
     * a directory will be created in the operating system's default temporary
     * path.
     * </pre>
     *
     * <code>string build_path = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBuildPath() {
      buildPath_ = getDefaultInstance().getBuildPath();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to use to store the files used for the compilation. If omitted,
     * a directory will be created in the operating system's default temporary
     * path.
     * </pre>
     *
     * <code>string build_path = 7;</code>
     * @param value The bytes for buildPath to set.
     * @return This builder for chaining.
     */
    public Builder setBuildPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      buildPath_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList buildProperties_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureBuildPropertiesIsMutable() {
      if (!buildProperties_.isModifiable()) {
        buildProperties_ = new com.google.protobuf.LazyStringArrayList(buildProperties_);
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @return A list containing the buildProperties.
     */
    public com.google.protobuf.ProtocolStringList
        getBuildPropertiesList() {
      buildProperties_.makeImmutable();
      return buildProperties_;
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @return The count of buildProperties.
     */
    public int getBuildPropertiesCount() {
      return buildProperties_.size();
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @param index The index of the element to return.
     * @return The buildProperties at the given index.
     */
    public java.lang.String getBuildProperties(int index) {
      return buildProperties_.get(index);
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the buildProperties at the given index.
     */
    public com.google.protobuf.ByteString
        getBuildPropertiesBytes(int index) {
      return buildProperties_.getByteString(index);
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @param index The index to set the value at.
     * @param value The buildProperties to set.
     * @return This builder for chaining.
     */
    public Builder setBuildProperties(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBuildPropertiesIsMutable();
      buildProperties_.set(index, value);
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @param value The buildProperties to add.
     * @return This builder for chaining.
     */
    public Builder addBuildProperties(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBuildPropertiesIsMutable();
      buildProperties_.add(value);
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @param values The buildProperties to add.
     * @return This builder for chaining.
     */
    public Builder addAllBuildProperties(
        java.lang.Iterable<java.lang.String> values) {
      ensureBuildPropertiesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, buildProperties_);
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearBuildProperties() {
      buildProperties_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of custom build properties.
     * </pre>
     *
     * <code>repeated string build_properties = 8;</code>
     * @param value The bytes of the buildProperties to add.
     * @return This builder for chaining.
     */
    public Builder addBuildPropertiesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureBuildPropertiesIsMutable();
      buildProperties_.add(value);
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object warnings_ = "";
    /**
     * <pre>
     * Used to tell gcc which warning level to use. The level names are: "none",
     * "default", "more" and "all".
     * </pre>
     *
     * <code>string warnings = 9;</code>
     * @return The warnings.
     */
    public java.lang.String getWarnings() {
      java.lang.Object ref = warnings_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        warnings_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Used to tell gcc which warning level to use. The level names are: "none",
     * "default", "more" and "all".
     * </pre>
     *
     * <code>string warnings = 9;</code>
     * @return The bytes for warnings.
     */
    public com.google.protobuf.ByteString
        getWarningsBytes() {
      java.lang.Object ref = warnings_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        warnings_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Used to tell gcc which warning level to use. The level names are: "none",
     * "default", "more" and "all".
     * </pre>
     *
     * <code>string warnings = 9;</code>
     * @param value The warnings to set.
     * @return This builder for chaining.
     */
    public Builder setWarnings(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      warnings_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to tell gcc which warning level to use. The level names are: "none",
     * "default", "more" and "all".
     * </pre>
     *
     * <code>string warnings = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearWarnings() {
      warnings_ = getDefaultInstance().getWarnings();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to tell gcc which warning level to use. The level names are: "none",
     * "default", "more" and "all".
     * </pre>
     *
     * <code>string warnings = 9;</code>
     * @param value The bytes for warnings to set.
     * @return This builder for chaining.
     */
    public Builder setWarningsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      warnings_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private boolean verbose_ ;
    /**
     * <pre>
     * Turns on verbose mode.
     * </pre>
     *
     * <code>bool verbose = 10;</code>
     * @return The verbose.
     */
    @java.lang.Override
    public boolean getVerbose() {
      return verbose_;
    }
    /**
     * <pre>
     * Turns on verbose mode.
     * </pre>
     *
     * <code>bool verbose = 10;</code>
     * @param value The verbose to set.
     * @return This builder for chaining.
     */
    public Builder setVerbose(boolean value) {

      verbose_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Turns on verbose mode.
     * </pre>
     *
     * <code>bool verbose = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearVerbose() {
      bitField0_ = (bitField0_ & ~0x00000200);
      verbose_ = false;
      onChanged();
      return this;
    }

    private boolean quiet_ ;
    /**
     * <pre>
     * Suppresses almost every output.
     * </pre>
     *
     * <code>bool quiet = 11;</code>
     * @return The quiet.
     */
    @java.lang.Override
    public boolean getQuiet() {
      return quiet_;
    }
    /**
     * <pre>
     * Suppresses almost every output.
     * </pre>
     *
     * <code>bool quiet = 11;</code>
     * @param value The quiet to set.
     * @return This builder for chaining.
     */
    public Builder setQuiet(boolean value) {

      quiet_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Suppresses almost every output.
     * </pre>
     *
     * <code>bool quiet = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuiet() {
      bitField0_ = (bitField0_ & ~0x00000400);
      quiet_ = false;
      onChanged();
      return this;
    }

    private int jobs_ ;
    /**
     * <pre>
     * The max number of concurrent compiler instances to run (as `make -jx`).
     * If jobs is set to 0, it will use the number of available CPUs as the
     * maximum.
     * </pre>
     *
     * <code>int32 jobs = 14;</code>
     * @return The jobs.
     */
    @java.lang.Override
    public int getJobs() {
      return jobs_;
    }
    /**
     * <pre>
     * The max number of concurrent compiler instances to run (as `make -jx`).
     * If jobs is set to 0, it will use the number of available CPUs as the
     * maximum.
     * </pre>
     *
     * <code>int32 jobs = 14;</code>
     * @param value The jobs to set.
     * @return This builder for chaining.
     */
    public Builder setJobs(int value) {

      jobs_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The max number of concurrent compiler instances to run (as `make -jx`).
     * If jobs is set to 0, it will use the number of available CPUs as the
     * maximum.
     * </pre>
     *
     * <code>int32 jobs = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearJobs() {
      bitField0_ = (bitField0_ & ~0x00000800);
      jobs_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList libraries_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureLibrariesIsMutable() {
      if (!libraries_.isModifiable()) {
        libraries_ = new com.google.protobuf.LazyStringArrayList(libraries_);
      }
      bitField0_ |= 0x00001000;
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @return A list containing the libraries.
     */
    public com.google.protobuf.ProtocolStringList
        getLibrariesList() {
      libraries_.makeImmutable();
      return libraries_;
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @return The count of libraries.
     */
    public int getLibrariesCount() {
      return libraries_.size();
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @param index The index of the element to return.
     * @return The libraries at the given index.
     */
    public java.lang.String getLibraries(int index) {
      return libraries_.get(index);
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @param index The index of the value to return.
     * @return The bytes of the libraries at the given index.
     */
    public com.google.protobuf.ByteString
        getLibrariesBytes(int index) {
      return libraries_.getByteString(index);
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @param index The index to set the value at.
     * @param value The libraries to set.
     * @return This builder for chaining.
     */
    public Builder setLibraries(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureLibrariesIsMutable();
      libraries_.set(index, value);
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @param value The libraries to add.
     * @return This builder for chaining.
     */
    public Builder addLibraries(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureLibrariesIsMutable();
      libraries_.add(value);
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @param values The libraries to add.
     * @return This builder for chaining.
     */
    public Builder addAllLibraries(
        java.lang.Iterable<java.lang.String> values) {
      ensureLibrariesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, libraries_);
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearLibraries() {
      libraries_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00001000);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to directories containing a collection of libraries.
     * </pre>
     *
     * <code>repeated string libraries = 15;</code>
     * @param value The bytes of the libraries to add.
     * @return This builder for chaining.
     */
    public Builder addLibrariesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureLibrariesIsMutable();
      libraries_.add(value);
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }

    private boolean optimizeForDebug_ ;
    /**
     * <pre>
     * Optimize compile output for debug, not for release.
     * </pre>
     *
     * <code>bool optimize_for_debug = 16;</code>
     * @return The optimizeForDebug.
     */
    @java.lang.Override
    public boolean getOptimizeForDebug() {
      return optimizeForDebug_;
    }
    /**
     * <pre>
     * Optimize compile output for debug, not for release.
     * </pre>
     *
     * <code>bool optimize_for_debug = 16;</code>
     * @param value The optimizeForDebug to set.
     * @return This builder for chaining.
     */
    public Builder setOptimizeForDebug(boolean value) {

      optimizeForDebug_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optimize compile output for debug, not for release.
     * </pre>
     *
     * <code>bool optimize_for_debug = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptimizeForDebug() {
      bitField0_ = (bitField0_ & ~0x00002000);
      optimizeForDebug_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object exportDir_ = "";
    /**
     * <pre>
     * Optional: save the build artifacts in this directory, the directory must
     * exist.
     * </pre>
     *
     * <code>string export_dir = 18;</code>
     * @return The exportDir.
     */
    public java.lang.String getExportDir() {
      java.lang.Object ref = exportDir_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exportDir_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: save the build artifacts in this directory, the directory must
     * exist.
     * </pre>
     *
     * <code>string export_dir = 18;</code>
     * @return The bytes for exportDir.
     */
    public com.google.protobuf.ByteString
        getExportDirBytes() {
      java.lang.Object ref = exportDir_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exportDir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: save the build artifacts in this directory, the directory must
     * exist.
     * </pre>
     *
     * <code>string export_dir = 18;</code>
     * @param value The exportDir to set.
     * @return This builder for chaining.
     */
    public Builder setExportDir(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      exportDir_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: save the build artifacts in this directory, the directory must
     * exist.
     * </pre>
     *
     * <code>string export_dir = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearExportDir() {
      exportDir_ = getDefaultInstance().getExportDir();
      bitField0_ = (bitField0_ & ~0x00004000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: save the build artifacts in this directory, the directory must
     * exist.
     * </pre>
     *
     * <code>string export_dir = 18;</code>
     * @param value The bytes for exportDir to set.
     * @return This builder for chaining.
     */
    public Builder setExportDirBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      exportDir_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }

    private boolean clean_ ;
    /**
     * <pre>
     * Optional: cleanup the build folder and do not use any previously cached
     * build.
     * </pre>
     *
     * <code>bool clean = 19;</code>
     * @return The clean.
     */
    @java.lang.Override
    public boolean getClean() {
      return clean_;
    }
    /**
     * <pre>
     * Optional: cleanup the build folder and do not use any previously cached
     * build.
     * </pre>
     *
     * <code>bool clean = 19;</code>
     * @param value The clean to set.
     * @return This builder for chaining.
     */
    public Builder setClean(boolean value) {

      clean_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: cleanup the build folder and do not use any previously cached
     * build.
     * </pre>
     *
     * <code>bool clean = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearClean() {
      bitField0_ = (bitField0_ & ~0x00008000);
      clean_ = false;
      onChanged();
      return this;
    }

    private boolean createCompilationDatabaseOnly_ ;
    /**
     * <pre>
     * When set to `true` only the compilation database will be produced and no
     * actual build will be performed.
     * </pre>
     *
     * <code>bool create_compilation_database_only = 21;</code>
     * @return The createCompilationDatabaseOnly.
     */
    @java.lang.Override
    public boolean getCreateCompilationDatabaseOnly() {
      return createCompilationDatabaseOnly_;
    }
    /**
     * <pre>
     * When set to `true` only the compilation database will be produced and no
     * actual build will be performed.
     * </pre>
     *
     * <code>bool create_compilation_database_only = 21;</code>
     * @param value The createCompilationDatabaseOnly to set.
     * @return This builder for chaining.
     */
    public Builder setCreateCompilationDatabaseOnly(boolean value) {

      createCompilationDatabaseOnly_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When set to `true` only the compilation database will be produced and no
     * actual build will be performed.
     * </pre>
     *
     * <code>bool create_compilation_database_only = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearCreateCompilationDatabaseOnly() {
      bitField0_ = (bitField0_ & ~0x00010000);
      createCompilationDatabaseOnly_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> sourceOverride_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetSourceOverride() {
      if (sourceOverride_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SourceOverrideDefaultEntryHolder.defaultEntry);
      }
      return sourceOverride_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableSourceOverride() {
      if (sourceOverride_ == null) {
        sourceOverride_ = com.google.protobuf.MapField.newMapField(
            SourceOverrideDefaultEntryHolder.defaultEntry);
      }
      if (!sourceOverride_.isMutable()) {
        sourceOverride_ = sourceOverride_.copy();
      }
      bitField0_ |= 0x00020000;
      onChanged();
      return sourceOverride_;
    }
    public int getSourceOverrideCount() {
      return internalGetSourceOverride().getMap().size();
    }
    /**
     * <pre>
     * This map (source file -&gt; new content) let the builder use the provided
     * content instead of reading the corresponding file on disk. This is useful
     * for IDE that have unsaved changes in memory. The path must be relative to
     * the sketch directory. Only files from the sketch are allowed.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_override = 22;</code>
     */
    @java.lang.Override
    public boolean containsSourceOverride(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSourceOverride().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSourceOverrideMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getSourceOverride() {
      return getSourceOverrideMap();
    }
    /**
     * <pre>
     * This map (source file -&gt; new content) let the builder use the provided
     * content instead of reading the corresponding file on disk. This is useful
     * for IDE that have unsaved changes in memory. The path must be relative to
     * the sketch directory. Only files from the sketch are allowed.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_override = 22;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getSourceOverrideMap() {
      return internalGetSourceOverride().getMap();
    }
    /**
     * <pre>
     * This map (source file -&gt; new content) let the builder use the provided
     * content instead of reading the corresponding file on disk. This is useful
     * for IDE that have unsaved changes in memory. The path must be relative to
     * the sketch directory. Only files from the sketch are allowed.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_override = 22;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getSourceOverrideOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSourceOverride().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * This map (source file -&gt; new content) let the builder use the provided
     * content instead of reading the corresponding file on disk. This is useful
     * for IDE that have unsaved changes in memory. The path must be relative to
     * the sketch directory. Only files from the sketch are allowed.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_override = 22;</code>
     */
    @java.lang.Override
    public java.lang.String getSourceOverrideOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSourceOverride().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearSourceOverride() {
      bitField0_ = (bitField0_ & ~0x00020000);
      internalGetMutableSourceOverride().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * This map (source file -&gt; new content) let the builder use the provided
     * content instead of reading the corresponding file on disk. This is useful
     * for IDE that have unsaved changes in memory. The path must be relative to
     * the sketch directory. Only files from the sketch are allowed.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_override = 22;</code>
     */
    public Builder removeSourceOverride(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableSourceOverride().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableSourceOverride() {
      bitField0_ |= 0x00020000;
      return internalGetMutableSourceOverride().getMutableMap();
    }
    /**
     * <pre>
     * This map (source file -&gt; new content) let the builder use the provided
     * content instead of reading the corresponding file on disk. This is useful
     * for IDE that have unsaved changes in memory. The path must be relative to
     * the sketch directory. Only files from the sketch are allowed.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_override = 22;</code>
     */
    public Builder putSourceOverride(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableSourceOverride().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * This map (source file -&gt; new content) let the builder use the provided
     * content instead of reading the corresponding file on disk. This is useful
     * for IDE that have unsaved changes in memory. The path must be relative to
     * the sketch directory. Only files from the sketch are allowed.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_override = 22;</code>
     */
    public Builder putAllSourceOverride(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableSourceOverride().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00020000;
      return this;
    }

    private boolean exportBinaries_ ;
    /**
     * <pre>
     * When set to `true` the compiled binary will be copied to the export
     * directory.
     * </pre>
     *
     * <code>optional bool export_binaries = 23;</code>
     * @return Whether the exportBinaries field is set.
     */
    @java.lang.Override
    public boolean hasExportBinaries() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * When set to `true` the compiled binary will be copied to the export
     * directory.
     * </pre>
     *
     * <code>optional bool export_binaries = 23;</code>
     * @return The exportBinaries.
     */
    @java.lang.Override
    public boolean getExportBinaries() {
      return exportBinaries_;
    }
    /**
     * <pre>
     * When set to `true` the compiled binary will be copied to the export
     * directory.
     * </pre>
     *
     * <code>optional bool export_binaries = 23;</code>
     * @param value The exportBinaries to set.
     * @return This builder for chaining.
     */
    public Builder setExportBinaries(boolean value) {

      exportBinaries_ = value;
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When set to `true` the compiled binary will be copied to the export
     * directory.
     * </pre>
     *
     * <code>optional bool export_binaries = 23;</code>
     * @return This builder for chaining.
     */
    public Builder clearExportBinaries() {
      bitField0_ = (bitField0_ & ~0x00040000);
      exportBinaries_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList library_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureLibraryIsMutable() {
      if (!library_.isModifiable()) {
        library_ = new com.google.protobuf.LazyStringArrayList(library_);
      }
      bitField0_ |= 0x00080000;
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @return A list containing the library.
     */
    public com.google.protobuf.ProtocolStringList
        getLibraryList() {
      library_.makeImmutable();
      return library_;
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @return The count of library.
     */
    public int getLibraryCount() {
      return library_.size();
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @param index The index of the element to return.
     * @return The library at the given index.
     */
    public java.lang.String getLibrary(int index) {
      return library_.get(index);
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @param index The index of the value to return.
     * @return The bytes of the library at the given index.
     */
    public com.google.protobuf.ByteString
        getLibraryBytes(int index) {
      return library_.getByteString(index);
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @param index The index to set the value at.
     * @param value The library to set.
     * @return This builder for chaining.
     */
    public Builder setLibrary(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureLibraryIsMutable();
      library_.set(index, value);
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @param value The library to add.
     * @return This builder for chaining.
     */
    public Builder addLibrary(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureLibraryIsMutable();
      library_.add(value);
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @param values The library to add.
     * @return This builder for chaining.
     */
    public Builder addAllLibrary(
        java.lang.Iterable<java.lang.String> values) {
      ensureLibraryIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, library_);
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @return This builder for chaining.
     */
    public Builder clearLibrary() {
      library_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00080000);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of paths to single libraries root directory.
     * </pre>
     *
     * <code>repeated string library = 24;</code>
     * @param value The bytes of the library to add.
     * @return This builder for chaining.
     */
    public Builder addLibraryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureLibraryIsMutable();
      library_.add(value);
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }

    private java.lang.Object keysKeychain_ = "";
    /**
     * <pre>
     * The path where to search for the custom signing key name and the encrypt
     * key name.
     * </pre>
     *
     * <code>string keys_keychain = 25;</code>
     * @return The keysKeychain.
     */
    public java.lang.String getKeysKeychain() {
      java.lang.Object ref = keysKeychain_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keysKeychain_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The path where to search for the custom signing key name and the encrypt
     * key name.
     * </pre>
     *
     * <code>string keys_keychain = 25;</code>
     * @return The bytes for keysKeychain.
     */
    public com.google.protobuf.ByteString
        getKeysKeychainBytes() {
      java.lang.Object ref = keysKeychain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keysKeychain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The path where to search for the custom signing key name and the encrypt
     * key name.
     * </pre>
     *
     * <code>string keys_keychain = 25;</code>
     * @param value The keysKeychain to set.
     * @return This builder for chaining.
     */
    public Builder setKeysKeychain(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      keysKeychain_ = value;
      bitField0_ |= 0x00100000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path where to search for the custom signing key name and the encrypt
     * key name.
     * </pre>
     *
     * <code>string keys_keychain = 25;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeysKeychain() {
      keysKeychain_ = getDefaultInstance().getKeysKeychain();
      bitField0_ = (bitField0_ & ~0x00100000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path where to search for the custom signing key name and the encrypt
     * key name.
     * </pre>
     *
     * <code>string keys_keychain = 25;</code>
     * @param value The bytes for keysKeychain to set.
     * @return This builder for chaining.
     */
    public Builder setKeysKeychainBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      keysKeychain_ = value;
      bitField0_ |= 0x00100000;
      onChanged();
      return this;
    }

    private java.lang.Object signKey_ = "";
    /**
     * <pre>
     * The name of the custom key to use for signing during the compile process.
     * </pre>
     *
     * <code>string sign_key = 26;</code>
     * @return The signKey.
     */
    public java.lang.String getSignKey() {
      java.lang.Object ref = signKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        signKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the custom key to use for signing during the compile process.
     * </pre>
     *
     * <code>string sign_key = 26;</code>
     * @return The bytes for signKey.
     */
    public com.google.protobuf.ByteString
        getSignKeyBytes() {
      java.lang.Object ref = signKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the custom key to use for signing during the compile process.
     * </pre>
     *
     * <code>string sign_key = 26;</code>
     * @param value The signKey to set.
     * @return This builder for chaining.
     */
    public Builder setSignKey(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      signKey_ = value;
      bitField0_ |= 0x00200000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the custom key to use for signing during the compile process.
     * </pre>
     *
     * <code>string sign_key = 26;</code>
     * @return This builder for chaining.
     */
    public Builder clearSignKey() {
      signKey_ = getDefaultInstance().getSignKey();
      bitField0_ = (bitField0_ & ~0x00200000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the custom key to use for signing during the compile process.
     * </pre>
     *
     * <code>string sign_key = 26;</code>
     * @param value The bytes for signKey to set.
     * @return This builder for chaining.
     */
    public Builder setSignKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      signKey_ = value;
      bitField0_ |= 0x00200000;
      onChanged();
      return this;
    }

    private java.lang.Object encryptKey_ = "";
    /**
     * <pre>
     * The name of the custom key to use for encrypting during the compile process.
     * </pre>
     *
     * <code>string encrypt_key = 27;</code>
     * @return The encryptKey.
     */
    public java.lang.String getEncryptKey() {
      java.lang.Object ref = encryptKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encryptKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the custom key to use for encrypting during the compile process.
     * </pre>
     *
     * <code>string encrypt_key = 27;</code>
     * @return The bytes for encryptKey.
     */
    public com.google.protobuf.ByteString
        getEncryptKeyBytes() {
      java.lang.Object ref = encryptKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encryptKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the custom key to use for encrypting during the compile process.
     * </pre>
     *
     * <code>string encrypt_key = 27;</code>
     * @param value The encryptKey to set.
     * @return This builder for chaining.
     */
    public Builder setEncryptKey(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      encryptKey_ = value;
      bitField0_ |= 0x00400000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the custom key to use for encrypting during the compile process.
     * </pre>
     *
     * <code>string encrypt_key = 27;</code>
     * @return This builder for chaining.
     */
    public Builder clearEncryptKey() {
      encryptKey_ = getDefaultInstance().getEncryptKey();
      bitField0_ = (bitField0_ & ~0x00400000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the custom key to use for encrypting during the compile process.
     * </pre>
     *
     * <code>string encrypt_key = 27;</code>
     * @param value The bytes for encryptKey to set.
     * @return This builder for chaining.
     */
    public Builder setEncryptKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      encryptKey_ = value;
      bitField0_ |= 0x00400000;
      onChanged();
      return this;
    }

    private boolean skipLibrariesDiscovery_ ;
    /**
     * <pre>
     * If set to true the build will skip the library discovery process and will
     * use the same libraries of latest build. Enabling this flag may produce a
     * wrong output and should not be used in regular compiles unless there is a
     * very specific reason to do so. This flag is mainly provided for usage in
     * language servers to optimize the build speed in some particular cases.
     * </pre>
     *
     * <code>bool skip_libraries_discovery = 28;</code>
     * @return The skipLibrariesDiscovery.
     */
    @java.lang.Override
    public boolean getSkipLibrariesDiscovery() {
      return skipLibrariesDiscovery_;
    }
    /**
     * <pre>
     * If set to true the build will skip the library discovery process and will
     * use the same libraries of latest build. Enabling this flag may produce a
     * wrong output and should not be used in regular compiles unless there is a
     * very specific reason to do so. This flag is mainly provided for usage in
     * language servers to optimize the build speed in some particular cases.
     * </pre>
     *
     * <code>bool skip_libraries_discovery = 28;</code>
     * @param value The skipLibrariesDiscovery to set.
     * @return This builder for chaining.
     */
    public Builder setSkipLibrariesDiscovery(boolean value) {

      skipLibrariesDiscovery_ = value;
      bitField0_ |= 0x00800000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set to true the build will skip the library discovery process and will
     * use the same libraries of latest build. Enabling this flag may produce a
     * wrong output and should not be used in regular compiles unless there is a
     * very specific reason to do so. This flag is mainly provided for usage in
     * language servers to optimize the build speed in some particular cases.
     * </pre>
     *
     * <code>bool skip_libraries_discovery = 28;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipLibrariesDiscovery() {
      bitField0_ = (bitField0_ & ~0x00800000);
      skipLibrariesDiscovery_ = false;
      onChanged();
      return this;
    }

    private boolean doNotExpandBuildProperties_ ;
    /**
     * <pre>
     * If set to true the returned build properties will be left unexpanded, with
     * the variables placeholders exactly as defined in the platform.
     * </pre>
     *
     * <code>bool do_not_expand_build_properties = 29;</code>
     * @return The doNotExpandBuildProperties.
     */
    @java.lang.Override
    public boolean getDoNotExpandBuildProperties() {
      return doNotExpandBuildProperties_;
    }
    /**
     * <pre>
     * If set to true the returned build properties will be left unexpanded, with
     * the variables placeholders exactly as defined in the platform.
     * </pre>
     *
     * <code>bool do_not_expand_build_properties = 29;</code>
     * @param value The doNotExpandBuildProperties to set.
     * @return This builder for chaining.
     */
    public Builder setDoNotExpandBuildProperties(boolean value) {

      doNotExpandBuildProperties_ = value;
      bitField0_ |= 0x01000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set to true the returned build properties will be left unexpanded, with
     * the variables placeholders exactly as defined in the platform.
     * </pre>
     *
     * <code>bool do_not_expand_build_properties = 29;</code>
     * @return This builder for chaining.
     */
    public Builder clearDoNotExpandBuildProperties() {
      bitField0_ = (bitField0_ & ~0x01000000);
      doNotExpandBuildProperties_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList buildCacheExtraPaths_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureBuildCacheExtraPathsIsMutable() {
      if (!buildCacheExtraPaths_.isModifiable()) {
        buildCacheExtraPaths_ = new com.google.protobuf.LazyStringArrayList(buildCacheExtraPaths_);
      }
      bitField0_ |= 0x02000000;
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @return A list containing the buildCacheExtraPaths.
     */
    public com.google.protobuf.ProtocolStringList
        getBuildCacheExtraPathsList() {
      buildCacheExtraPaths_.makeImmutable();
      return buildCacheExtraPaths_;
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @return The count of buildCacheExtraPaths.
     */
    public int getBuildCacheExtraPathsCount() {
      return buildCacheExtraPaths_.size();
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @param index The index of the element to return.
     * @return The buildCacheExtraPaths at the given index.
     */
    public java.lang.String getBuildCacheExtraPaths(int index) {
      return buildCacheExtraPaths_.get(index);
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @param index The index of the value to return.
     * @return The bytes of the buildCacheExtraPaths at the given index.
     */
    public com.google.protobuf.ByteString
        getBuildCacheExtraPathsBytes(int index) {
      return buildCacheExtraPaths_.getByteString(index);
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @param index The index to set the value at.
     * @param value The buildCacheExtraPaths to set.
     * @return This builder for chaining.
     */
    public Builder setBuildCacheExtraPaths(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBuildCacheExtraPathsIsMutable();
      buildCacheExtraPaths_.set(index, value);
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @param value The buildCacheExtraPaths to add.
     * @return This builder for chaining.
     */
    public Builder addBuildCacheExtraPaths(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBuildCacheExtraPathsIsMutable();
      buildCacheExtraPaths_.add(value);
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @param values The buildCacheExtraPaths to add.
     * @return This builder for chaining.
     */
    public Builder addAllBuildCacheExtraPaths(
        java.lang.Iterable<java.lang.String> values) {
      ensureBuildCacheExtraPathsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, buildCacheExtraPaths_);
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @return This builder for chaining.
     */
    public Builder clearBuildCacheExtraPaths() {
      buildCacheExtraPaths_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x02000000);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Search for precompiled cores in the given paths and use them if found.
     * This search is performed after the standard build_cache directory.
     * </pre>
     *
     * <code>repeated string build_cache_extra_paths = 30;</code>
     * @param value The bytes of the buildCacheExtraPaths to add.
     * @return This builder for chaining.
     */
    public Builder addBuildCacheExtraPathsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureBuildCacheExtraPathsIsMutable();
      buildCacheExtraPaths_.add(value);
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:protocol_buffers.CompileRequest)
  }

  // @@protoc_insertion_point(class_scope:protocol_buffers.CompileRequest)
  private static final protocol_buffers.CompileRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol_buffers.CompileRequest();
  }

  public static protocol_buffers.CompileRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CompileRequest>
      PARSER = new com.google.protobuf.AbstractParser<CompileRequest>() {
    @java.lang.Override
    public CompileRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CompileRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CompileRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public protocol_buffers.CompileRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

