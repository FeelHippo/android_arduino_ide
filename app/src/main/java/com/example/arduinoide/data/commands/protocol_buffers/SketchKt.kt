// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/commands/proto/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol_buffers;

@kotlin.jvm.JvmName("-initializesketch")
public inline fun sketch(block: protocol_buffers.SketchKt.Dsl.() -> kotlin.Unit): protocol_buffers.Sketch =
  protocol_buffers.SketchKt.Dsl._create(protocol_buffers.Sketch.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol_buffers.Sketch`
 */
public object SketchKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol_buffers.Sketch.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: protocol_buffers.Sketch.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): protocol_buffers.Sketch = _builder.build()

    /**
     * ```
     * Absolute path to a main sketch files.
     * ```
     *
     * `string main_file = 1;`
     */
    public var mainFile: kotlin.String
      @kotlin.jvm.JvmName("getMainFile")
        get() = _builder.mainFile
      @kotlin.jvm.JvmName("setMainFile")
        set(value) {
        _builder.mainFile = value
      }
    /**
     * ```
     * Absolute path to a main sketch files.
     * ```
     *
     * `string main_file = 1;`
     */
    public fun clearMainFile() {
      _builder.clearMainFile()
    }

    /**
     * ```
     * Absolute path to folder that contains main_file.
     * ```
     *
     * `string location_path = 2;`
     */
    public var locationPath: kotlin.String
      @kotlin.jvm.JvmName("getLocationPath")
        get() = _builder.locationPath
      @kotlin.jvm.JvmName("setLocationPath")
        set(value) {
        _builder.locationPath = value
      }
    /**
     * ```
     * Absolute path to folder that contains main_file.
     * ```
     *
     * `string location_path = 2;`
     */
    public fun clearLocationPath() {
      _builder.clearLocationPath()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class OtherSketchFilesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of absolute paths to other sketch files.
     * ```
     *
     * `repeated string other_sketch_files = 3;`
     * @return A list containing the otherSketchFiles.
     */
    public val otherSketchFiles: com.google.protobuf.kotlin.DslList<kotlin.String, OtherSketchFilesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.otherSketchFilesList
      )
    /**
     * ```
     * List of absolute paths to other sketch files.
     * ```
     *
     * `repeated string other_sketch_files = 3;`
     * @param value The otherSketchFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addOtherSketchFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, OtherSketchFilesProxy>.add(value: kotlin.String) {
      _builder.addOtherSketchFiles(value)
    }
    /**
     * ```
     * List of absolute paths to other sketch files.
     * ```
     *
     * `repeated string other_sketch_files = 3;`
     * @param value The otherSketchFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignOtherSketchFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, OtherSketchFilesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * List of absolute paths to other sketch files.
     * ```
     *
     * `repeated string other_sketch_files = 3;`
     * @param values The otherSketchFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllOtherSketchFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, OtherSketchFilesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllOtherSketchFiles(values)
    }
    /**
     * ```
     * List of absolute paths to other sketch files.
     * ```
     *
     * `repeated string other_sketch_files = 3;`
     * @param values The otherSketchFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllOtherSketchFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, OtherSketchFilesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * List of absolute paths to other sketch files.
     * ```
     *
     * `repeated string other_sketch_files = 3;`
     * @param index The index to set the value at.
     * @param value The otherSketchFiles to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setOtherSketchFiles")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, OtherSketchFilesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setOtherSketchFiles(index, value)
    }/**
     * ```
     * List of absolute paths to other sketch files.
     * ```
     *
     * `repeated string other_sketch_files = 3;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setOtherSketchFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, OtherSketchFilesProxy>.clear() {
      _builder.clearOtherSketchFiles()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AdditionalFilesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of absolute paths to additional sketch files.
     * ```
     *
     * `repeated string additional_files = 4;`
     * @return A list containing the additionalFiles.
     */
    public val additionalFiles: com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalFilesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.additionalFilesList
      )
    /**
     * ```
     * List of absolute paths to additional sketch files.
     * ```
     *
     * `repeated string additional_files = 4;`
     * @param value The additionalFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAdditionalFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalFilesProxy>.add(value: kotlin.String) {
      _builder.addAdditionalFiles(value)
    }
    /**
     * ```
     * List of absolute paths to additional sketch files.
     * ```
     *
     * `repeated string additional_files = 4;`
     * @param value The additionalFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAdditionalFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalFilesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * List of absolute paths to additional sketch files.
     * ```
     *
     * `repeated string additional_files = 4;`
     * @param values The additionalFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllAdditionalFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalFilesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllAdditionalFiles(values)
    }
    /**
     * ```
     * List of absolute paths to additional sketch files.
     * ```
     *
     * `repeated string additional_files = 4;`
     * @param values The additionalFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllAdditionalFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalFilesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * List of absolute paths to additional sketch files.
     * ```
     *
     * `repeated string additional_files = 4;`
     * @param index The index to set the value at.
     * @param value The additionalFiles to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setAdditionalFiles")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalFilesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setAdditionalFiles(index, value)
    }/**
     * ```
     * List of absolute paths to additional sketch files.
     * ```
     *
     * `repeated string additional_files = 4;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setAdditionalFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalFilesProxy>.clear() {
      _builder.clearAdditionalFiles()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RootFolderFilesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of absolute paths to supported files in the sketch root folder, main
     * file excluded.
     * ```
     *
     * `repeated string root_folder_files = 5;`
     * @return A list containing the rootFolderFiles.
     */
    public val rootFolderFiles: com.google.protobuf.kotlin.DslList<kotlin.String, RootFolderFilesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.rootFolderFilesList
      )
    /**
     * ```
     * List of absolute paths to supported files in the sketch root folder, main
     * file excluded.
     * ```
     *
     * `repeated string root_folder_files = 5;`
     * @param value The rootFolderFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addRootFolderFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RootFolderFilesProxy>.add(value: kotlin.String) {
      _builder.addRootFolderFiles(value)
    }
    /**
     * ```
     * List of absolute paths to supported files in the sketch root folder, main
     * file excluded.
     * ```
     *
     * `repeated string root_folder_files = 5;`
     * @param value The rootFolderFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignRootFolderFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RootFolderFilesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * List of absolute paths to supported files in the sketch root folder, main
     * file excluded.
     * ```
     *
     * `repeated string root_folder_files = 5;`
     * @param values The rootFolderFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllRootFolderFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RootFolderFilesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllRootFolderFiles(values)
    }
    /**
     * ```
     * List of absolute paths to supported files in the sketch root folder, main
     * file excluded.
     * ```
     *
     * `repeated string root_folder_files = 5;`
     * @param values The rootFolderFiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllRootFolderFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RootFolderFilesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * List of absolute paths to supported files in the sketch root folder, main
     * file excluded.
     * ```
     *
     * `repeated string root_folder_files = 5;`
     * @param index The index to set the value at.
     * @param value The rootFolderFiles to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setRootFolderFiles")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RootFolderFilesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setRootFolderFiles(index, value)
    }/**
     * ```
     * List of absolute paths to supported files in the sketch root folder, main
     * file excluded.
     * ```
     *
     * `repeated string root_folder_files = 5;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setRootFolderFiles")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RootFolderFilesProxy>.clear() {
      _builder.clearRootFolderFiles()
    }
    /**
     * ```
     * Default FQBN set in project file (sketch.yaml).
     * ```
     *
     * `string default_fqbn = 6;`
     */
    public var defaultFqbn: kotlin.String
      @kotlin.jvm.JvmName("getDefaultFqbn")
        get() = _builder.defaultFqbn
      @kotlin.jvm.JvmName("setDefaultFqbn")
        set(value) {
        _builder.defaultFqbn = value
      }
    /**
     * ```
     * Default FQBN set in project file (sketch.yaml).
     * ```
     *
     * `string default_fqbn = 6;`
     */
    public fun clearDefaultFqbn() {
      _builder.clearDefaultFqbn()
    }

    /**
     * ```
     * Default Port set in project file (sketch.yaml).
     * ```
     *
     * `string default_port = 7;`
     */
    public var defaultPort: kotlin.String
      @kotlin.jvm.JvmName("getDefaultPort")
        get() = _builder.defaultPort
      @kotlin.jvm.JvmName("setDefaultPort")
        set(value) {
        _builder.defaultPort = value
      }
    /**
     * ```
     * Default Port set in project file (sketch.yaml).
     * ```
     *
     * `string default_port = 7;`
     */
    public fun clearDefaultPort() {
      _builder.clearDefaultPort()
    }

    /**
     * ```
     * Default Protocol set in project file (sketch.yaml).
     * ```
     *
     * `string default_protocol = 8;`
     */
    public var defaultProtocol: kotlin.String
      @kotlin.jvm.JvmName("getDefaultProtocol")
        get() = _builder.defaultProtocol
      @kotlin.jvm.JvmName("setDefaultProtocol")
        set(value) {
        _builder.defaultProtocol = value
      }
    /**
     * ```
     * Default Protocol set in project file (sketch.yaml).
     * ```
     *
     * `string default_protocol = 8;`
     */
    public fun clearDefaultProtocol() {
      _builder.clearDefaultProtocol()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ProfilesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of profiles present in the project file (sketch.yaml).
     * ```
     *
     * `repeated .protocol_buffers.SketchProfile profiles = 9;`
     */
     public val profiles: com.google.protobuf.kotlin.DslList<protocol_buffers.SketchProfile, ProfilesProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.profilesList
      )
    /**
     * ```
     * List of profiles present in the project file (sketch.yaml).
     * ```
     *
     * `repeated .protocol_buffers.SketchProfile profiles = 9;`
     * @param value The profiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addProfiles")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.SketchProfile, ProfilesProxy>.add(value: protocol_buffers.SketchProfile) {
      _builder.addProfiles(value)
    }
    /**
     * ```
     * List of profiles present in the project file (sketch.yaml).
     * ```
     *
     * `repeated .protocol_buffers.SketchProfile profiles = 9;`
     * @param value The profiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignProfiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.SketchProfile, ProfilesProxy>.plusAssign(value: protocol_buffers.SketchProfile) {
      add(value)
    }
    /**
     * ```
     * List of profiles present in the project file (sketch.yaml).
     * ```
     *
     * `repeated .protocol_buffers.SketchProfile profiles = 9;`
     * @param values The profiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllProfiles")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.SketchProfile, ProfilesProxy>.addAll(values: kotlin.collections.Iterable<protocol_buffers.SketchProfile>) {
      _builder.addAllProfiles(values)
    }
    /**
     * ```
     * List of profiles present in the project file (sketch.yaml).
     * ```
     *
     * `repeated .protocol_buffers.SketchProfile profiles = 9;`
     * @param values The profiles to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllProfiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.SketchProfile, ProfilesProxy>.plusAssign(values: kotlin.collections.Iterable<protocol_buffers.SketchProfile>) {
      addAll(values)
    }
    /**
     * ```
     * List of profiles present in the project file (sketch.yaml).
     * ```
     *
     * `repeated .protocol_buffers.SketchProfile profiles = 9;`
     * @param index The index to set the value at.
     * @param value The profiles to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setProfiles")
    public operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.SketchProfile, ProfilesProxy>.set(index: kotlin.Int, value: protocol_buffers.SketchProfile) {
      _builder.setProfiles(index, value)
    }
    /**
     * ```
     * List of profiles present in the project file (sketch.yaml).
     * ```
     *
     * `repeated .protocol_buffers.SketchProfile profiles = 9;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearProfiles")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.SketchProfile, ProfilesProxy>.clear() {
      _builder.clearProfiles()
    }

    /**
     * ```
     * Default profile set in the project file (sketch.yaml).
     * ```
     *
     * `.protocol_buffers.SketchProfile default_profile = 10;`
     */
    public var defaultProfile: protocol_buffers.SketchProfile
      @kotlin.jvm.JvmName("getDefaultProfile")
        get() = _builder.defaultProfile
      @kotlin.jvm.JvmName("setDefaultProfile")
        set(value) {
        _builder.defaultProfile = value
      }
    /**
     * ```
     * Default profile set in the project file (sketch.yaml).
     * ```
     *
     * `.protocol_buffers.SketchProfile default_profile = 10;`
     */
    public fun clearDefaultProfile() {
      _builder.clearDefaultProfile()
    }
    /**
     * ```
     * Default profile set in the project file (sketch.yaml).
     * ```
     *
     * `.protocol_buffers.SketchProfile default_profile = 10;`
     * @return Whether the defaultProfile field is set.
     */
    public fun hasDefaultProfile(): kotlin.Boolean {
      return _builder.hasDefaultProfile()
    }

    public val SketchKt.Dsl.defaultProfileOrNull: protocol_buffers.SketchProfile?
      get() = _builder.defaultProfileOrNull

    /**
     * ```
     * Default Programmer set in project file (sketch.yaml).
     * ```
     *
     * `string default_programmer = 11;`
     */
    public var defaultProgrammer: kotlin.String
      @kotlin.jvm.JvmName("getDefaultProgrammer")
        get() = _builder.defaultProgrammer
      @kotlin.jvm.JvmName("setDefaultProgrammer")
        set(value) {
        _builder.defaultProgrammer = value
      }
    /**
     * ```
     * Default Programmer set in project file (sketch.yaml).
     * ```
     *
     * `string default_programmer = 11;`
     */
    public fun clearDefaultProgrammer() {
      _builder.clearDefaultProgrammer()
    }

    /**
     * ```
     * Default Port configuration set in project file (sketch.yaml).
     * ```
     *
     * `.protocol_buffers.MonitorPortConfiguration default_port_config = 12;`
     */
    public var defaultPortConfig: protocol_buffers.MonitorPortConfiguration
      @kotlin.jvm.JvmName("getDefaultPortConfig")
        get() = _builder.defaultPortConfig
      @kotlin.jvm.JvmName("setDefaultPortConfig")
        set(value) {
        _builder.defaultPortConfig = value
      }
    /**
     * ```
     * Default Port configuration set in project file (sketch.yaml).
     * ```
     *
     * `.protocol_buffers.MonitorPortConfiguration default_port_config = 12;`
     */
    public fun clearDefaultPortConfig() {
      _builder.clearDefaultPortConfig()
    }
    /**
     * ```
     * Default Port configuration set in project file (sketch.yaml).
     * ```
     *
     * `.protocol_buffers.MonitorPortConfiguration default_port_config = 12;`
     * @return Whether the defaultPortConfig field is set.
     */
    public fun hasDefaultPortConfig(): kotlin.Boolean {
      return _builder.hasDefaultPortConfig()
    }

    public val SketchKt.Dsl.defaultPortConfigOrNull: protocol_buffers.MonitorPortConfiguration?
      get() = _builder.defaultPortConfigOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol_buffers.Sketch.copy(block: `protocol_buffers`.SketchKt.Dsl.() -> kotlin.Unit): protocol_buffers.Sketch =
  `protocol_buffers`.SketchKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol_buffers.SketchOrBuilder.defaultProfileOrNull: protocol_buffers.SketchProfile?
  get() = if (hasDefaultProfile()) getDefaultProfile() else null

public val protocol_buffers.SketchOrBuilder.defaultPortConfigOrNull: protocol_buffers.MonitorPortConfiguration?
  get() = if (hasDefaultPortConfig()) getDefaultPortConfig() else null

