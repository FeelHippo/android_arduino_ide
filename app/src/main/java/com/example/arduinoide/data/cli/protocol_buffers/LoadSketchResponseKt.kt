// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/cli/proto/commands.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.example.arduinoide.data.cli.protocol_buffers;

@kotlin.jvm.JvmName("-initializeloadSketchResponse")
public inline fun loadSketchResponse(block: com.example.arduinoide.data.cli.protocol_buffers.LoadSketchResponseKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponse =
  com.example.arduinoide.data.cli.protocol_buffers.LoadSketchResponseKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.LoadSketchResponse`
 */
public object LoadSketchResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponse = _builder.build()

    /**
     * ```
     * The loaded sketch.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Sketch sketch = 1;`
     */
    public var sketch: com.example.arduinoide.data.cli.protocol_buffers.Common.Sketch
      @kotlin.jvm.JvmName("getSketch")
        get() = _builder.sketch
      @kotlin.jvm.JvmName("setSketch")
        set(value) {
        _builder.sketch = value
      }
    /**
     * ```
     * The loaded sketch.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Sketch sketch = 1;`
     */
    public fun clearSketch() {
      _builder.clearSketch()
    }
    /**
     * ```
     * The loaded sketch.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Sketch sketch = 1;`
     * @return Whether the sketch field is set.
     */
    public fun hasSketch(): kotlin.Boolean {
      return _builder.hasSketch()
    }

    public val LoadSketchResponseKt.Dsl.sketchOrNull: com.example.arduinoide.data.cli.protocol_buffers.Common.Sketch?
      get() = _builder.sketchOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponse.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.LoadSketchResponseKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponse =
  `com.example.arduinoide.data.cli.protocol_buffers`.LoadSketchResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.example.arduinoide.data.cli.protocol_buffers.Commands.LoadSketchResponseOrBuilder.sketchOrNull: com.example.arduinoide.data.cli.protocol_buffers.Common.Sketch?
  get() = if (hasSketch()) getSketch() else null

