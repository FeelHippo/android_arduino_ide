// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/commands/proto/lib.proto
// Protobuf Java Version: 4.31.1

package protocol_buffers;

@com.google.protobuf.Generated
public interface LibraryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol_buffers.Library)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Library name (value of `name` field in library.properties).
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Library name (value of `name` field in library.properties).
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Value of the `author` field in library.properties.
   * </pre>
   *
   * <code>string author = 2;</code>
   * @return The author.
   */
  java.lang.String getAuthor();
  /**
   * <pre>
   * Value of the `author` field in library.properties.
   * </pre>
   *
   * <code>string author = 2;</code>
   * @return The bytes for author.
   */
  com.google.protobuf.ByteString
      getAuthorBytes();

  /**
   * <pre>
   * Value of the `maintainer` field in library.properties.
   * </pre>
   *
   * <code>string maintainer = 3;</code>
   * @return The maintainer.
   */
  java.lang.String getMaintainer();
  /**
   * <pre>
   * Value of the `maintainer` field in library.properties.
   * </pre>
   *
   * <code>string maintainer = 3;</code>
   * @return The bytes for maintainer.
   */
  com.google.protobuf.ByteString
      getMaintainerBytes();

  /**
   * <pre>
   * Value of the `sentence` field in library.properties.
   * </pre>
   *
   * <code>string sentence = 4;</code>
   * @return The sentence.
   */
  java.lang.String getSentence();
  /**
   * <pre>
   * Value of the `sentence` field in library.properties.
   * </pre>
   *
   * <code>string sentence = 4;</code>
   * @return The bytes for sentence.
   */
  com.google.protobuf.ByteString
      getSentenceBytes();

  /**
   * <pre>
   * Value of the `paragraph` field in library.properties.
   * </pre>
   *
   * <code>string paragraph = 5;</code>
   * @return The paragraph.
   */
  java.lang.String getParagraph();
  /**
   * <pre>
   * Value of the `paragraph` field in library.properties.
   * </pre>
   *
   * <code>string paragraph = 5;</code>
   * @return The bytes for paragraph.
   */
  com.google.protobuf.ByteString
      getParagraphBytes();

  /**
   * <pre>
   * Value of the `url` field in library.properties.
   * </pre>
   *
   * <code>string website = 6;</code>
   * @return The website.
   */
  java.lang.String getWebsite();
  /**
   * <pre>
   * Value of the `url` field in library.properties.
   * </pre>
   *
   * <code>string website = 6;</code>
   * @return The bytes for website.
   */
  com.google.protobuf.ByteString
      getWebsiteBytes();

  /**
   * <pre>
   * Value of the `category` field in library.properties.
   * </pre>
   *
   * <code>string category = 7;</code>
   * @return The category.
   */
  java.lang.String getCategory();
  /**
   * <pre>
   * Value of the `category` field in library.properties.
   * </pre>
   *
   * <code>string category = 7;</code>
   * @return The bytes for category.
   */
  com.google.protobuf.ByteString
      getCategoryBytes();

  /**
   * <pre>
   * Value of the `architectures` field in library.properties.
   * </pre>
   *
   * <code>repeated string architectures = 8;</code>
   * @return A list containing the architectures.
   */
  java.util.List<java.lang.String>
      getArchitecturesList();
  /**
   * <pre>
   * Value of the `architectures` field in library.properties.
   * </pre>
   *
   * <code>repeated string architectures = 8;</code>
   * @return The count of architectures.
   */
  int getArchitecturesCount();
  /**
   * <pre>
   * Value of the `architectures` field in library.properties.
   * </pre>
   *
   * <code>repeated string architectures = 8;</code>
   * @param index The index of the element to return.
   * @return The architectures at the given index.
   */
  java.lang.String getArchitectures(int index);
  /**
   * <pre>
   * Value of the `architectures` field in library.properties.
   * </pre>
   *
   * <code>repeated string architectures = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the architectures at the given index.
   */
  com.google.protobuf.ByteString
      getArchitecturesBytes(int index);

  /**
   * <pre>
   * The type categories of the library. Possible values: `Arduino`,
   * `Partner`, `Recommended`, `Contributed`, `Retired`.
   * </pre>
   *
   * <code>repeated string types = 9;</code>
   * @return A list containing the types.
   */
  java.util.List<java.lang.String>
      getTypesList();
  /**
   * <pre>
   * The type categories of the library. Possible values: `Arduino`,
   * `Partner`, `Recommended`, `Contributed`, `Retired`.
   * </pre>
   *
   * <code>repeated string types = 9;</code>
   * @return The count of types.
   */
  int getTypesCount();
  /**
   * <pre>
   * The type categories of the library. Possible values: `Arduino`,
   * `Partner`, `Recommended`, `Contributed`, `Retired`.
   * </pre>
   *
   * <code>repeated string types = 9;</code>
   * @param index The index of the element to return.
   * @return The types at the given index.
   */
  java.lang.String getTypes(int index);
  /**
   * <pre>
   * The type categories of the library. Possible values: `Arduino`,
   * `Partner`, `Recommended`, `Contributed`, `Retired`.
   * </pre>
   *
   * <code>repeated string types = 9;</code>
   * @param index The index of the value to return.
   * @return The bytes of the types at the given index.
   */
  com.google.protobuf.ByteString
      getTypesBytes(int index);

  /**
   * <pre>
   * The path of the library directory.
   * </pre>
   *
   * <code>string install_dir = 10;</code>
   * @return The installDir.
   */
  java.lang.String getInstallDir();
  /**
   * <pre>
   * The path of the library directory.
   * </pre>
   *
   * <code>string install_dir = 10;</code>
   * @return The bytes for installDir.
   */
  com.google.protobuf.ByteString
      getInstallDirBytes();

  /**
   * <pre>
   * The location of the library's source files.
   * </pre>
   *
   * <code>string source_dir = 11;</code>
   * @return The sourceDir.
   */
  java.lang.String getSourceDir();
  /**
   * <pre>
   * The location of the library's source files.
   * </pre>
   *
   * <code>string source_dir = 11;</code>
   * @return The bytes for sourceDir.
   */
  com.google.protobuf.ByteString
      getSourceDirBytes();

  /**
   * <pre>
   * The location of the library's `utility` directory.
   * </pre>
   *
   * <code>string utility_dir = 12;</code>
   * @return The utilityDir.
   */
  java.lang.String getUtilityDir();
  /**
   * <pre>
   * The location of the library's `utility` directory.
   * </pre>
   *
   * <code>string utility_dir = 12;</code>
   * @return The bytes for utilityDir.
   */
  com.google.protobuf.ByteString
      getUtilityDirBytes();

  /**
   * <pre>
   * If `location` is `platform_builtin` or `referenced_platform_builtin`, the
   * identifying string for the platform containing the library
   * (e.g., `arduino:avr&#64;1.8.2`).
   * </pre>
   *
   * <code>string container_platform = 14;</code>
   * @return The containerPlatform.
   */
  java.lang.String getContainerPlatform();
  /**
   * <pre>
   * If `location` is `platform_builtin` or `referenced_platform_builtin`, the
   * identifying string for the platform containing the library
   * (e.g., `arduino:avr&#64;1.8.2`).
   * </pre>
   *
   * <code>string container_platform = 14;</code>
   * @return The bytes for containerPlatform.
   */
  com.google.protobuf.ByteString
      getContainerPlatformBytes();

  /**
   * <pre>
   * Value of the `dot_a_linkage` field in library.properties.
   * </pre>
   *
   * <code>bool dot_a_linkage = 17;</code>
   * @return The dotALinkage.
   */
  boolean getDotALinkage();

  /**
   * <pre>
   * Value of the `precompiled` field in library.properties.
   * </pre>
   *
   * <code>bool precompiled = 18;</code>
   * @return The precompiled.
   */
  boolean getPrecompiled();

  /**
   * <pre>
   * Value of the `ldflags` field in library.properties.
   * </pre>
   *
   * <code>string ld_flags = 19;</code>
   * @return The ldFlags.
   */
  java.lang.String getLdFlags();
  /**
   * <pre>
   * Value of the `ldflags` field in library.properties.
   * </pre>
   *
   * <code>string ld_flags = 19;</code>
   * @return The bytes for ldFlags.
   */
  com.google.protobuf.ByteString
      getLdFlagsBytes();

  /**
   * <pre>
   * A library.properties file is not present in the library's root directory.
   * </pre>
   *
   * <code>bool is_legacy = 20;</code>
   * @return The isLegacy.
   */
  boolean getIsLegacy();

  /**
   * <pre>
   * Value of the `version` field in library.properties.
   * </pre>
   *
   * <code>string version = 21;</code>
   * @return The version.
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * Value of the `version` field in library.properties.
   * </pre>
   *
   * <code>string version = 21;</code>
   * @return The bytes for version.
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * Value of the `license` field in library.properties.
   * </pre>
   *
   * <code>string license = 22;</code>
   * @return The license.
   */
  java.lang.String getLicense();
  /**
   * <pre>
   * Value of the `license` field in library.properties.
   * </pre>
   *
   * <code>string license = 22;</code>
   * @return The bytes for license.
   */
  com.google.protobuf.ByteString
      getLicenseBytes();

  /**
   * <pre>
   * The data from the library's library.properties file, including unused
   * fields.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 23;</code>
   */
  int getPropertiesCount();
  /**
   * <pre>
   * The data from the library's library.properties file, including unused
   * fields.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 23;</code>
   */
  boolean containsProperties(
      java.lang.String key);
  /**
   * Use {@link #getPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getProperties();
  /**
   * <pre>
   * The data from the library's library.properties file, including unused
   * fields.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 23;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getPropertiesMap();
  /**
   * <pre>
   * The data from the library's library.properties file, including unused
   * fields.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 23;</code>
   */
  /* nullable */
java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * The data from the library's library.properties file, including unused
   * fields.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 23;</code>
   */
  java.lang.String getPropertiesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * The location type of the library installation.
   * </pre>
   *
   * <code>.protocol_buffers.LibraryLocation location = 24;</code>
   * @return The enum numeric value on the wire for location.
   */
  int getLocationValue();
  /**
   * <pre>
   * The location type of the library installation.
   * </pre>
   *
   * <code>.protocol_buffers.LibraryLocation location = 24;</code>
   * @return The location.
   */
  protocol_buffers.LibraryLocation getLocation();

  /**
   * <pre>
   * The library format type.
   * </pre>
   *
   * <code>.protocol_buffers.LibraryLayout layout = 25;</code>
   * @return The enum numeric value on the wire for layout.
   */
  int getLayoutValue();
  /**
   * <pre>
   * The library format type.
   * </pre>
   *
   * <code>.protocol_buffers.LibraryLayout layout = 25;</code>
   * @return The layout.
   */
  protocol_buffers.LibraryLayout getLayout();

  /**
   * <pre>
   * The example sketches provided by the library.
   * </pre>
   *
   * <code>repeated string examples = 26;</code>
   * @return A list containing the examples.
   */
  java.util.List<java.lang.String>
      getExamplesList();
  /**
   * <pre>
   * The example sketches provided by the library.
   * </pre>
   *
   * <code>repeated string examples = 26;</code>
   * @return The count of examples.
   */
  int getExamplesCount();
  /**
   * <pre>
   * The example sketches provided by the library.
   * </pre>
   *
   * <code>repeated string examples = 26;</code>
   * @param index The index of the element to return.
   * @return The examples at the given index.
   */
  java.lang.String getExamples(int index);
  /**
   * <pre>
   * The example sketches provided by the library.
   * </pre>
   *
   * <code>repeated string examples = 26;</code>
   * @param index The index of the value to return.
   * @return The bytes of the examples at the given index.
   */
  com.google.protobuf.ByteString
      getExamplesBytes(int index);

  /**
   * <pre>
   * Value of the `includes` field in library.properties or, if missing, the
   * list of include files available on the library source root directory.
   * </pre>
   *
   * <code>repeated string provides_includes = 27;</code>
   * @return A list containing the providesIncludes.
   */
  java.util.List<java.lang.String>
      getProvidesIncludesList();
  /**
   * <pre>
   * Value of the `includes` field in library.properties or, if missing, the
   * list of include files available on the library source root directory.
   * </pre>
   *
   * <code>repeated string provides_includes = 27;</code>
   * @return The count of providesIncludes.
   */
  int getProvidesIncludesCount();
  /**
   * <pre>
   * Value of the `includes` field in library.properties or, if missing, the
   * list of include files available on the library source root directory.
   * </pre>
   *
   * <code>repeated string provides_includes = 27;</code>
   * @param index The index of the element to return.
   * @return The providesIncludes at the given index.
   */
  java.lang.String getProvidesIncludes(int index);
  /**
   * <pre>
   * Value of the `includes` field in library.properties or, if missing, the
   * list of include files available on the library source root directory.
   * </pre>
   *
   * <code>repeated string provides_includes = 27;</code>
   * @param index The index of the value to return.
   * @return The bytes of the providesIncludes at the given index.
   */
  com.google.protobuf.ByteString
      getProvidesIncludesBytes(int index);

  /**
   * <pre>
   * Map of FQBNs that specifies if library is compatible with this library.
   * </pre>
   *
   * <code>map&lt;string, bool&gt; compatible_with = 28;</code>
   */
  int getCompatibleWithCount();
  /**
   * <pre>
   * Map of FQBNs that specifies if library is compatible with this library.
   * </pre>
   *
   * <code>map&lt;string, bool&gt; compatible_with = 28;</code>
   */
  boolean containsCompatibleWith(
      java.lang.String key);
  /**
   * Use {@link #getCompatibleWithMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Boolean>
  getCompatibleWith();
  /**
   * <pre>
   * Map of FQBNs that specifies if library is compatible with this library.
   * </pre>
   *
   * <code>map&lt;string, bool&gt; compatible_with = 28;</code>
   */
  java.util.Map<java.lang.String, java.lang.Boolean>
  getCompatibleWithMap();
  /**
   * <pre>
   * Map of FQBNs that specifies if library is compatible with this library.
   * </pre>
   *
   * <code>map&lt;string, bool&gt; compatible_with = 28;</code>
   */
  boolean getCompatibleWithOrDefault(
      java.lang.String key,
      boolean defaultValue);
  /**
   * <pre>
   * Map of FQBNs that specifies if library is compatible with this library.
   * </pre>
   *
   * <code>map&lt;string, bool&gt; compatible_with = 28;</code>
   */
  boolean getCompatibleWithOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * This value is set to true if the library is in development and should not
   * be treated as read-only. This status is determined by the presence of a
   * `.development` file in the library root directory.
   * </pre>
   *
   * <code>bool in_development = 29;</code>
   * @return The inDevelopment.
   */
  boolean getInDevelopment();
}
