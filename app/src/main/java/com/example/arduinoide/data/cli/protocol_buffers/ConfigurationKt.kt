// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/cli/proto/settings.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.example.arduinoide.data.cli.protocol_buffers;

@kotlin.jvm.JvmName("-initializeconfiguration")
public inline fun configuration(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration =
  com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.newBuilder()).apply { block() }._build()
/**
 * ```
 * Configuration to apply to the given instance.
 * Any missing field will be kept at the default value.
 * ```
 *
 * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration`
 */
public object ConfigurationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration = _builder.build()

    /**
     * ```
     * The directories configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories directories = 1;`
     */
    public var directories: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories
      @kotlin.jvm.JvmName("getDirectories")
        get() = _builder.directories
      @kotlin.jvm.JvmName("setDirectories")
        set(value) {
        _builder.directories = value
      }
    /**
     * ```
     * The directories configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories directories = 1;`
     */
    public fun clearDirectories() {
      _builder.clearDirectories()
    }
    /**
     * ```
     * The directories configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories directories = 1;`
     * @return Whether the directories field is set.
     */
    public fun hasDirectories(): kotlin.Boolean {
      return _builder.hasDirectories()
    }

    public val ConfigurationKt.Dsl.directoriesOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories?
      get() = _builder.directoriesOrNull

    /**
     * ```
     * The network configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Network network = 2;`
     */
    public var network: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network
      @kotlin.jvm.JvmName("getNetwork")
        get() = _builder.network
      @kotlin.jvm.JvmName("setNetwork")
        set(value) {
        _builder.network = value
      }
    /**
     * ```
     * The network configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Network network = 2;`
     */
    public fun clearNetwork() {
      _builder.clearNetwork()
    }
    /**
     * ```
     * The network configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Network network = 2;`
     * @return Whether the network field is set.
     */
    public fun hasNetwork(): kotlin.Boolean {
      return _builder.hasNetwork()
    }

    public val ConfigurationKt.Dsl.networkOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network?
      get() = _builder.networkOrNull

    /**
     * ```
     * The sketch configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Sketch sketch = 3;`
     */
    public var sketch: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch
      @kotlin.jvm.JvmName("getSketch")
        get() = _builder.sketch
      @kotlin.jvm.JvmName("setSketch")
        set(value) {
        _builder.sketch = value
      }
    /**
     * ```
     * The sketch configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Sketch sketch = 3;`
     */
    public fun clearSketch() {
      _builder.clearSketch()
    }
    /**
     * ```
     * The sketch configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Sketch sketch = 3;`
     * @return Whether the sketch field is set.
     */
    public fun hasSketch(): kotlin.Boolean {
      return _builder.hasSketch()
    }

    public val ConfigurationKt.Dsl.sketchOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch?
      get() = _builder.sketchOrNull

    /**
     * ```
     * The build cache configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.BuildCache build_cache = 4;`
     */
    public var buildCache: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache
      @kotlin.jvm.JvmName("getBuildCache")
        get() = _builder.buildCache
      @kotlin.jvm.JvmName("setBuildCache")
        set(value) {
        _builder.buildCache = value
      }
    /**
     * ```
     * The build cache configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.BuildCache build_cache = 4;`
     */
    public fun clearBuildCache() {
      _builder.clearBuildCache()
    }
    /**
     * ```
     * The build cache configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.BuildCache build_cache = 4;`
     * @return Whether the buildCache field is set.
     */
    public fun hasBuildCache(): kotlin.Boolean {
      return _builder.hasBuildCache()
    }

    public val ConfigurationKt.Dsl.buildCacheOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache?
      get() = _builder.buildCacheOrNull

    /**
     * ```
     * The board manager configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.BoardManager board_manager = 5;`
     */
    public var boardManager: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager
      @kotlin.jvm.JvmName("getBoardManager")
        get() = _builder.boardManager
      @kotlin.jvm.JvmName("setBoardManager")
        set(value) {
        _builder.boardManager = value
      }
    /**
     * ```
     * The board manager configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.BoardManager board_manager = 5;`
     */
    public fun clearBoardManager() {
      _builder.clearBoardManager()
    }
    /**
     * ```
     * The board manager configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.BoardManager board_manager = 5;`
     * @return Whether the boardManager field is set.
     */
    public fun hasBoardManager(): kotlin.Boolean {
      return _builder.hasBoardManager()
    }

    public val ConfigurationKt.Dsl.boardManagerOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager?
      get() = _builder.boardManagerOrNull

    /**
     * ```
     * The daemon configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Daemon daemon = 6;`
     */
    public var daemon: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon
      @kotlin.jvm.JvmName("getDaemon")
        get() = _builder.daemon
      @kotlin.jvm.JvmName("setDaemon")
        set(value) {
        _builder.daemon = value
      }
    /**
     * ```
     * The daemon configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Daemon daemon = 6;`
     */
    public fun clearDaemon() {
      _builder.clearDaemon()
    }
    /**
     * ```
     * The daemon configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Daemon daemon = 6;`
     * @return Whether the daemon field is set.
     */
    public fun hasDaemon(): kotlin.Boolean {
      return _builder.hasDaemon()
    }

    public val ConfigurationKt.Dsl.daemonOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon?
      get() = _builder.daemonOrNull

    /**
     * ```
     * The console output configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Output output = 7;`
     */
    public var output: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output
      @kotlin.jvm.JvmName("getOutput")
        get() = _builder.output
      @kotlin.jvm.JvmName("setOutput")
        set(value) {
        _builder.output = value
      }
    /**
     * ```
     * The console output configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Output output = 7;`
     */
    public fun clearOutput() {
      _builder.clearOutput()
    }
    /**
     * ```
     * The console output configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Output output = 7;`
     * @return Whether the output field is set.
     */
    public fun hasOutput(): kotlin.Boolean {
      return _builder.hasOutput()
    }

    public val ConfigurationKt.Dsl.outputOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output?
      get() = _builder.outputOrNull

    /**
     * ```
     * The logging configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Logging logging = 8;`
     */
    public var logging: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging
      @kotlin.jvm.JvmName("getLogging")
        get() = _builder.logging
      @kotlin.jvm.JvmName("setLogging")
        set(value) {
        _builder.logging = value
      }
    /**
     * ```
     * The logging configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Logging logging = 8;`
     */
    public fun clearLogging() {
      _builder.clearLogging()
    }
    /**
     * ```
     * The logging configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Logging logging = 8;`
     * @return Whether the logging field is set.
     */
    public fun hasLogging(): kotlin.Boolean {
      return _builder.hasLogging()
    }

    public val ConfigurationKt.Dsl.loggingOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging?
      get() = _builder.loggingOrNull

    /**
     * ```
     * The library configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Library library = 9;`
     */
    public var library: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library
      @kotlin.jvm.JvmName("getLibrary")
        get() = _builder.library
      @kotlin.jvm.JvmName("setLibrary")
        set(value) {
        _builder.library = value
      }
    /**
     * ```
     * The library configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Library library = 9;`
     */
    public fun clearLibrary() {
      _builder.clearLibrary()
    }
    /**
     * ```
     * The library configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Library library = 9;`
     * @return Whether the library field is set.
     */
    public fun hasLibrary(): kotlin.Boolean {
      return _builder.hasLibrary()
    }

    public val ConfigurationKt.Dsl.libraryOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library?
      get() = _builder.libraryOrNull

    /**
     * ```
     * The updater configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Updater updater = 10;`
     */
    public var updater: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater
      @kotlin.jvm.JvmName("getUpdater")
        get() = _builder.updater
      @kotlin.jvm.JvmName("setUpdater")
        set(value) {
        _builder.updater = value
      }
    /**
     * ```
     * The updater configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Updater updater = 10;`
     */
    public fun clearUpdater() {
      _builder.clearUpdater()
    }
    /**
     * ```
     * The updater configuration.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.Configuration.Updater updater = 10;`
     * @return Whether the updater field is set.
     */
    public fun hasUpdater(): kotlin.Boolean {
      return _builder.hasUpdater()
    }

    public val ConfigurationKt.Dsl.updaterOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater?
      get() = _builder.updaterOrNull

    /**
     * ```
     * The language locale to use.
     * ```
     *
     * `optional string locale = 100;`
     */
    public var locale: kotlin.String
      @kotlin.jvm.JvmName("getLocale")
        get() = _builder.locale
      @kotlin.jvm.JvmName("setLocale")
        set(value) {
        _builder.locale = value
      }
    /**
     * ```
     * The language locale to use.
     * ```
     *
     * `optional string locale = 100;`
     */
    public fun clearLocale() {
      _builder.clearLocale()
    }
    /**
     * ```
     * The language locale to use.
     * ```
     *
     * `optional string locale = 100;`
     * @return Whether the locale field is set.
     */
    public fun hasLocale(): kotlin.Boolean {
      return _builder.hasLocale()
    }
  }
  @kotlin.jvm.JvmName("-initializedirectories")
  public inline fun directories(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.DirectoriesKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.DirectoriesKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories`
   */
  public object DirectoriesKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories = _builder.build()

      /**
       * ```
       * Data directory.
       * ```
       *
       * `string data = 1;`
       */
      public var data: kotlin.String
        @kotlin.jvm.JvmName("getData")
          get() = _builder.data
        @kotlin.jvm.JvmName("setData")
          set(value) {
          _builder.data = value
        }
      /**
       * ```
       * Data directory.
       * ```
       *
       * `string data = 1;`
       */
      public fun clearData() {
        _builder.clearData()
      }

      /**
       * ```
       * User directory.
       * ```
       *
       * `string user = 2;`
       */
      public var user: kotlin.String
        @kotlin.jvm.JvmName("getUser")
          get() = _builder.user
        @kotlin.jvm.JvmName("setUser")
          set(value) {
          _builder.user = value
        }
      /**
       * ```
       * User directory.
       * ```
       *
       * `string user = 2;`
       */
      public fun clearUser() {
        _builder.clearUser()
      }

      /**
       * ```
       * Downloads directory.
       * ```
       *
       * `string downloads = 3;`
       */
      public var downloads: kotlin.String
        @kotlin.jvm.JvmName("getDownloads")
          get() = _builder.downloads
        @kotlin.jvm.JvmName("setDownloads")
          set(value) {
          _builder.downloads = value
        }
      /**
       * ```
       * Downloads directory.
       * ```
       *
       * `string downloads = 3;`
       */
      public fun clearDownloads() {
        _builder.clearDownloads()
      }

      /**
       * ```
       * The directory where the built-in resources are installed.
       * ```
       *
       * `optional .com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories.Builtin builtin = 4;`
       */
      public var builtin: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin
        @kotlin.jvm.JvmName("getBuiltin")
          get() = _builder.builtin
        @kotlin.jvm.JvmName("setBuiltin")
          set(value) {
          _builder.builtin = value
        }
      /**
       * ```
       * The directory where the built-in resources are installed.
       * ```
       *
       * `optional .com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories.Builtin builtin = 4;`
       */
      public fun clearBuiltin() {
        _builder.clearBuiltin()
      }
      /**
       * ```
       * The directory where the built-in resources are installed.
       * ```
       *
       * `optional .com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories.Builtin builtin = 4;`
       * @return Whether the builtin field is set.
       */
      public fun hasBuiltin(): kotlin.Boolean {
        return _builder.hasBuiltin()
      }

      public val DirectoriesKt.Dsl.builtinOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin?
        get() = _builder.builtinOrNull
    }
    @kotlin.jvm.JvmName("-initializebuiltin")
    public inline fun builtin(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.DirectoriesKt.BuiltinKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin =
      com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.DirectoriesKt.BuiltinKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin.newBuilder()).apply { block() }._build()
    /**
     * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Directories.Builtin`
     */
    public object BuiltinKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
          internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
        internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin = _builder.build()

        /**
         * ```
         * The directory where the built-in libraries are installed.
         * ```
         *
         * `optional string libraries = 1;`
         */
        public var libraries: kotlin.String
          @kotlin.jvm.JvmName("getLibraries")
            get() = _builder.libraries
          @kotlin.jvm.JvmName("setLibraries")
            set(value) {
            _builder.libraries = value
          }
        /**
         * ```
         * The directory where the built-in libraries are installed.
         * ```
         *
         * `optional string libraries = 1;`
         */
        public fun clearLibraries() {
          _builder.clearLibraries()
        }
        /**
         * ```
         * The directory where the built-in libraries are installed.
         * ```
         *
         * `optional string libraries = 1;`
         * @return Whether the libraries field is set.
         */
        public fun hasLibraries(): kotlin.Boolean {
          return _builder.hasLibraries()
        }
      }
    }
  }
  @kotlin.jvm.JvmName("-initializenetwork")
  public inline fun network(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.NetworkKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.NetworkKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Network`
   */
  public object NetworkKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network = _builder.build()

      /**
       * ```
       * Extra user-agent information to be appended in network requests.
       * ```
       *
       * `optional string extra_user_agent = 1;`
       */
      public var extraUserAgent: kotlin.String
        @kotlin.jvm.JvmName("getExtraUserAgent")
          get() = _builder.extraUserAgent
        @kotlin.jvm.JvmName("setExtraUserAgent")
          set(value) {
          _builder.extraUserAgent = value
        }
      /**
       * ```
       * Extra user-agent information to be appended in network requests.
       * ```
       *
       * `optional string extra_user_agent = 1;`
       */
      public fun clearExtraUserAgent() {
        _builder.clearExtraUserAgent()
      }
      /**
       * ```
       * Extra user-agent information to be appended in network requests.
       * ```
       *
       * `optional string extra_user_agent = 1;`
       * @return Whether the extraUserAgent field is set.
       */
      public fun hasExtraUserAgent(): kotlin.Boolean {
        return _builder.hasExtraUserAgent()
      }

      /**
       * ```
       * The proxy to use for network requests.
       * ```
       *
       * `optional string proxy = 2;`
       */
      public var proxy: kotlin.String
        @kotlin.jvm.JvmName("getProxy")
          get() = _builder.proxy
        @kotlin.jvm.JvmName("setProxy")
          set(value) {
          _builder.proxy = value
        }
      /**
       * ```
       * The proxy to use for network requests.
       * ```
       *
       * `optional string proxy = 2;`
       */
      public fun clearProxy() {
        _builder.clearProxy()
      }
      /**
       * ```
       * The proxy to use for network requests.
       * ```
       *
       * `optional string proxy = 2;`
       * @return Whether the proxy field is set.
       */
      public fun hasProxy(): kotlin.Boolean {
        return _builder.hasProxy()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializesketch")
  public inline fun sketch(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.SketchKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.SketchKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Sketch`
   */
  public object SketchKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch = _builder.build()

      /**
       * ```
       * Set to true to always export binaries to the sketch directory.
       * ```
       *
       * `bool always_export_binaries = 1;`
       */
      public var alwaysExportBinaries: kotlin.Boolean
        @kotlin.jvm.JvmName("getAlwaysExportBinaries")
          get() = _builder.alwaysExportBinaries
        @kotlin.jvm.JvmName("setAlwaysExportBinaries")
          set(value) {
          _builder.alwaysExportBinaries = value
        }
      /**
       * ```
       * Set to true to always export binaries to the sketch directory.
       * ```
       *
       * `bool always_export_binaries = 1;`
       */
      public fun clearAlwaysExportBinaries() {
        _builder.clearAlwaysExportBinaries()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializebuildCache")
  public inline fun buildCache(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.BuildCacheKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.BuildCacheKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.BuildCache`
   */
  public object BuildCacheKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache = _builder.build()

      /**
       * ```
       * The minimum number of compilations before the cache is purged.
       * ```
       *
       * `uint64 compilations_before_purge = 1;`
       */
      public var compilationsBeforePurge: kotlin.Long
        @kotlin.jvm.JvmName("getCompilationsBeforePurge")
          get() = _builder.compilationsBeforePurge
        @kotlin.jvm.JvmName("setCompilationsBeforePurge")
          set(value) {
          _builder.compilationsBeforePurge = value
        }
      /**
       * ```
       * The minimum number of compilations before the cache is purged.
       * ```
       *
       * `uint64 compilations_before_purge = 1;`
       */
      public fun clearCompilationsBeforePurge() {
        _builder.clearCompilationsBeforePurge()
      }

      /**
       * ```
       * Time to live of the cache in seconds.
       * ```
       *
       * `uint64 ttl_secs = 2;`
       */
      public var ttlSecs: kotlin.Long
        @kotlin.jvm.JvmName("getTtlSecs")
          get() = _builder.ttlSecs
        @kotlin.jvm.JvmName("setTtlSecs")
          set(value) {
          _builder.ttlSecs = value
        }
      /**
       * ```
       * Time to live of the cache in seconds.
       * ```
       *
       * `uint64 ttl_secs = 2;`
       */
      public fun clearTtlSecs() {
        _builder.clearTtlSecs()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeboardManager")
  public inline fun boardManager(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.BoardManagerKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.BoardManagerKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.BoardManager`
   */
  public object BoardManagerKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class AdditionalUrlsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Additional URLs to be used for the board manager.
       * ```
       *
       * `repeated string additional_urls = 1;`
       * @return A list containing the additionalUrls.
       */
      public val additionalUrls: com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalUrlsProxy>
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        get() = com.google.protobuf.kotlin.DslList(
          _builder.additionalUrlsList
        )
      /**
       * ```
       * Additional URLs to be used for the board manager.
       * ```
       *
       * `repeated string additional_urls = 1;`
       * @param value The additionalUrls to add.
       */
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAdditionalUrls")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalUrlsProxy>.add(value: kotlin.String) {
        _builder.addAdditionalUrls(value)
      }
      /**
       * ```
       * Additional URLs to be used for the board manager.
       * ```
       *
       * `repeated string additional_urls = 1;`
       * @param value The additionalUrls to add.
       */
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAdditionalUrls")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalUrlsProxy>.plusAssign(value: kotlin.String) {
        add(value)
      }
      /**
       * ```
       * Additional URLs to be used for the board manager.
       * ```
       *
       * `repeated string additional_urls = 1;`
       * @param values The additionalUrls to add.
       */
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllAdditionalUrls")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalUrlsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
        _builder.addAllAdditionalUrls(values)
      }
      /**
       * ```
       * Additional URLs to be used for the board manager.
       * ```
       *
       * `repeated string additional_urls = 1;`
       * @param values The additionalUrls to add.
       */
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllAdditionalUrls")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalUrlsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
        addAll(values)
      }
      /**
       * ```
       * Additional URLs to be used for the board manager.
       * ```
       *
       * `repeated string additional_urls = 1;`
       * @param index The index to set the value at.
       * @param value The additionalUrls to set.
       */
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setAdditionalUrls")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalUrlsProxy>.set(index: kotlin.Int, value: kotlin.String) {
        _builder.setAdditionalUrls(index, value)
      }/**
       * ```
       * Additional URLs to be used for the board manager.
       * ```
       *
       * `repeated string additional_urls = 1;`
       */
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setAdditionalUrls")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, AdditionalUrlsProxy>.clear() {
        _builder.clearAdditionalUrls()
      }}
  }
  @kotlin.jvm.JvmName("-initializedaemon")
  public inline fun daemon(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.DaemonKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.DaemonKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Daemon`
   */
  public object DaemonKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon = _builder.build()

      /**
       * ```
       * The TCP port of the daemon.
       * ```
       *
       * `string port = 1;`
       */
      public var port: kotlin.String
        @kotlin.jvm.JvmName("getPort")
          get() = _builder.port
        @kotlin.jvm.JvmName("setPort")
          set(value) {
          _builder.port = value
        }
      /**
       * ```
       * The TCP port of the daemon.
       * ```
       *
       * `string port = 1;`
       */
      public fun clearPort() {
        _builder.clearPort()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeoutput")
  public inline fun output(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.OutputKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.OutputKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Output`
   */
  public object OutputKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output = _builder.build()

      /**
       * ```
       * Set to true to disable coloring of the output.
       * ```
       *
       * `bool no_color = 1;`
       */
      public var noColor: kotlin.Boolean
        @kotlin.jvm.JvmName("getNoColor")
          get() = _builder.noColor
        @kotlin.jvm.JvmName("setNoColor")
          set(value) {
          _builder.noColor = value
        }
      /**
       * ```
       * Set to true to disable coloring of the output.
       * ```
       *
       * `bool no_color = 1;`
       */
      public fun clearNoColor() {
        _builder.clearNoColor()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializelogging")
  public inline fun logging(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.LoggingKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.LoggingKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Logging`
   */
  public object LoggingKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging = _builder.build()

      /**
       * ```
       * The logging level.
       * ```
       *
       * `string level = 1;`
       */
      public var level: kotlin.String
        @kotlin.jvm.JvmName("getLevel")
          get() = _builder.level
        @kotlin.jvm.JvmName("setLevel")
          set(value) {
          _builder.level = value
        }
      /**
       * ```
       * The logging level.
       * ```
       *
       * `string level = 1;`
       */
      public fun clearLevel() {
        _builder.clearLevel()
      }

      /**
       * ```
       * The logging format.
       * ```
       *
       * `string format = 2;`
       */
      public var format: kotlin.String
        @kotlin.jvm.JvmName("getFormat")
          get() = _builder.format
        @kotlin.jvm.JvmName("setFormat")
          set(value) {
          _builder.format = value
        }
      /**
       * ```
       * The logging format.
       * ```
       *
       * `string format = 2;`
       */
      public fun clearFormat() {
        _builder.clearFormat()
      }

      /**
       * ```
       * The logging file.
       * ```
       *
       * `optional string file = 3;`
       */
      public var file: kotlin.String
        @kotlin.jvm.JvmName("getFile")
          get() = _builder.file
        @kotlin.jvm.JvmName("setFile")
          set(value) {
          _builder.file = value
        }
      /**
       * ```
       * The logging file.
       * ```
       *
       * `optional string file = 3;`
       */
      public fun clearFile() {
        _builder.clearFile()
      }
      /**
       * ```
       * The logging file.
       * ```
       *
       * `optional string file = 3;`
       * @return Whether the file field is set.
       */
      public fun hasFile(): kotlin.Boolean {
        return _builder.hasFile()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializelibrary")
  public inline fun library(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.LibraryKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.LibraryKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Library`
   */
  public object LibraryKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library = _builder.build()

      /**
       * ```
       * Set to true to enable library installation from zip archives or git
       * repositories.
       * ```
       *
       * `bool enable_unsafe_install = 1;`
       */
      public var enableUnsafeInstall: kotlin.Boolean
        @kotlin.jvm.JvmName("getEnableUnsafeInstall")
          get() = _builder.enableUnsafeInstall
        @kotlin.jvm.JvmName("setEnableUnsafeInstall")
          set(value) {
          _builder.enableUnsafeInstall = value
        }
      /**
       * ```
       * Set to true to enable library installation from zip archives or git
       * repositories.
       * ```
       *
       * `bool enable_unsafe_install = 1;`
       */
      public fun clearEnableUnsafeInstall() {
        _builder.clearEnableUnsafeInstall()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeupdater")
  public inline fun updater(block: com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.UpdaterKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater =
    com.example.arduinoide.data.cli.protocol_buffers.ConfigurationKt.UpdaterKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.Configuration.Updater`
   */
  public object UpdaterKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater = _builder.build()

      /**
       * ```
       * Set to true to enable notifications for updates.
       * ```
       *
       * `bool enable_notification = 1;`
       */
      public var enableNotification: kotlin.Boolean
        @kotlin.jvm.JvmName("getEnableNotification")
          get() = _builder.enableNotification
        @kotlin.jvm.JvmName("setEnableNotification")
          set(value) {
          _builder.enableNotification = value
        }
      /**
       * ```
       * Set to true to enable notifications for updates.
       * ```
       *
       * `bool enable_notification = 1;`
       */
      public fun clearEnableNotification() {
        _builder.clearEnableNotification()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.DirectoriesKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.DirectoriesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.DirectoriesKt.BuiltinKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.DirectoriesKt.BuiltinKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.DirectoriesOrBuilder.builtinOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories.Builtin?
  get() = if (hasBuiltin()) getBuiltin() else null

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.NetworkKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.NetworkKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.SketchKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.SketchKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.BuildCacheKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.BuildCacheKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.BoardManagerKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.BoardManagerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.DaemonKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.DaemonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.OutputKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.OutputKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.LoggingKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.LoggingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.LibraryKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.LibraryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.UpdaterKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater =
  `com.example.arduinoide.data.cli.protocol_buffers`.ConfigurationKt.UpdaterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.directoriesOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Directories?
  get() = if (hasDirectories()) getDirectories() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.networkOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Network?
  get() = if (hasNetwork()) getNetwork() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.sketchOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Sketch?
  get() = if (hasSketch()) getSketch() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.buildCacheOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BuildCache?
  get() = if (hasBuildCache()) getBuildCache() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.boardManagerOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.BoardManager?
  get() = if (hasBoardManager()) getBoardManager() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.daemonOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Daemon?
  get() = if (hasDaemon()) getDaemon() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.outputOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Output?
  get() = if (hasOutput()) getOutput() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.loggingOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Logging?
  get() = if (hasLogging()) getLogging() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.libraryOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Library?
  get() = if (hasLibrary()) getLibrary() else null

public val com.example.arduinoide.data.cli.protocol_buffers.Settings.ConfigurationOrBuilder.updaterOrNull: com.example.arduinoide.data.cli.protocol_buffers.Settings.Configuration.Updater?
  get() = if (hasUpdater()) getUpdater() else null

