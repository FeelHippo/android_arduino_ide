// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/data/cli/proto/commands.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.example.arduinoide.data.cli.protocol_buffers;

@kotlin.jvm.JvmName("-initializefailedInstanceInitError")
public inline fun failedInstanceInitError(block: com.example.arduinoide.data.cli.protocol_buffers.FailedInstanceInitErrorKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitError =
  com.example.arduinoide.data.cli.protocol_buffers.FailedInstanceInitErrorKt.Dsl._create(com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitError.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.example.arduinoide.data.cli.protocol_buffers.FailedInstanceInitError`
 */
public object FailedInstanceInitErrorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitError.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitError.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitError = _builder.build()

    /**
     * ```
     * specific cause of the error.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.FailedInstanceInitReason reason = 1;`
     */
    public var reason: com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitReason
      @kotlin.jvm.JvmName("getReason")
        get() = _builder.reason
      @kotlin.jvm.JvmName("setReason")
        set(value) {
        _builder.reason = value
      }
    public var reasonValue: kotlin.Int
      @kotlin.jvm.JvmName("getReasonValue")
        get() = _builder.reasonValue
      @kotlin.jvm.JvmName("setReasonValue")
        set(value) {
        _builder.reasonValue = value
      }
    /**
     * ```
     * specific cause of the error.
     * ```
     *
     * `.com.example.arduinoide.data.cli.protocol_buffers.FailedInstanceInitReason reason = 1;`
     */
    public fun clearReason() {
      _builder.clearReason()
    }

    /**
     * ```
     * explanation of the error.
     * ```
     *
     * `string message = 2;`
     */
    public var message: kotlin.String
      @kotlin.jvm.JvmName("getMessage")
        get() = _builder.message
      @kotlin.jvm.JvmName("setMessage")
        set(value) {
        _builder.message = value
      }
    /**
     * ```
     * explanation of the error.
     * ```
     *
     * `string message = 2;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitError.copy(block: `com.example.arduinoide.data.cli.protocol_buffers`.FailedInstanceInitErrorKt.Dsl.() -> kotlin.Unit): com.example.arduinoide.data.cli.protocol_buffers.Commands.FailedInstanceInitError =
  `com.example.arduinoide.data.cli.protocol_buffers`.FailedInstanceInitErrorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

