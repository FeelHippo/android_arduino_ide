// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/cli/commands/proto/lib.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol_buffers;

@kotlin.jvm.JvmName("-initializeinstalledLibrary")
public inline fun installedLibrary(block: protocol_buffers.InstalledLibraryKt.Dsl.() -> kotlin.Unit): protocol_buffers.Lib.InstalledLibrary =
  protocol_buffers.InstalledLibraryKt.Dsl._create(protocol_buffers.Lib.InstalledLibrary.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol_buffers.InstalledLibrary`
 */
public object InstalledLibraryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol_buffers.Lib.InstalledLibrary.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: protocol_buffers.Lib.InstalledLibrary.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): protocol_buffers.Lib.InstalledLibrary = _builder.build()

    /**
     * ```
     * Information about the library.
     * ```
     *
     * `.protocol_buffers.Library library = 1;`
     */
    public var library: protocol_buffers.Lib.Library
      @kotlin.jvm.JvmName("getLibrary")
        get() = _builder.library
      @kotlin.jvm.JvmName("setLibrary")
        set(value) {
        _builder.library = value
      }
    /**
     * ```
     * Information about the library.
     * ```
     *
     * `.protocol_buffers.Library library = 1;`
     */
    public fun clearLibrary() {
      _builder.clearLibrary()
    }
    /**
     * ```
     * Information about the library.
     * ```
     *
     * `.protocol_buffers.Library library = 1;`
     * @return Whether the library field is set.
     */
    public fun hasLibrary(): kotlin.Boolean {
      return _builder.hasLibrary()
    }

    public val InstalledLibraryKt.Dsl.libraryOrNull: protocol_buffers.Lib.Library?
      get() = _builder.libraryOrNull

    /**
     * ```
     * When the `updatable` field of the `LibraryList` request is set to `true`,
     * this will contain information on the latest version of the library in the
     * libraries index.
     * ```
     *
     * `.protocol_buffers.LibraryRelease release = 2;`
     */
    public var release: protocol_buffers.Lib.LibraryRelease
      @kotlin.jvm.JvmName("getRelease")
        get() = _builder.release
      @kotlin.jvm.JvmName("setRelease")
        set(value) {
        _builder.release = value
      }
    /**
     * ```
     * When the `updatable` field of the `LibraryList` request is set to `true`,
     * this will contain information on the latest version of the library in the
     * libraries index.
     * ```
     *
     * `.protocol_buffers.LibraryRelease release = 2;`
     */
    public fun clearRelease() {
      _builder.clearRelease()
    }
    /**
     * ```
     * When the `updatable` field of the `LibraryList` request is set to `true`,
     * this will contain information on the latest version of the library in the
     * libraries index.
     * ```
     *
     * `.protocol_buffers.LibraryRelease release = 2;`
     * @return Whether the release field is set.
     */
    public fun hasRelease(): kotlin.Boolean {
      return _builder.hasRelease()
    }

    public val InstalledLibraryKt.Dsl.releaseOrNull: protocol_buffers.Lib.LibraryRelease?
      get() = _builder.releaseOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol_buffers.Lib.InstalledLibrary.copy(block: `protocol_buffers`.InstalledLibraryKt.Dsl.() -> kotlin.Unit): protocol_buffers.Lib.InstalledLibrary =
  `protocol_buffers`.InstalledLibraryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol_buffers.Lib.InstalledLibraryOrBuilder.libraryOrNull: protocol_buffers.Lib.Library?
  get() = if (hasLibrary()) getLibrary() else null

public val protocol_buffers.Lib.InstalledLibraryOrBuilder.releaseOrNull: protocol_buffers.Lib.LibraryRelease?
  get() = if (hasRelease()) getRelease() else null

