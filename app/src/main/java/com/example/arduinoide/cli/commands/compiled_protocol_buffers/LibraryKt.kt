// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: lib.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package compiled_protocol_buffers;

@kotlin.jvm.JvmName("-initializelibrary")
public inline fun library(block: compiled_protocol_buffers.LibraryKt.Dsl.() -> kotlin.Unit): compiled_protocol_buffers.Lib.Library =
  compiled_protocol_buffers.LibraryKt.Dsl._create(compiled_protocol_buffers.Lib.Library.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `compiled_protocol_buffers.Library`
 */
public object LibraryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: compiled_protocol_buffers.Lib.Library.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: compiled_protocol_buffers.Lib.Library.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): compiled_protocol_buffers.Lib.Library = _builder.build()

    /**
     * ```
     * Library name (value of `name` field in library.properties).
     * ```
     *
     * `string name = 1;`
     */
    public var name: kotlin.String
      @kotlin.jvm.JvmName("getName")
        get() = _builder.name
      @kotlin.jvm.JvmName("setName")
        set(value) {
        _builder.name = value
      }
    /**
     * ```
     * Library name (value of `name` field in library.properties).
     * ```
     *
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * Value of the `author` field in library.properties.
     * ```
     *
     * `string author = 2;`
     */
    public var author: kotlin.String
      @kotlin.jvm.JvmName("getAuthor")
        get() = _builder.author
      @kotlin.jvm.JvmName("setAuthor")
        set(value) {
        _builder.author = value
      }
    /**
     * ```
     * Value of the `author` field in library.properties.
     * ```
     *
     * `string author = 2;`
     */
    public fun clearAuthor() {
      _builder.clearAuthor()
    }

    /**
     * ```
     * Value of the `maintainer` field in library.properties.
     * ```
     *
     * `string maintainer = 3;`
     */
    public var maintainer: kotlin.String
      @kotlin.jvm.JvmName("getMaintainer")
        get() = _builder.maintainer
      @kotlin.jvm.JvmName("setMaintainer")
        set(value) {
        _builder.maintainer = value
      }
    /**
     * ```
     * Value of the `maintainer` field in library.properties.
     * ```
     *
     * `string maintainer = 3;`
     */
    public fun clearMaintainer() {
      _builder.clearMaintainer()
    }

    /**
     * ```
     * Value of the `sentence` field in library.properties.
     * ```
     *
     * `string sentence = 4;`
     */
    public var sentence: kotlin.String
      @kotlin.jvm.JvmName("getSentence")
        get() = _builder.sentence
      @kotlin.jvm.JvmName("setSentence")
        set(value) {
        _builder.sentence = value
      }
    /**
     * ```
     * Value of the `sentence` field in library.properties.
     * ```
     *
     * `string sentence = 4;`
     */
    public fun clearSentence() {
      _builder.clearSentence()
    }

    /**
     * ```
     * Value of the `paragraph` field in library.properties.
     * ```
     *
     * `string paragraph = 5;`
     */
    public var paragraph: kotlin.String
      @kotlin.jvm.JvmName("getParagraph")
        get() = _builder.paragraph
      @kotlin.jvm.JvmName("setParagraph")
        set(value) {
        _builder.paragraph = value
      }
    /**
     * ```
     * Value of the `paragraph` field in library.properties.
     * ```
     *
     * `string paragraph = 5;`
     */
    public fun clearParagraph() {
      _builder.clearParagraph()
    }

    /**
     * ```
     * Value of the `url` field in library.properties.
     * ```
     *
     * `string website = 6;`
     */
    public var website: kotlin.String
      @kotlin.jvm.JvmName("getWebsite")
        get() = _builder.website
      @kotlin.jvm.JvmName("setWebsite")
        set(value) {
        _builder.website = value
      }
    /**
     * ```
     * Value of the `url` field in library.properties.
     * ```
     *
     * `string website = 6;`
     */
    public fun clearWebsite() {
      _builder.clearWebsite()
    }

    /**
     * ```
     * Value of the `category` field in library.properties.
     * ```
     *
     * `string category = 7;`
     */
    public var category: kotlin.String
      @kotlin.jvm.JvmName("getCategory")
        get() = _builder.category
      @kotlin.jvm.JvmName("setCategory")
        set(value) {
        _builder.category = value
      }
    /**
     * ```
     * Value of the `category` field in library.properties.
     * ```
     *
     * `string category = 7;`
     */
    public fun clearCategory() {
      _builder.clearCategory()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ArchitecturesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Value of the `architectures` field in library.properties.
     * ```
     *
     * `repeated string architectures = 8;`
     * @return A list containing the architectures.
     */
    public val architectures: com.google.protobuf.kotlin.DslList<kotlin.String, ArchitecturesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.architecturesList
      )
    /**
     * ```
     * Value of the `architectures` field in library.properties.
     * ```
     *
     * `repeated string architectures = 8;`
     * @param value The architectures to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addArchitectures")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ArchitecturesProxy>.add(value: kotlin.String) {
      _builder.addArchitectures(value)
    }
    /**
     * ```
     * Value of the `architectures` field in library.properties.
     * ```
     *
     * `repeated string architectures = 8;`
     * @param value The architectures to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignArchitectures")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ArchitecturesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * Value of the `architectures` field in library.properties.
     * ```
     *
     * `repeated string architectures = 8;`
     * @param values The architectures to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllArchitectures")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ArchitecturesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllArchitectures(values)
    }
    /**
     * ```
     * Value of the `architectures` field in library.properties.
     * ```
     *
     * `repeated string architectures = 8;`
     * @param values The architectures to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllArchitectures")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ArchitecturesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * Value of the `architectures` field in library.properties.
     * ```
     *
     * `repeated string architectures = 8;`
     * @param index The index to set the value at.
     * @param value The architectures to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setArchitectures")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ArchitecturesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setArchitectures(index, value)
    }/**
     * ```
     * Value of the `architectures` field in library.properties.
     * ```
     *
     * `repeated string architectures = 8;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setArchitectures")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ArchitecturesProxy>.clear() {
      _builder.clearArchitectures()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The type categories of the library. Possible values: `Arduino`,
     * `Partner`, `Recommended`, `Contributed`, `Retired`.
     * ```
     *
     * `repeated string types = 9;`
     * @return A list containing the types.
     */
    public val types: com.google.protobuf.kotlin.DslList<kotlin.String, TypesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.typesList
      )
    /**
     * ```
     * The type categories of the library. Possible values: `Arduino`,
     * `Partner`, `Recommended`, `Contributed`, `Retired`.
     * ```
     *
     * `repeated string types = 9;`
     * @param value The types to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TypesProxy>.add(value: kotlin.String) {
      _builder.addTypes(value)
    }
    /**
     * ```
     * The type categories of the library. Possible values: `Arduino`,
     * `Partner`, `Recommended`, `Contributed`, `Retired`.
     * ```
     *
     * `repeated string types = 9;`
     * @param value The types to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TypesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * The type categories of the library. Possible values: `Arduino`,
     * `Partner`, `Recommended`, `Contributed`, `Retired`.
     * ```
     *
     * `repeated string types = 9;`
     * @param values The types to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TypesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllTypes(values)
    }
    /**
     * ```
     * The type categories of the library. Possible values: `Arduino`,
     * `Partner`, `Recommended`, `Contributed`, `Retired`.
     * ```
     *
     * `repeated string types = 9;`
     * @param values The types to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TypesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * The type categories of the library. Possible values: `Arduino`,
     * `Partner`, `Recommended`, `Contributed`, `Retired`.
     * ```
     *
     * `repeated string types = 9;`
     * @param index The index to set the value at.
     * @param value The types to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setTypes")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TypesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setTypes(index, value)
    }/**
     * ```
     * The type categories of the library. Possible values: `Arduino`,
     * `Partner`, `Recommended`, `Contributed`, `Retired`.
     * ```
     *
     * `repeated string types = 9;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TypesProxy>.clear() {
      _builder.clearTypes()
    }
    /**
     * ```
     * The path of the library directory.
     * ```
     *
     * `string install_dir = 10;`
     */
    public var installDir: kotlin.String
      @kotlin.jvm.JvmName("getInstallDir")
        get() = _builder.installDir
      @kotlin.jvm.JvmName("setInstallDir")
        set(value) {
        _builder.installDir = value
      }
    /**
     * ```
     * The path of the library directory.
     * ```
     *
     * `string install_dir = 10;`
     */
    public fun clearInstallDir() {
      _builder.clearInstallDir()
    }

    /**
     * ```
     * The location of the library's source files.
     * ```
     *
     * `string source_dir = 11;`
     */
    public var sourceDir: kotlin.String
      @kotlin.jvm.JvmName("getSourceDir")
        get() = _builder.sourceDir
      @kotlin.jvm.JvmName("setSourceDir")
        set(value) {
        _builder.sourceDir = value
      }
    /**
     * ```
     * The location of the library's source files.
     * ```
     *
     * `string source_dir = 11;`
     */
    public fun clearSourceDir() {
      _builder.clearSourceDir()
    }

    /**
     * ```
     * The location of the library's `utility` directory.
     * ```
     *
     * `string utility_dir = 12;`
     */
    public var utilityDir: kotlin.String
      @kotlin.jvm.JvmName("getUtilityDir")
        get() = _builder.utilityDir
      @kotlin.jvm.JvmName("setUtilityDir")
        set(value) {
        _builder.utilityDir = value
      }
    /**
     * ```
     * The location of the library's `utility` directory.
     * ```
     *
     * `string utility_dir = 12;`
     */
    public fun clearUtilityDir() {
      _builder.clearUtilityDir()
    }

    /**
     * ```
     * If `location` is `platform_builtin` or `referenced_platform_builtin`, the
     * identifying string for the platform containing the library
     * (e.g., `arduino:avr@1.8.2`).
     * ```
     *
     * `string container_platform = 14;`
     */
    public var containerPlatform: kotlin.String
      @kotlin.jvm.JvmName("getContainerPlatform")
        get() = _builder.containerPlatform
      @kotlin.jvm.JvmName("setContainerPlatform")
        set(value) {
        _builder.containerPlatform = value
      }
    /**
     * ```
     * If `location` is `platform_builtin` or `referenced_platform_builtin`, the
     * identifying string for the platform containing the library
     * (e.g., `arduino:avr@1.8.2`).
     * ```
     *
     * `string container_platform = 14;`
     */
    public fun clearContainerPlatform() {
      _builder.clearContainerPlatform()
    }

    /**
     * ```
     * Value of the `dot_a_linkage` field in library.properties.
     * ```
     *
     * `bool dot_a_linkage = 17;`
     */
    public var dotALinkage: kotlin.Boolean
      @kotlin.jvm.JvmName("getDotALinkage")
        get() = _builder.dotALinkage
      @kotlin.jvm.JvmName("setDotALinkage")
        set(value) {
        _builder.dotALinkage = value
      }
    /**
     * ```
     * Value of the `dot_a_linkage` field in library.properties.
     * ```
     *
     * `bool dot_a_linkage = 17;`
     */
    public fun clearDotALinkage() {
      _builder.clearDotALinkage()
    }

    /**
     * ```
     * Value of the `precompiled` field in library.properties.
     * ```
     *
     * `bool precompiled = 18;`
     */
    public var precompiled: kotlin.Boolean
      @kotlin.jvm.JvmName("getPrecompiled")
        get() = _builder.precompiled
      @kotlin.jvm.JvmName("setPrecompiled")
        set(value) {
        _builder.precompiled = value
      }
    /**
     * ```
     * Value of the `precompiled` field in library.properties.
     * ```
     *
     * `bool precompiled = 18;`
     */
    public fun clearPrecompiled() {
      _builder.clearPrecompiled()
    }

    /**
     * ```
     * Value of the `ldflags` field in library.properties.
     * ```
     *
     * `string ld_flags = 19;`
     */
    public var ldFlags: kotlin.String
      @kotlin.jvm.JvmName("getLdFlags")
        get() = _builder.ldFlags
      @kotlin.jvm.JvmName("setLdFlags")
        set(value) {
        _builder.ldFlags = value
      }
    /**
     * ```
     * Value of the `ldflags` field in library.properties.
     * ```
     *
     * `string ld_flags = 19;`
     */
    public fun clearLdFlags() {
      _builder.clearLdFlags()
    }

    /**
     * ```
     * A library.properties file is not present in the library's root directory.
     * ```
     *
     * `bool is_legacy = 20;`
     */
    public var isLegacy: kotlin.Boolean
      @kotlin.jvm.JvmName("getIsLegacy")
        get() = _builder.isLegacy
      @kotlin.jvm.JvmName("setIsLegacy")
        set(value) {
        _builder.isLegacy = value
      }
    /**
     * ```
     * A library.properties file is not present in the library's root directory.
     * ```
     *
     * `bool is_legacy = 20;`
     */
    public fun clearIsLegacy() {
      _builder.clearIsLegacy()
    }

    /**
     * ```
     * Value of the `version` field in library.properties.
     * ```
     *
     * `string version = 21;`
     */
    public var version: kotlin.String
      @kotlin.jvm.JvmName("getVersion")
        get() = _builder.version
      @kotlin.jvm.JvmName("setVersion")
        set(value) {
        _builder.version = value
      }
    /**
     * ```
     * Value of the `version` field in library.properties.
     * ```
     *
     * `string version = 21;`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * ```
     * Value of the `license` field in library.properties.
     * ```
     *
     * `string license = 22;`
     */
    public var license: kotlin.String
      @kotlin.jvm.JvmName("getLicense")
        get() = _builder.license
      @kotlin.jvm.JvmName("setLicense")
        set(value) {
        _builder.license = value
      }
    /**
     * ```
     * Value of the `license` field in library.properties.
     * ```
     *
     * `string license = 22;`
     */
    public fun clearLicense() {
      _builder.clearLicense()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PropertiesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The data from the library's library.properties file, including unused
     * fields.
     * ```
     *
     * `map<string, string> properties = 23;`
     */
     public val properties: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("getPropertiesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.propertiesMap
      )
    /**
     * ```
     * The data from the library's library.properties file, including unused
     * fields.
     * ```
     *
     * `map<string, string> properties = 23;`
     */
    @kotlin.jvm.JvmName("putProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putProperties(key, value)
       }
    /**
     * ```
     * The data from the library's library.properties file, including unused
     * fields.
     * ```
     *
     * `map<string, string> properties = 23;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setProperties")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * The data from the library's library.properties file, including unused
     * fields.
     * ```
     *
     * `map<string, string> properties = 23;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("removeProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .remove(key: kotlin.String) {
         _builder.removeProperties(key)
       }
    /**
     * ```
     * The data from the library's library.properties file, including unused
     * fields.
     * ```
     *
     * `map<string, string> properties = 23;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("putAllProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllProperties(map)
       }
    /**
     * ```
     * The data from the library's library.properties file, including unused
     * fields.
     * ```
     *
     * `map<string, string> properties = 23;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PropertiesProxy>
      .clear() {
         _builder.clearProperties()
       }

    /**
     * ```
     * The location type of the library installation.
     * ```
     *
     * `.compiled_protocol_buffers.LibraryLocation location = 24;`
     */
    public var location: compiled_protocol_buffers.Lib.LibraryLocation
      @kotlin.jvm.JvmName("getLocation")
        get() = _builder.location
      @kotlin.jvm.JvmName("setLocation")
        set(value) {
        _builder.location = value
      }
    public var locationValue: kotlin.Int
      @kotlin.jvm.JvmName("getLocationValue")
        get() = _builder.locationValue
      @kotlin.jvm.JvmName("setLocationValue")
        set(value) {
        _builder.locationValue = value
      }
    /**
     * ```
     * The location type of the library installation.
     * ```
     *
     * `.compiled_protocol_buffers.LibraryLocation location = 24;`
     */
    public fun clearLocation() {
      _builder.clearLocation()
    }

    /**
     * ```
     * The library format type.
     * ```
     *
     * `.compiled_protocol_buffers.LibraryLayout layout = 25;`
     */
    public var layout: compiled_protocol_buffers.Lib.LibraryLayout
      @kotlin.jvm.JvmName("getLayout")
        get() = _builder.layout
      @kotlin.jvm.JvmName("setLayout")
        set(value) {
        _builder.layout = value
      }
    public var layoutValue: kotlin.Int
      @kotlin.jvm.JvmName("getLayoutValue")
        get() = _builder.layoutValue
      @kotlin.jvm.JvmName("setLayoutValue")
        set(value) {
        _builder.layoutValue = value
      }
    /**
     * ```
     * The library format type.
     * ```
     *
     * `.compiled_protocol_buffers.LibraryLayout layout = 25;`
     */
    public fun clearLayout() {
      _builder.clearLayout()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ExamplesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The example sketches provided by the library.
     * ```
     *
     * `repeated string examples = 26;`
     * @return A list containing the examples.
     */
    public val examples: com.google.protobuf.kotlin.DslList<kotlin.String, ExamplesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.examplesList
      )
    /**
     * ```
     * The example sketches provided by the library.
     * ```
     *
     * `repeated string examples = 26;`
     * @param value The examples to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addExamples")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ExamplesProxy>.add(value: kotlin.String) {
      _builder.addExamples(value)
    }
    /**
     * ```
     * The example sketches provided by the library.
     * ```
     *
     * `repeated string examples = 26;`
     * @param value The examples to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignExamples")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ExamplesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * The example sketches provided by the library.
     * ```
     *
     * `repeated string examples = 26;`
     * @param values The examples to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllExamples")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ExamplesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllExamples(values)
    }
    /**
     * ```
     * The example sketches provided by the library.
     * ```
     *
     * `repeated string examples = 26;`
     * @param values The examples to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllExamples")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ExamplesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * The example sketches provided by the library.
     * ```
     *
     * `repeated string examples = 26;`
     * @param index The index to set the value at.
     * @param value The examples to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setExamples")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ExamplesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setExamples(index, value)
    }/**
     * ```
     * The example sketches provided by the library.
     * ```
     *
     * `repeated string examples = 26;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setExamples")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ExamplesProxy>.clear() {
      _builder.clearExamples()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ProvidesIncludesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Value of the `includes` field in library.properties or, if missing, the
     * list of include files available on the library source root directory.
     * ```
     *
     * `repeated string provides_includes = 27;`
     * @return A list containing the providesIncludes.
     */
    public val providesIncludes: com.google.protobuf.kotlin.DslList<kotlin.String, ProvidesIncludesProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.providesIncludesList
      )
    /**
     * ```
     * Value of the `includes` field in library.properties or, if missing, the
     * list of include files available on the library source root directory.
     * ```
     *
     * `repeated string provides_includes = 27;`
     * @param value The providesIncludes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addProvidesIncludes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ProvidesIncludesProxy>.add(value: kotlin.String) {
      _builder.addProvidesIncludes(value)
    }
    /**
     * ```
     * Value of the `includes` field in library.properties or, if missing, the
     * list of include files available on the library source root directory.
     * ```
     *
     * `repeated string provides_includes = 27;`
     * @param value The providesIncludes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignProvidesIncludes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ProvidesIncludesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * Value of the `includes` field in library.properties or, if missing, the
     * list of include files available on the library source root directory.
     * ```
     *
     * `repeated string provides_includes = 27;`
     * @param values The providesIncludes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllProvidesIncludes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ProvidesIncludesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllProvidesIncludes(values)
    }
    /**
     * ```
     * Value of the `includes` field in library.properties or, if missing, the
     * list of include files available on the library source root directory.
     * ```
     *
     * `repeated string provides_includes = 27;`
     * @param values The providesIncludes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllProvidesIncludes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ProvidesIncludesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * Value of the `includes` field in library.properties or, if missing, the
     * list of include files available on the library source root directory.
     * ```
     *
     * `repeated string provides_includes = 27;`
     * @param index The index to set the value at.
     * @param value The providesIncludes to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setProvidesIncludes")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ProvidesIncludesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setProvidesIncludes(index, value)
    }/**
     * ```
     * Value of the `includes` field in library.properties or, if missing, the
     * list of include files available on the library source root directory.
     * ```
     *
     * `repeated string provides_includes = 27;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setProvidesIncludes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ProvidesIncludesProxy>.clear() {
      _builder.clearProvidesIncludes()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CompatibleWithProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Map of FQBNs that specifies if library is compatible with this library.
     * ```
     *
     * `map<string, bool> compatible_with = 28;`
     */
     public val compatibleWith: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Boolean, CompatibleWithProxy>
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("getCompatibleWithMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.compatibleWithMap
      )
    /**
     * ```
     * Map of FQBNs that specifies if library is compatible with this library.
     * ```
     *
     * `map<string, bool> compatible_with = 28;`
     */
    @kotlin.jvm.JvmName("putCompatibleWith")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Boolean, CompatibleWithProxy>
      .put(key: kotlin.String, value: kotlin.Boolean) {
         _builder.putCompatibleWith(key, value)
       }
    /**
     * ```
     * Map of FQBNs that specifies if library is compatible with this library.
     * ```
     *
     * `map<string, bool> compatible_with = 28;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setCompatibleWith")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Boolean, CompatibleWithProxy>
      .set(key: kotlin.String, value: kotlin.Boolean) {
         put(key, value)
       }
    /**
     * ```
     * Map of FQBNs that specifies if library is compatible with this library.
     * ```
     *
     * `map<string, bool> compatible_with = 28;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("removeCompatibleWith")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Boolean, CompatibleWithProxy>
      .remove(key: kotlin.String) {
         _builder.removeCompatibleWith(key)
       }
    /**
     * ```
     * Map of FQBNs that specifies if library is compatible with this library.
     * ```
     *
     * `map<string, bool> compatible_with = 28;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("putAllCompatibleWith")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Boolean, CompatibleWithProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.Boolean>) {
         _builder.putAllCompatibleWith(map)
       }
    /**
     * ```
     * Map of FQBNs that specifies if library is compatible with this library.
     * ```
     *
     * `map<string, bool> compatible_with = 28;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearCompatibleWith")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Boolean, CompatibleWithProxy>
      .clear() {
         _builder.clearCompatibleWith()
       }

    /**
     * ```
     * This value is set to true if the library is in development and should not
     * be treated as read-only. This status is determined by the presence of a
     * `.development` file in the library root directory.
     * ```
     *
     * `bool in_development = 29;`
     */
    public var inDevelopment: kotlin.Boolean
      @kotlin.jvm.JvmName("getInDevelopment")
        get() = _builder.inDevelopment
      @kotlin.jvm.JvmName("setInDevelopment")
        set(value) {
        _builder.inDevelopment = value
      }
    /**
     * ```
     * This value is set to true if the library is in development and should not
     * be treated as read-only. This status is determined by the presence of a
     * `.development` file in the library root directory.
     * ```
     *
     * `bool in_development = 29;`
     */
    public fun clearInDevelopment() {
      _builder.clearInDevelopment()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun compiled_protocol_buffers.Lib.Library.copy(block: `compiled_protocol_buffers`.LibraryKt.Dsl.() -> kotlin.Unit): compiled_protocol_buffers.Lib.Library =
  `compiled_protocol_buffers`.LibraryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

