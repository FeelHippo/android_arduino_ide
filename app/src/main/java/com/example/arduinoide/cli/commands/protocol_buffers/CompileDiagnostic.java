// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/cli/commands/proto/compile.proto
// Protobuf Java Version: 4.31.1

package protocol_buffers;

/**
 * Protobuf type {@code protocol_buffers.CompileDiagnostic}
 */
@com.google.protobuf.Generated
public final class CompileDiagnostic extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:protocol_buffers.CompileDiagnostic)
    CompileDiagnosticOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 1,
      /* suffix= */ "",
      CompileDiagnostic.class.getName());
  }
  // Use CompileDiagnostic.newBuilder() to construct.
  private CompileDiagnostic(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CompileDiagnostic() {
    severity_ = "";
    message_ = "";
    file_ = "";
    context_ = java.util.Collections.emptyList();
    notes_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol_buffers.Compile.internal_static_protocol_buffers_CompileDiagnostic_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol_buffers.Compile.internal_static_protocol_buffers_CompileDiagnostic_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol_buffers.CompileDiagnostic.class, protocol_buffers.CompileDiagnostic.Builder.class);
  }

  public static final int SEVERITY_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object severity_ = "";
  /**
   * <pre>
   * Severity of the diagnostic.
   * </pre>
   *
   * <code>string severity = 1;</code>
   * @return The severity.
   */
  @java.lang.Override
  public java.lang.String getSeverity() {
    java.lang.Object ref = severity_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      severity_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Severity of the diagnostic.
   * </pre>
   *
   * <code>string severity = 1;</code>
   * @return The bytes for severity.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSeverityBytes() {
    java.lang.Object ref = severity_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      severity_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MESSAGE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object message_ = "";
  /**
   * <pre>
   * The explanation of the diagnostic (it may be multiple preformatted lines).
   * </pre>
   *
   * <code>string message = 2;</code>
   * @return The message.
   */
  @java.lang.Override
  public java.lang.String getMessage() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      message_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The explanation of the diagnostic (it may be multiple preformatted lines).
   * </pre>
   *
   * <code>string message = 2;</code>
   * @return The bytes for message.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageBytes() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      message_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object file_ = "";
  /**
   * <pre>
   * The file containing the diagnostic.
   * </pre>
   *
   * <code>string file = 3;</code>
   * @return The file.
   */
  @java.lang.Override
  public java.lang.String getFile() {
    java.lang.Object ref = file_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      file_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The file containing the diagnostic.
   * </pre>
   *
   * <code>string file = 3;</code>
   * @return The bytes for file.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileBytes() {
    java.lang.Object ref = file_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      file_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LINE_FIELD_NUMBER = 4;
  private long line_ = 0L;
  /**
   * <pre>
   * The line of the diagnostic if available (starts from 1).
   * </pre>
   *
   * <code>int64 line = 4;</code>
   * @return The line.
   */
  @java.lang.Override
  public long getLine() {
    return line_;
  }

  public static final int COLUMN_FIELD_NUMBER = 5;
  private long column_ = 0L;
  /**
   * <pre>
   * The column of the diagnostic if available (starts from 1).
   * </pre>
   *
   * <code>int64 column = 5;</code>
   * @return The column.
   */
  @java.lang.Override
  public long getColumn() {
    return column_;
  }

  public static final int CONTEXT_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<protocol_buffers.CompileDiagnosticContext> context_;
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  @java.lang.Override
  public java.util.List<protocol_buffers.CompileDiagnosticContext> getContextList() {
    return context_;
  }
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends protocol_buffers.CompileDiagnosticContextOrBuilder> 
      getContextOrBuilderList() {
    return context_;
  }
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  @java.lang.Override
  public int getContextCount() {
    return context_.size();
  }
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  @java.lang.Override
  public protocol_buffers.CompileDiagnosticContext getContext(int index) {
    return context_.get(index);
  }
  /**
   * <pre>
   * The context where this diagnostic is found (it may be multiple files that
   * represents a chain of includes, or a text describing where the diagnostic
   * is found).
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
   */
  @java.lang.Override
  public protocol_buffers.CompileDiagnosticContextOrBuilder getContextOrBuilder(
      int index) {
    return context_.get(index);
  }

  public static final int NOTES_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<protocol_buffers.CompileDiagnosticNote> notes_;
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  @java.lang.Override
  public java.util.List<protocol_buffers.CompileDiagnosticNote> getNotesList() {
    return notes_;
  }
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends protocol_buffers.CompileDiagnosticNoteOrBuilder> 
      getNotesOrBuilderList() {
    return notes_;
  }
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  @java.lang.Override
  public int getNotesCount() {
    return notes_.size();
  }
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  @java.lang.Override
  public protocol_buffers.CompileDiagnosticNote getNotes(int index) {
    return notes_.get(index);
  }
  /**
   * <pre>
   * Annotations or suggestions to the diagnostic made by the compiler.
   * </pre>
   *
   * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
   */
  @java.lang.Override
  public protocol_buffers.CompileDiagnosticNoteOrBuilder getNotesOrBuilder(
      int index) {
    return notes_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(severity_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, severity_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(message_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, message_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(file_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, file_);
    }
    if (line_ != 0L) {
      output.writeInt64(4, line_);
    }
    if (column_ != 0L) {
      output.writeInt64(5, column_);
    }
    for (int i = 0; i < context_.size(); i++) {
      output.writeMessage(6, context_.get(i));
    }
    for (int i = 0; i < notes_.size(); i++) {
      output.writeMessage(7, notes_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(severity_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, severity_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(message_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, message_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(file_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, file_);
    }
    if (line_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, line_);
    }
    if (column_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, column_);
    }
    for (int i = 0; i < context_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, context_.get(i));
    }
    for (int i = 0; i < notes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, notes_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol_buffers.CompileDiagnostic)) {
      return super.equals(obj);
    }
    protocol_buffers.CompileDiagnostic other = (protocol_buffers.CompileDiagnostic) obj;

    if (!getSeverity()
        .equals(other.getSeverity())) return false;
    if (!getMessage()
        .equals(other.getMessage())) return false;
    if (!getFile()
        .equals(other.getFile())) return false;
    if (getLine()
        != other.getLine()) return false;
    if (getColumn()
        != other.getColumn()) return false;
    if (!getContextList()
        .equals(other.getContextList())) return false;
    if (!getNotesList()
        .equals(other.getNotesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
    hash = (53 * hash) + getSeverity().hashCode();
    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getMessage().hashCode();
    hash = (37 * hash) + FILE_FIELD_NUMBER;
    hash = (53 * hash) + getFile().hashCode();
    hash = (37 * hash) + LINE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLine());
    hash = (37 * hash) + COLUMN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getColumn());
    if (getContextCount() > 0) {
      hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getContextList().hashCode();
    }
    if (getNotesCount() > 0) {
      hash = (37 * hash) + NOTES_FIELD_NUMBER;
      hash = (53 * hash) + getNotesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol_buffers.CompileDiagnostic parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static protocol_buffers.CompileDiagnostic parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static protocol_buffers.CompileDiagnostic parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static protocol_buffers.CompileDiagnostic parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol_buffers.CompileDiagnostic prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code protocol_buffers.CompileDiagnostic}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol_buffers.CompileDiagnostic)
      protocol_buffers.CompileDiagnosticOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_buffers.Compile.internal_static_protocol_buffers_CompileDiagnostic_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_buffers.Compile.internal_static_protocol_buffers_CompileDiagnostic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_buffers.CompileDiagnostic.class, protocol_buffers.CompileDiagnostic.Builder.class);
    }

    // Construct using protocol_buffers.CompileDiagnostic.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      severity_ = "";
      message_ = "";
      file_ = "";
      line_ = 0L;
      column_ = 0L;
      if (contextBuilder_ == null) {
        context_ = java.util.Collections.emptyList();
      } else {
        context_ = null;
        contextBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (notesBuilder_ == null) {
        notes_ = java.util.Collections.emptyList();
      } else {
        notes_ = null;
        notesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol_buffers.Compile.internal_static_protocol_buffers_CompileDiagnostic_descriptor;
    }

    @java.lang.Override
    public protocol_buffers.CompileDiagnostic getDefaultInstanceForType() {
      return protocol_buffers.CompileDiagnostic.getDefaultInstance();
    }

    @java.lang.Override
    public protocol_buffers.CompileDiagnostic build() {
      protocol_buffers.CompileDiagnostic result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public protocol_buffers.CompileDiagnostic buildPartial() {
      protocol_buffers.CompileDiagnostic result = new protocol_buffers.CompileDiagnostic(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(protocol_buffers.CompileDiagnostic result) {
      if (contextBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          context_ = java.util.Collections.unmodifiableList(context_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.context_ = context_;
      } else {
        result.context_ = contextBuilder_.build();
      }
      if (notesBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          notes_ = java.util.Collections.unmodifiableList(notes_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.notes_ = notes_;
      } else {
        result.notes_ = notesBuilder_.build();
      }
    }

    private void buildPartial0(protocol_buffers.CompileDiagnostic result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.severity_ = severity_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.message_ = message_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.file_ = file_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.line_ = line_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.column_ = column_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol_buffers.CompileDiagnostic) {
        return mergeFrom((protocol_buffers.CompileDiagnostic)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol_buffers.CompileDiagnostic other) {
      if (other == protocol_buffers.CompileDiagnostic.getDefaultInstance()) return this;
      if (!other.getSeverity().isEmpty()) {
        severity_ = other.severity_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getMessage().isEmpty()) {
        message_ = other.message_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getFile().isEmpty()) {
        file_ = other.file_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getLine() != 0L) {
        setLine(other.getLine());
      }
      if (other.getColumn() != 0L) {
        setColumn(other.getColumn());
      }
      if (contextBuilder_ == null) {
        if (!other.context_.isEmpty()) {
          if (context_.isEmpty()) {
            context_ = other.context_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureContextIsMutable();
            context_.addAll(other.context_);
          }
          onChanged();
        }
      } else {
        if (!other.context_.isEmpty()) {
          if (contextBuilder_.isEmpty()) {
            contextBuilder_.dispose();
            contextBuilder_ = null;
            context_ = other.context_;
            bitField0_ = (bitField0_ & ~0x00000020);
            contextBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 internalGetContextFieldBuilder() : null;
          } else {
            contextBuilder_.addAllMessages(other.context_);
          }
        }
      }
      if (notesBuilder_ == null) {
        if (!other.notes_.isEmpty()) {
          if (notes_.isEmpty()) {
            notes_ = other.notes_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureNotesIsMutable();
            notes_.addAll(other.notes_);
          }
          onChanged();
        }
      } else {
        if (!other.notes_.isEmpty()) {
          if (notesBuilder_.isEmpty()) {
            notesBuilder_.dispose();
            notesBuilder_ = null;
            notes_ = other.notes_;
            bitField0_ = (bitField0_ & ~0x00000040);
            notesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 internalGetNotesFieldBuilder() : null;
          } else {
            notesBuilder_.addAllMessages(other.notes_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              severity_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              message_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              file_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              line_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              column_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              protocol_buffers.CompileDiagnosticContext m =
                  input.readMessage(
                      protocol_buffers.CompileDiagnosticContext.parser(),
                      extensionRegistry);
              if (contextBuilder_ == null) {
                ensureContextIsMutable();
                context_.add(m);
              } else {
                contextBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              protocol_buffers.CompileDiagnosticNote m =
                  input.readMessage(
                      protocol_buffers.CompileDiagnosticNote.parser(),
                      extensionRegistry);
              if (notesBuilder_ == null) {
                ensureNotesIsMutable();
                notes_.add(m);
              } else {
                notesBuilder_.addMessage(m);
              }
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object severity_ = "";
    /**
     * <pre>
     * Severity of the diagnostic.
     * </pre>
     *
     * <code>string severity = 1;</code>
     * @return The severity.
     */
    public java.lang.String getSeverity() {
      java.lang.Object ref = severity_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        severity_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Severity of the diagnostic.
     * </pre>
     *
     * <code>string severity = 1;</code>
     * @return The bytes for severity.
     */
    public com.google.protobuf.ByteString
        getSeverityBytes() {
      java.lang.Object ref = severity_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        severity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Severity of the diagnostic.
     * </pre>
     *
     * <code>string severity = 1;</code>
     * @param value The severity to set.
     * @return This builder for chaining.
     */
    public Builder setSeverity(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      severity_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Severity of the diagnostic.
     * </pre>
     *
     * <code>string severity = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSeverity() {
      severity_ = getDefaultInstance().getSeverity();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Severity of the diagnostic.
     * </pre>
     *
     * <code>string severity = 1;</code>
     * @param value The bytes for severity to set.
     * @return This builder for chaining.
     */
    public Builder setSeverityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      severity_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object message_ = "";
    /**
     * <pre>
     * The explanation of the diagnostic (it may be multiple preformatted lines).
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The message.
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The explanation of the diagnostic (it may be multiple preformatted lines).
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The explanation of the diagnostic (it may be multiple preformatted lines).
     * </pre>
     *
     * <code>string message = 2;</code>
     * @param value The message to set.
     * @return This builder for chaining.
     */
    public Builder setMessage(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      message_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The explanation of the diagnostic (it may be multiple preformatted lines).
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessage() {
      message_ = getDefaultInstance().getMessage();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The explanation of the diagnostic (it may be multiple preformatted lines).
     * </pre>
     *
     * <code>string message = 2;</code>
     * @param value The bytes for message to set.
     * @return This builder for chaining.
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      message_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object file_ = "";
    /**
     * <pre>
     * The file containing the diagnostic.
     * </pre>
     *
     * <code>string file = 3;</code>
     * @return The file.
     */
    public java.lang.String getFile() {
      java.lang.Object ref = file_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        file_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The file containing the diagnostic.
     * </pre>
     *
     * <code>string file = 3;</code>
     * @return The bytes for file.
     */
    public com.google.protobuf.ByteString
        getFileBytes() {
      java.lang.Object ref = file_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        file_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The file containing the diagnostic.
     * </pre>
     *
     * <code>string file = 3;</code>
     * @param value The file to set.
     * @return This builder for chaining.
     */
    public Builder setFile(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      file_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The file containing the diagnostic.
     * </pre>
     *
     * <code>string file = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFile() {
      file_ = getDefaultInstance().getFile();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The file containing the diagnostic.
     * </pre>
     *
     * <code>string file = 3;</code>
     * @param value The bytes for file to set.
     * @return This builder for chaining.
     */
    public Builder setFileBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      file_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private long line_ ;
    /**
     * <pre>
     * The line of the diagnostic if available (starts from 1).
     * </pre>
     *
     * <code>int64 line = 4;</code>
     * @return The line.
     */
    @java.lang.Override
    public long getLine() {
      return line_;
    }
    /**
     * <pre>
     * The line of the diagnostic if available (starts from 1).
     * </pre>
     *
     * <code>int64 line = 4;</code>
     * @param value The line to set.
     * @return This builder for chaining.
     */
    public Builder setLine(long value) {

      line_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The line of the diagnostic if available (starts from 1).
     * </pre>
     *
     * <code>int64 line = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLine() {
      bitField0_ = (bitField0_ & ~0x00000008);
      line_ = 0L;
      onChanged();
      return this;
    }

    private long column_ ;
    /**
     * <pre>
     * The column of the diagnostic if available (starts from 1).
     * </pre>
     *
     * <code>int64 column = 5;</code>
     * @return The column.
     */
    @java.lang.Override
    public long getColumn() {
      return column_;
    }
    /**
     * <pre>
     * The column of the diagnostic if available (starts from 1).
     * </pre>
     *
     * <code>int64 column = 5;</code>
     * @param value The column to set.
     * @return This builder for chaining.
     */
    public Builder setColumn(long value) {

      column_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The column of the diagnostic if available (starts from 1).
     * </pre>
     *
     * <code>int64 column = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearColumn() {
      bitField0_ = (bitField0_ & ~0x00000010);
      column_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<protocol_buffers.CompileDiagnosticContext> context_ =
      java.util.Collections.emptyList();
    private void ensureContextIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        context_ = new java.util.ArrayList<protocol_buffers.CompileDiagnosticContext>(context_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        protocol_buffers.CompileDiagnosticContext, protocol_buffers.CompileDiagnosticContext.Builder, protocol_buffers.CompileDiagnosticContextOrBuilder> contextBuilder_;

    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public java.util.List<protocol_buffers.CompileDiagnosticContext> getContextList() {
      if (contextBuilder_ == null) {
        return java.util.Collections.unmodifiableList(context_);
      } else {
        return contextBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public int getContextCount() {
      if (contextBuilder_ == null) {
        return context_.size();
      } else {
        return contextBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public protocol_buffers.CompileDiagnosticContext getContext(int index) {
      if (contextBuilder_ == null) {
        return context_.get(index);
      } else {
        return contextBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder setContext(
        int index, protocol_buffers.CompileDiagnosticContext value) {
      if (contextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextIsMutable();
        context_.set(index, value);
        onChanged();
      } else {
        contextBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder setContext(
        int index, protocol_buffers.CompileDiagnosticContext.Builder builderForValue) {
      if (contextBuilder_ == null) {
        ensureContextIsMutable();
        context_.set(index, builderForValue.build());
        onChanged();
      } else {
        contextBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder addContext(protocol_buffers.CompileDiagnosticContext value) {
      if (contextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextIsMutable();
        context_.add(value);
        onChanged();
      } else {
        contextBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder addContext(
        int index, protocol_buffers.CompileDiagnosticContext value) {
      if (contextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextIsMutable();
        context_.add(index, value);
        onChanged();
      } else {
        contextBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder addContext(
        protocol_buffers.CompileDiagnosticContext.Builder builderForValue) {
      if (contextBuilder_ == null) {
        ensureContextIsMutable();
        context_.add(builderForValue.build());
        onChanged();
      } else {
        contextBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder addContext(
        int index, protocol_buffers.CompileDiagnosticContext.Builder builderForValue) {
      if (contextBuilder_ == null) {
        ensureContextIsMutable();
        context_.add(index, builderForValue.build());
        onChanged();
      } else {
        contextBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder addAllContext(
        java.lang.Iterable<? extends protocol_buffers.CompileDiagnosticContext> values) {
      if (contextBuilder_ == null) {
        ensureContextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, context_);
        onChanged();
      } else {
        contextBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder clearContext() {
      if (contextBuilder_ == null) {
        context_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        contextBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public Builder removeContext(int index) {
      if (contextBuilder_ == null) {
        ensureContextIsMutable();
        context_.remove(index);
        onChanged();
      } else {
        contextBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public protocol_buffers.CompileDiagnosticContext.Builder getContextBuilder(
        int index) {
      return internalGetContextFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public protocol_buffers.CompileDiagnosticContextOrBuilder getContextOrBuilder(
        int index) {
      if (contextBuilder_ == null) {
        return context_.get(index);  } else {
        return contextBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public java.util.List<? extends protocol_buffers.CompileDiagnosticContextOrBuilder> 
         getContextOrBuilderList() {
      if (contextBuilder_ != null) {
        return contextBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(context_);
      }
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public protocol_buffers.CompileDiagnosticContext.Builder addContextBuilder() {
      return internalGetContextFieldBuilder().addBuilder(
          protocol_buffers.CompileDiagnosticContext.getDefaultInstance());
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public protocol_buffers.CompileDiagnosticContext.Builder addContextBuilder(
        int index) {
      return internalGetContextFieldBuilder().addBuilder(
          index, protocol_buffers.CompileDiagnosticContext.getDefaultInstance());
    }
    /**
     * <pre>
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticContext context = 6;</code>
     */
    public java.util.List<protocol_buffers.CompileDiagnosticContext.Builder> 
         getContextBuilderList() {
      return internalGetContextFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        protocol_buffers.CompileDiagnosticContext, protocol_buffers.CompileDiagnosticContext.Builder, protocol_buffers.CompileDiagnosticContextOrBuilder> 
        internalGetContextFieldBuilder() {
      if (contextBuilder_ == null) {
        contextBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            protocol_buffers.CompileDiagnosticContext, protocol_buffers.CompileDiagnosticContext.Builder, protocol_buffers.CompileDiagnosticContextOrBuilder>(
                context_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        context_ = null;
      }
      return contextBuilder_;
    }

    private java.util.List<protocol_buffers.CompileDiagnosticNote> notes_ =
      java.util.Collections.emptyList();
    private void ensureNotesIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        notes_ = new java.util.ArrayList<protocol_buffers.CompileDiagnosticNote>(notes_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        protocol_buffers.CompileDiagnosticNote, protocol_buffers.CompileDiagnosticNote.Builder, protocol_buffers.CompileDiagnosticNoteOrBuilder> notesBuilder_;

    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public java.util.List<protocol_buffers.CompileDiagnosticNote> getNotesList() {
      if (notesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(notes_);
      } else {
        return notesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public int getNotesCount() {
      if (notesBuilder_ == null) {
        return notes_.size();
      } else {
        return notesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public protocol_buffers.CompileDiagnosticNote getNotes(int index) {
      if (notesBuilder_ == null) {
        return notes_.get(index);
      } else {
        return notesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder setNotes(
        int index, protocol_buffers.CompileDiagnosticNote value) {
      if (notesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNotesIsMutable();
        notes_.set(index, value);
        onChanged();
      } else {
        notesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder setNotes(
        int index, protocol_buffers.CompileDiagnosticNote.Builder builderForValue) {
      if (notesBuilder_ == null) {
        ensureNotesIsMutable();
        notes_.set(index, builderForValue.build());
        onChanged();
      } else {
        notesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder addNotes(protocol_buffers.CompileDiagnosticNote value) {
      if (notesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNotesIsMutable();
        notes_.add(value);
        onChanged();
      } else {
        notesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder addNotes(
        int index, protocol_buffers.CompileDiagnosticNote value) {
      if (notesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNotesIsMutable();
        notes_.add(index, value);
        onChanged();
      } else {
        notesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder addNotes(
        protocol_buffers.CompileDiagnosticNote.Builder builderForValue) {
      if (notesBuilder_ == null) {
        ensureNotesIsMutable();
        notes_.add(builderForValue.build());
        onChanged();
      } else {
        notesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder addNotes(
        int index, protocol_buffers.CompileDiagnosticNote.Builder builderForValue) {
      if (notesBuilder_ == null) {
        ensureNotesIsMutable();
        notes_.add(index, builderForValue.build());
        onChanged();
      } else {
        notesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder addAllNotes(
        java.lang.Iterable<? extends protocol_buffers.CompileDiagnosticNote> values) {
      if (notesBuilder_ == null) {
        ensureNotesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, notes_);
        onChanged();
      } else {
        notesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder clearNotes() {
      if (notesBuilder_ == null) {
        notes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        notesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public Builder removeNotes(int index) {
      if (notesBuilder_ == null) {
        ensureNotesIsMutable();
        notes_.remove(index);
        onChanged();
      } else {
        notesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public protocol_buffers.CompileDiagnosticNote.Builder getNotesBuilder(
        int index) {
      return internalGetNotesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public protocol_buffers.CompileDiagnosticNoteOrBuilder getNotesOrBuilder(
        int index) {
      if (notesBuilder_ == null) {
        return notes_.get(index);  } else {
        return notesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public java.util.List<? extends protocol_buffers.CompileDiagnosticNoteOrBuilder> 
         getNotesOrBuilderList() {
      if (notesBuilder_ != null) {
        return notesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(notes_);
      }
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public protocol_buffers.CompileDiagnosticNote.Builder addNotesBuilder() {
      return internalGetNotesFieldBuilder().addBuilder(
          protocol_buffers.CompileDiagnosticNote.getDefaultInstance());
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public protocol_buffers.CompileDiagnosticNote.Builder addNotesBuilder(
        int index) {
      return internalGetNotesFieldBuilder().addBuilder(
          index, protocol_buffers.CompileDiagnosticNote.getDefaultInstance());
    }
    /**
     * <pre>
     * Annotations or suggestions to the diagnostic made by the compiler.
     * </pre>
     *
     * <code>repeated .protocol_buffers.CompileDiagnosticNote notes = 7;</code>
     */
    public java.util.List<protocol_buffers.CompileDiagnosticNote.Builder> 
         getNotesBuilderList() {
      return internalGetNotesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        protocol_buffers.CompileDiagnosticNote, protocol_buffers.CompileDiagnosticNote.Builder, protocol_buffers.CompileDiagnosticNoteOrBuilder> 
        internalGetNotesFieldBuilder() {
      if (notesBuilder_ == null) {
        notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            protocol_buffers.CompileDiagnosticNote, protocol_buffers.CompileDiagnosticNote.Builder, protocol_buffers.CompileDiagnosticNoteOrBuilder>(
                notes_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        notes_ = null;
      }
      return notesBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:protocol_buffers.CompileDiagnostic)
  }

  // @@protoc_insertion_point(class_scope:protocol_buffers.CompileDiagnostic)
  private static final protocol_buffers.CompileDiagnostic DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol_buffers.CompileDiagnostic();
  }

  public static protocol_buffers.CompileDiagnostic getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CompileDiagnostic>
      PARSER = new com.google.protobuf.AbstractParser<CompileDiagnostic>() {
    @java.lang.Override
    public CompileDiagnostic parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CompileDiagnostic> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CompileDiagnostic> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public protocol_buffers.CompileDiagnostic getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

