// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/cli/commands/proto/compile.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol_buffers;

@kotlin.jvm.JvmName("-initializecompileDiagnostic")
public inline fun compileDiagnostic(block: protocol_buffers.CompileDiagnosticKt.Dsl.() -> kotlin.Unit): protocol_buffers.Compile.CompileDiagnostic =
  protocol_buffers.CompileDiagnosticKt.Dsl._create(protocol_buffers.Compile.CompileDiagnostic.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol_buffers.CompileDiagnostic`
 */
public object CompileDiagnosticKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol_buffers.Compile.CompileDiagnostic.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: protocol_buffers.Compile.CompileDiagnostic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): protocol_buffers.Compile.CompileDiagnostic = _builder.build()

    /**
     * ```
     * Severity of the diagnostic.
     * ```
     *
     * `string severity = 1;`
     */
    public var severity: kotlin.String
      @kotlin.jvm.JvmName("getSeverity")
        get() = _builder.severity
      @kotlin.jvm.JvmName("setSeverity")
        set(value) {
        _builder.severity = value
      }
    /**
     * ```
     * Severity of the diagnostic.
     * ```
     *
     * `string severity = 1;`
     */
    public fun clearSeverity() {
      _builder.clearSeverity()
    }

    /**
     * ```
     * The explanation of the diagnostic (it may be multiple preformatted lines).
     * ```
     *
     * `string message = 2;`
     */
    public var message: kotlin.String
      @kotlin.jvm.JvmName("getMessage")
        get() = _builder.message
      @kotlin.jvm.JvmName("setMessage")
        set(value) {
        _builder.message = value
      }
    /**
     * ```
     * The explanation of the diagnostic (it may be multiple preformatted lines).
     * ```
     *
     * `string message = 2;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * ```
     * The file containing the diagnostic.
     * ```
     *
     * `string file = 3;`
     */
    public var file: kotlin.String
      @kotlin.jvm.JvmName("getFile")
        get() = _builder.file
      @kotlin.jvm.JvmName("setFile")
        set(value) {
        _builder.file = value
      }
    /**
     * ```
     * The file containing the diagnostic.
     * ```
     *
     * `string file = 3;`
     */
    public fun clearFile() {
      _builder.clearFile()
    }

    /**
     * ```
     * The line of the diagnostic if available (starts from 1).
     * ```
     *
     * `int64 line = 4;`
     */
    public var line: kotlin.Long
      @kotlin.jvm.JvmName("getLine")
        get() = _builder.line
      @kotlin.jvm.JvmName("setLine")
        set(value) {
        _builder.line = value
      }
    /**
     * ```
     * The line of the diagnostic if available (starts from 1).
     * ```
     *
     * `int64 line = 4;`
     */
    public fun clearLine() {
      _builder.clearLine()
    }

    /**
     * ```
     * The column of the diagnostic if available (starts from 1).
     * ```
     *
     * `int64 column = 5;`
     */
    public var column: kotlin.Long
      @kotlin.jvm.JvmName("getColumn")
        get() = _builder.column
      @kotlin.jvm.JvmName("setColumn")
        set(value) {
        _builder.column = value
      }
    /**
     * ```
     * The column of the diagnostic if available (starts from 1).
     * ```
     *
     * `int64 column = 5;`
     */
    public fun clearColumn() {
      _builder.clearColumn()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContextProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticContext context = 6;`
     */
     public val context: com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticContext, ContextProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.contextList
      )
    /**
     * ```
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticContext context = 6;`
     * @param value The context to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addContext")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticContext, ContextProxy>.add(value: protocol_buffers.Compile.CompileDiagnosticContext) {
      _builder.addContext(value)
    }
    /**
     * ```
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticContext context = 6;`
     * @param value The context to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignContext")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticContext, ContextProxy>.plusAssign(value: protocol_buffers.Compile.CompileDiagnosticContext) {
      add(value)
    }
    /**
     * ```
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticContext context = 6;`
     * @param values The context to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllContext")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticContext, ContextProxy>.addAll(values: kotlin.collections.Iterable<protocol_buffers.Compile.CompileDiagnosticContext>) {
      _builder.addAllContext(values)
    }
    /**
     * ```
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticContext context = 6;`
     * @param values The context to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllContext")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticContext, ContextProxy>.plusAssign(values: kotlin.collections.Iterable<protocol_buffers.Compile.CompileDiagnosticContext>) {
      addAll(values)
    }
    /**
     * ```
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticContext context = 6;`
     * @param index The index to set the value at.
     * @param value The context to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setContext")
    public operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticContext, ContextProxy>.set(index: kotlin.Int, value: protocol_buffers.Compile.CompileDiagnosticContext) {
      _builder.setContext(index, value)
    }
    /**
     * ```
     * The context where this diagnostic is found (it may be multiple files that
     * represents a chain of includes, or a text describing where the diagnostic
     * is found).
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticContext context = 6;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearContext")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticContext, ContextProxy>.clear() {
      _builder.clearContext()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class NotesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Annotations or suggestions to the diagnostic made by the compiler.
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticNote notes = 7;`
     */
     public val notes: com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticNote, NotesProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.notesList
      )
    /**
     * ```
     * Annotations or suggestions to the diagnostic made by the compiler.
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticNote notes = 7;`
     * @param value The notes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addNotes")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticNote, NotesProxy>.add(value: protocol_buffers.Compile.CompileDiagnosticNote) {
      _builder.addNotes(value)
    }
    /**
     * ```
     * Annotations or suggestions to the diagnostic made by the compiler.
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticNote notes = 7;`
     * @param value The notes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignNotes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticNote, NotesProxy>.plusAssign(value: protocol_buffers.Compile.CompileDiagnosticNote) {
      add(value)
    }
    /**
     * ```
     * Annotations or suggestions to the diagnostic made by the compiler.
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticNote notes = 7;`
     * @param values The notes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllNotes")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticNote, NotesProxy>.addAll(values: kotlin.collections.Iterable<protocol_buffers.Compile.CompileDiagnosticNote>) {
      _builder.addAllNotes(values)
    }
    /**
     * ```
     * Annotations or suggestions to the diagnostic made by the compiler.
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticNote notes = 7;`
     * @param values The notes to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllNotes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticNote, NotesProxy>.plusAssign(values: kotlin.collections.Iterable<protocol_buffers.Compile.CompileDiagnosticNote>) {
      addAll(values)
    }
    /**
     * ```
     * Annotations or suggestions to the diagnostic made by the compiler.
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticNote notes = 7;`
     * @param index The index to set the value at.
     * @param value The notes to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setNotes")
    public operator fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticNote, NotesProxy>.set(index: kotlin.Int, value: protocol_buffers.Compile.CompileDiagnosticNote) {
      _builder.setNotes(index, value)
    }
    /**
     * ```
     * Annotations or suggestions to the diagnostic made by the compiler.
     * ```
     *
     * `repeated .protocol_buffers.CompileDiagnosticNote notes = 7;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearNotes")
    public fun com.google.protobuf.kotlin.DslList<protocol_buffers.Compile.CompileDiagnosticNote, NotesProxy>.clear() {
      _builder.clearNotes()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol_buffers.Compile.CompileDiagnostic.copy(block: `protocol_buffers`.CompileDiagnosticKt.Dsl.() -> kotlin.Unit): protocol_buffers.Compile.CompileDiagnostic =
  `protocol_buffers`.CompileDiagnosticKt.Dsl._create(this.toBuilder()).apply { block() }._build()

