// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app/src/main/java/com/example/arduinoide/cli/commands/proto/lib.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol_buffers;

@kotlin.jvm.JvmName("-initializelibraryResolveDependenciesRequest")
public inline fun libraryResolveDependenciesRequest(block: protocol_buffers.LibraryResolveDependenciesRequestKt.Dsl.() -> kotlin.Unit): protocol_buffers.LibraryResolveDependenciesRequest =
  protocol_buffers.LibraryResolveDependenciesRequestKt.Dsl._create(protocol_buffers.LibraryResolveDependenciesRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol_buffers.LibraryResolveDependenciesRequest`
 */
public object LibraryResolveDependenciesRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol_buffers.LibraryResolveDependenciesRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: protocol_buffers.LibraryResolveDependenciesRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): protocol_buffers.LibraryResolveDependenciesRequest = _builder.build()

    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.protocol_buffers.Instance instance = 1;`
     */
    public var instance: protocol_buffers.Instance
      @kotlin.jvm.JvmName("getInstance")
        get() = _builder.instance
      @kotlin.jvm.JvmName("setInstance")
        set(value) {
        _builder.instance = value
      }
    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.protocol_buffers.Instance instance = 1;`
     */
    public fun clearInstance() {
      _builder.clearInstance()
    }
    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.protocol_buffers.Instance instance = 1;`
     * @return Whether the instance field is set.
     */
    public fun hasInstance(): kotlin.Boolean {
      return _builder.hasInstance()
    }

    public val LibraryResolveDependenciesRequestKt.Dsl.instanceOrNull: protocol_buffers.Instance?
      get() = _builder.instanceOrNull

    /**
     * ```
     * Name of the library.
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @kotlin.jvm.JvmName("getName")
        get() = _builder.name
      @kotlin.jvm.JvmName("setName")
        set(value) {
        _builder.name = value
      }
    /**
     * ```
     * Name of the library.
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * The version of the library to check dependencies of. If no version is
     * specified, dependencies of the newest version will be listed.
     * ```
     *
     * `string version = 3;`
     */
    public var version: kotlin.String
      @kotlin.jvm.JvmName("getVersion")
        get() = _builder.version
      @kotlin.jvm.JvmName("setVersion")
        set(value) {
        _builder.version = value
      }
    /**
     * ```
     * The version of the library to check dependencies of. If no version is
     * specified, dependencies of the newest version will be listed.
     * ```
     *
     * `string version = 3;`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * ```
     * If true the computed solution will try to keep exising libraries
     * at their current version.
     * ```
     *
     * `bool do_not_update_installed_libraries = 4;`
     */
    public var doNotUpdateInstalledLibraries: kotlin.Boolean
      @kotlin.jvm.JvmName("getDoNotUpdateInstalledLibraries")
        get() = _builder.doNotUpdateInstalledLibraries
      @kotlin.jvm.JvmName("setDoNotUpdateInstalledLibraries")
        set(value) {
        _builder.doNotUpdateInstalledLibraries = value
      }
    /**
     * ```
     * If true the computed solution will try to keep exising libraries
     * at their current version.
     * ```
     *
     * `bool do_not_update_installed_libraries = 4;`
     */
    public fun clearDoNotUpdateInstalledLibraries() {
      _builder.clearDoNotUpdateInstalledLibraries()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol_buffers.LibraryResolveDependenciesRequest.copy(block: `protocol_buffers`.LibraryResolveDependenciesRequestKt.Dsl.() -> kotlin.Unit): protocol_buffers.LibraryResolveDependenciesRequest =
  `protocol_buffers`.LibraryResolveDependenciesRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol_buffers.LibraryResolveDependenciesRequestOrBuilder.instanceOrNull: protocol_buffers.Instance?
  get() = if (hasInstance()) getInstance() else null

