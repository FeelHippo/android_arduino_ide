// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: lib.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package compiled_protocol_buffers;

@kotlin.jvm.JvmName("-initializelibraryInstallRequest")
public inline fun libraryInstallRequest(block: compiled_protocol_buffers.LibraryInstallRequestKt.Dsl.() -> kotlin.Unit): compiled_protocol_buffers.Lib.LibraryInstallRequest =
  compiled_protocol_buffers.LibraryInstallRequestKt.Dsl._create(compiled_protocol_buffers.Lib.LibraryInstallRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `compiled_protocol_buffers.LibraryInstallRequest`
 */
public object LibraryInstallRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: compiled_protocol_buffers.Lib.LibraryInstallRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: compiled_protocol_buffers.Lib.LibraryInstallRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): compiled_protocol_buffers.Lib.LibraryInstallRequest = _builder.build()

    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.compiled_protocol_buffers.Instance instance = 1;`
     */
    public var instance: compiled_protocol_buffers.Common.Instance
      @kotlin.jvm.JvmName("getInstance")
        get() = _builder.instance
      @kotlin.jvm.JvmName("setInstance")
        set(value) {
        _builder.instance = value
      }
    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.compiled_protocol_buffers.Instance instance = 1;`
     */
    public fun clearInstance() {
      _builder.clearInstance()
    }
    /**
     * ```
     * Arduino Core Service instance from the `Init` response.
     * ```
     *
     * `.compiled_protocol_buffers.Instance instance = 1;`
     * @return Whether the instance field is set.
     */
    public fun hasInstance(): kotlin.Boolean {
      return _builder.hasInstance()
    }

    public val LibraryInstallRequestKt.Dsl.instanceOrNull: compiled_protocol_buffers.Common.Instance?
      get() = _builder.instanceOrNull

    /**
     * ```
     * Name of the library.
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @kotlin.jvm.JvmName("getName")
        get() = _builder.name
      @kotlin.jvm.JvmName("setName")
        set(value) {
        _builder.name = value
      }
    /**
     * ```
     * Name of the library.
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * The version of the library to install.
     * ```
     *
     * `string version = 3;`
     */
    public var version: kotlin.String
      @kotlin.jvm.JvmName("getVersion")
        get() = _builder.version
      @kotlin.jvm.JvmName("setVersion")
        set(value) {
        _builder.version = value
      }
    /**
     * ```
     * The version of the library to install.
     * ```
     *
     * `string version = 3;`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * ```
     * Set to true to skip installation of specified library's dependencies,
     * defaults to false.
     * ```
     *
     * `bool no_deps = 4;`
     */
    public var noDeps: kotlin.Boolean
      @kotlin.jvm.JvmName("getNoDeps")
        get() = _builder.noDeps
      @kotlin.jvm.JvmName("setNoDeps")
        set(value) {
        _builder.noDeps = value
      }
    /**
     * ```
     * Set to true to skip installation of specified library's dependencies,
     * defaults to false.
     * ```
     *
     * `bool no_deps = 4;`
     */
    public fun clearNoDeps() {
      _builder.clearNoDeps()
    }

    /**
     * ```
     * Set to true to skip installation if a different version of the library or
     * one of its dependencies is already installed, defaults to false.
     * ```
     *
     * `bool no_overwrite = 5;`
     */
    public var noOverwrite: kotlin.Boolean
      @kotlin.jvm.JvmName("getNoOverwrite")
        get() = _builder.noOverwrite
      @kotlin.jvm.JvmName("setNoOverwrite")
        set(value) {
        _builder.noOverwrite = value
      }
    /**
     * ```
     * Set to true to skip installation if a different version of the library or
     * one of its dependencies is already installed, defaults to false.
     * ```
     *
     * `bool no_overwrite = 5;`
     */
    public fun clearNoOverwrite() {
      _builder.clearNoOverwrite()
    }

    /**
     * ```
     * Install the library and dependencies in the specified location.
     * ```
     *
     * `.compiled_protocol_buffers.LibraryInstallLocation install_location = 6;`
     */
    public var installLocation: compiled_protocol_buffers.Lib.LibraryInstallLocation
      @kotlin.jvm.JvmName("getInstallLocation")
        get() = _builder.installLocation
      @kotlin.jvm.JvmName("setInstallLocation")
        set(value) {
        _builder.installLocation = value
      }
    public var installLocationValue: kotlin.Int
      @kotlin.jvm.JvmName("getInstallLocationValue")
        get() = _builder.installLocationValue
      @kotlin.jvm.JvmName("setInstallLocationValue")
        set(value) {
        _builder.installLocationValue = value
      }
    /**
     * ```
     * Install the library and dependencies in the specified location.
     * ```
     *
     * `.compiled_protocol_buffers.LibraryInstallLocation install_location = 6;`
     */
    public fun clearInstallLocation() {
      _builder.clearInstallLocation()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun compiled_protocol_buffers.Lib.LibraryInstallRequest.copy(block: `compiled_protocol_buffers`.LibraryInstallRequestKt.Dsl.() -> kotlin.Unit): compiled_protocol_buffers.Lib.LibraryInstallRequest =
  `compiled_protocol_buffers`.LibraryInstallRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val compiled_protocol_buffers.Lib.LibraryInstallRequestOrBuilder.instanceOrNull: compiled_protocol_buffers.Common.Instance?
  get() = if (hasInstance()) getInstance() else null

