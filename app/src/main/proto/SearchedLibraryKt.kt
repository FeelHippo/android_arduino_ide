// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: main/proto/lib.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package main.proto;

@kotlin.jvm.JvmName("-initializesearchedLibrary")
public inline fun searchedLibrary(block: main.proto.SearchedLibraryKt.Dsl.() -> kotlin.Unit): main.proto.Lib.SearchedLibrary =
  main.proto.SearchedLibraryKt.Dsl._create(main.proto.Lib.SearchedLibrary.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `main.proto.SearchedLibrary`
 */
public object SearchedLibraryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: main.proto.Lib.SearchedLibrary.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: main.proto.Lib.SearchedLibrary.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): main.proto.Lib.SearchedLibrary = _builder.build()

    /**
     * ```
     * Library name.
     * ```
     *
     * `string name = 1;`
     */
    public var name: kotlin.String
      @kotlin.jvm.JvmName("getName")
        get() = _builder.name
      @kotlin.jvm.JvmName("setName")
        set(value) {
        _builder.name = value
      }
    /**
     * ```
     * Library name.
     * ```
     *
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ReleasesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The index data for the available versions of the library. The key of the
     * map is the library version.
     * ```
     *
     * `map<string, .main.proto.LibraryRelease> releases = 2;`
     */
     public val releases: com.google.protobuf.kotlin.DslMap<kotlin.String, main.proto.Lib.LibraryRelease, ReleasesProxy>
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("getReleasesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.releasesMap
      )
    /**
     * ```
     * The index data for the available versions of the library. The key of the
     * map is the library version.
     * ```
     *
     * `map<string, .main.proto.LibraryRelease> releases = 2;`
     */
    @kotlin.jvm.JvmName("putReleases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, main.proto.Lib.LibraryRelease, ReleasesProxy>
      .put(key: kotlin.String, value: main.proto.Lib.LibraryRelease) {
         _builder.putReleases(key, value)
       }
    /**
     * ```
     * The index data for the available versions of the library. The key of the
     * map is the library version.
     * ```
     *
     * `map<string, .main.proto.LibraryRelease> releases = 2;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setReleases")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, main.proto.Lib.LibraryRelease, ReleasesProxy>
      .set(key: kotlin.String, value: main.proto.Lib.LibraryRelease) {
         put(key, value)
       }
    /**
     * ```
     * The index data for the available versions of the library. The key of the
     * map is the library version.
     * ```
     *
     * `map<string, .main.proto.LibraryRelease> releases = 2;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("removeReleases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, main.proto.Lib.LibraryRelease, ReleasesProxy>
      .remove(key: kotlin.String) {
         _builder.removeReleases(key)
       }
    /**
     * ```
     * The index data for the available versions of the library. The key of the
     * map is the library version.
     * ```
     *
     * `map<string, .main.proto.LibraryRelease> releases = 2;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("putAllReleases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, main.proto.Lib.LibraryRelease, ReleasesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, main.proto.Lib.LibraryRelease>) {
         _builder.putAllReleases(map)
       }
    /**
     * ```
     * The index data for the available versions of the library. The key of the
     * map is the library version.
     * ```
     *
     * `map<string, .main.proto.LibraryRelease> releases = 2;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearReleases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, main.proto.Lib.LibraryRelease, ReleasesProxy>
      .clear() {
         _builder.clearReleases()
       }

    /**
     * ```
     * The index data for the latest version of the library.
     * ```
     *
     * `.main.proto.LibraryRelease latest = 3;`
     */
    public var latest: main.proto.Lib.LibraryRelease
      @kotlin.jvm.JvmName("getLatest")
        get() = _builder.latest
      @kotlin.jvm.JvmName("setLatest")
        set(value) {
        _builder.latest = value
      }
    /**
     * ```
     * The index data for the latest version of the library.
     * ```
     *
     * `.main.proto.LibraryRelease latest = 3;`
     */
    public fun clearLatest() {
      _builder.clearLatest()
    }
    /**
     * ```
     * The index data for the latest version of the library.
     * ```
     *
     * `.main.proto.LibraryRelease latest = 3;`
     * @return Whether the latest field is set.
     */
    public fun hasLatest(): kotlin.Boolean {
      return _builder.hasLatest()
    }

    public val SearchedLibraryKt.Dsl.latestOrNull: main.proto.Lib.LibraryRelease?
      get() = _builder.latestOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AvailableVersionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The available versions of this library.
     * ```
     *
     * `repeated string available_versions = 4;`
     * @return A list containing the availableVersions.
     */
    public val availableVersions: com.google.protobuf.kotlin.DslList<kotlin.String, AvailableVersionsProxy>
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.availableVersionsList
      )
    /**
     * ```
     * The available versions of this library.
     * ```
     *
     * `repeated string available_versions = 4;`
     * @param value The availableVersions to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAvailableVersions")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AvailableVersionsProxy>.add(value: kotlin.String) {
      _builder.addAvailableVersions(value)
    }
    /**
     * ```
     * The available versions of this library.
     * ```
     *
     * `repeated string available_versions = 4;`
     * @param value The availableVersions to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAvailableVersions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AvailableVersionsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * The available versions of this library.
     * ```
     *
     * `repeated string available_versions = 4;`
     * @param values The availableVersions to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllAvailableVersions")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AvailableVersionsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllAvailableVersions(values)
    }
    /**
     * ```
     * The available versions of this library.
     * ```
     *
     * `repeated string available_versions = 4;`
     * @param values The availableVersions to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllAvailableVersions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AvailableVersionsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * The available versions of this library.
     * ```
     *
     * `repeated string available_versions = 4;`
     * @param index The index to set the value at.
     * @param value The availableVersions to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setAvailableVersions")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AvailableVersionsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setAvailableVersions(index, value)
    }/**
     * ```
     * The available versions of this library.
     * ```
     *
     * `repeated string available_versions = 4;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setAvailableVersions")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AvailableVersionsProxy>.clear() {
      _builder.clearAvailableVersions()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun main.proto.Lib.SearchedLibrary.copy(block: `main.proto`.SearchedLibraryKt.Dsl.() -> kotlin.Unit): main.proto.Lib.SearchedLibrary =
  `main.proto`.SearchedLibraryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val main.proto.Lib.SearchedLibraryOrBuilder.latestOrNull: main.proto.Lib.LibraryRelease?
  get() = if (hasLatest()) getLatest() else null

