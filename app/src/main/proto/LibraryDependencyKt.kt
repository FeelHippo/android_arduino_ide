// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: main/proto/lib.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package main.proto;

@kotlin.jvm.JvmName("-initializelibraryDependency")
public inline fun libraryDependency(block: main.proto.LibraryDependencyKt.Dsl.() -> kotlin.Unit): main.proto.Lib.LibraryDependency =
  main.proto.LibraryDependencyKt.Dsl._create(main.proto.Lib.LibraryDependency.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `main.proto.LibraryDependency`
 */
public object LibraryDependencyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: main.proto.Lib.LibraryDependency.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: main.proto.Lib.LibraryDependency.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): main.proto.Lib.LibraryDependency = _builder.build()

    /**
     * ```
     * Library name of the dependency.
     * ```
     *
     * `string name = 1;`
     */
    public var name: kotlin.String
      @kotlin.jvm.JvmName("getName")
        get() = _builder.name
      @kotlin.jvm.JvmName("setName")
        set(value) {
        _builder.name = value
      }
    /**
     * ```
     * Library name of the dependency.
     * ```
     *
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * Version constraint of the dependency.
     * ```
     *
     * `string version_constraint = 2;`
     */
    public var versionConstraint: kotlin.String
      @kotlin.jvm.JvmName("getVersionConstraint")
        get() = _builder.versionConstraint
      @kotlin.jvm.JvmName("setVersionConstraint")
        set(value) {
        _builder.versionConstraint = value
      }
    /**
     * ```
     * Version constraint of the dependency.
     * ```
     *
     * `string version_constraint = 2;`
     */
    public fun clearVersionConstraint() {
      _builder.clearVersionConstraint()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun main.proto.Lib.LibraryDependency.copy(block: `main.proto`.LibraryDependencyKt.Dsl.() -> kotlin.Unit): main.proto.Lib.LibraryDependency =
  `main.proto`.LibraryDependencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

