// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: main/proto/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package main.proto;

@kotlin.jvm.JvmName("-initializedownloadProgress")
public inline fun downloadProgress(block: main.proto.DownloadProgressKt.Dsl.() -> kotlin.Unit): main.proto.Common.DownloadProgress =
  main.proto.DownloadProgressKt.Dsl._create(main.proto.Common.DownloadProgress.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `main.proto.DownloadProgress`
 */
public object DownloadProgressKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: main.proto.Common.DownloadProgress.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: main.proto.Common.DownloadProgress.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): main.proto.Common.DownloadProgress = _builder.build()

    /**
     * ```
     * Sent when a download is started.
     * ```
     *
     * `.main.proto.DownloadProgressStart start = 1;`
     */
    public var start: main.proto.Common.DownloadProgressStart
      @kotlin.jvm.JvmName("getStart")
        get() = _builder.start
      @kotlin.jvm.JvmName("setStart")
        set(value) {
        _builder.start = value
      }
    /**
     * ```
     * Sent when a download is started.
     * ```
     *
     * `.main.proto.DownloadProgressStart start = 1;`
     */
    public fun clearStart() {
      _builder.clearStart()
    }
    /**
     * ```
     * Sent when a download is started.
     * ```
     *
     * `.main.proto.DownloadProgressStart start = 1;`
     * @return Whether the start field is set.
     */
    public fun hasStart(): kotlin.Boolean {
      return _builder.hasStart()
    }

    /**
     * ```
     * Progress updates for a download.
     * ```
     *
     * `.main.proto.DownloadProgressUpdate update = 2;`
     */
    public var update: main.proto.Common.DownloadProgressUpdate
      @kotlin.jvm.JvmName("getUpdate")
        get() = _builder.update
      @kotlin.jvm.JvmName("setUpdate")
        set(value) {
        _builder.update = value
      }
    /**
     * ```
     * Progress updates for a download.
     * ```
     *
     * `.main.proto.DownloadProgressUpdate update = 2;`
     */
    public fun clearUpdate() {
      _builder.clearUpdate()
    }
    /**
     * ```
     * Progress updates for a download.
     * ```
     *
     * `.main.proto.DownloadProgressUpdate update = 2;`
     * @return Whether the update field is set.
     */
    public fun hasUpdate(): kotlin.Boolean {
      return _builder.hasUpdate()
    }

    /**
     * ```
     * Sent when a download is finished or failed.
     * ```
     *
     * `.main.proto.DownloadProgressEnd end = 3;`
     */
    public var end: main.proto.Common.DownloadProgressEnd
      @kotlin.jvm.JvmName("getEnd")
        get() = _builder.end
      @kotlin.jvm.JvmName("setEnd")
        set(value) {
        _builder.end = value
      }
    /**
     * ```
     * Sent when a download is finished or failed.
     * ```
     *
     * `.main.proto.DownloadProgressEnd end = 3;`
     */
    public fun clearEnd() {
      _builder.clearEnd()
    }
    /**
     * ```
     * Sent when a download is finished or failed.
     * ```
     *
     * `.main.proto.DownloadProgressEnd end = 3;`
     * @return Whether the end field is set.
     */
    public fun hasEnd(): kotlin.Boolean {
      return _builder.hasEnd()
    }
    public val messageCase: main.proto.Common.DownloadProgress.MessageCase
    @kotlin.jvm.JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun main.proto.Common.DownloadProgress.copy(block: `main.proto`.DownloadProgressKt.Dsl.() -> kotlin.Unit): main.proto.Common.DownloadProgress =
  `main.proto`.DownloadProgressKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val main.proto.Common.DownloadProgressOrBuilder.startOrNull: main.proto.Common.DownloadProgressStart?
  get() = if (hasStart()) getStart() else null

public val main.proto.Common.DownloadProgressOrBuilder.updateOrNull: main.proto.Common.DownloadProgressUpdate?
  get() = if (hasUpdate()) getUpdate() else null

public val main.proto.Common.DownloadProgressOrBuilder.endOrNull: main.proto.Common.DownloadProgressEnd?
  get() = if (hasEnd()) getEnd() else null

